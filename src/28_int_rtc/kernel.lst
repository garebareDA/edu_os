     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
    13                              <1> 
    14                              <1> VECT_BASE equ 0x0010_0000
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1>   endstruc
    21                              <1> 
    22                              <1> %macro set_vect 1-*
    23                              <1>   push eax
    24                              <1>   push edi
    25                              <1> 
    26                              <1>   mov edi,VECT_BASE + (%1 * 8)
    27                              <1>   mov eax, %2
    28                              <1> 
    29                              <1>   mov [edi + 0], ax
    30                              <1>   shr eax, 16
    31                              <1>   mov [edi + 6], ax
    32                              <1> 
    33                              <1>   pop edi
    34                              <1>   pop eax
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro outp 2
    38                              <1>   mov al, %2
    39                              <1>   out %1, al
    40                              <1> %endmacro
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[C0000000]              mov [FONT_ADR], eax
    13                                  
    14 00000016 E873060000                cdecl init_int
    15                                    set_vect 0x00, int_zero_div
    23 0000001B 50                  <1>  push eax
    24 0000001C 57                  <1>  push edi
    25                              <1> 
    26 0000001D BF00001000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 00000022 B8[F5070000]        <1>  mov eax, %2
    28                              <1> 
    29 00000027 668907              <1>  mov [edi + 0], ax
    30 0000002A C1E810              <1>  shr eax, 16
    31 0000002D 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 00000031 5F                  <1>  pop edi
    34 00000032 58                  <1>  pop eax
    16                                    set_vect 0x28, int_rtc
    23 00000033 50                  <1>  push eax
    24 00000034 57                  <1>  push edi
    25                              <1> 
    26 00000035 BF40011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 0000003A B8[51080000]        <1>  mov eax, %2
    28                              <1> 
    29 0000003F 668907              <1>  mov [edi + 0], ax
    30 00000042 C1E810              <1>  shr eax, 16
    31 00000045 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 00000049 5F                  <1>  pop edi
    34 0000004A 58                  <1>  pop eax
    17 0000004B 6A10E8EC0700006683-       cdecl rtc_int_en, 0x10
    17 00000054 C404               
    18                                  
    19                                    outp 0x21, 0b1111_1011
    38 00000056 B0FB                <1>  mov al, %2
    39 00000058 E621                <1>  out %1, al
    20                                    outp 0xA1, 0b1111_1110
    38 0000005A B0FE                <1>  mov al, %2
    39 0000005C E6A1                <1>  out %1, al
    21                                  
    22 0000005E FB                        sti
    23                                  
    24 0000005F 6A0D6A3FE8DB010000-       cdecl draw_font, 63, 13
    24 00000068 6683C408           
    25 0000006C 6A046A3FE85C020000-       cdecl draw_color_bar, 63, 4
    25 00000075 6683C408           
    26 00000079 68[B0000000]680F01-       cdecl draw_str, 25, 14, 0x010F, .s0
    26 00000081 00006A0E6A19E8FC01-
    26 0000008A 00006683C410       
    27                                  
    28 00000090 B000                      mov al, 0
    29 00000092 F6F0                      div al
    30                                  
    31                                  .10L:
    32 00000094 A1[C4000000]              mov eax, [RTC_TIME]
    33 00000099 5068000700006A006A-       cdecl draw_time, 72, 0, 0x0700, eax
    33 000000A2 48E8490500006683C4-
    33 000000AB 10                 
    34 000000AC EBE6                    	jmp		.10L
    35                                  
    36 000000AE EBFE                      jmp $
    37                                  
    38 000000B0 48656C6C6F2C206B65-     .s0 db "Hello, kernel", 0
    38 000000B9 726E656C00         
    39                                  
    40 000000BE 00<rep 2h>              ALIGN 4, db 0
    41 000000C0 00000000                FONT_ADR: dd 0
    42 000000C4 00000000                RTC_TIME: dd 0
    43                                  
    44                                  %include	"../modules/protect/vga.s"
    45                              <1> vga_set_read_plane:
    46 000000C8 55                  <1>   push ebp
    47 000000C9 89E5                <1>   mov ebp, esp
    48                              <1> 
    49 000000CB 50                  <1>   push eax
    50 000000CC 52                  <1>   push edx
    51                              <1> 
    52 000000CD 8A6508              <1>   mov ah, [ebp + 8]
    53 000000D0 80E403              <1>   and ah, 0x03
    54 000000D3 B004                <1>   mov al, 0x04
    55 000000D5 66BACE03            <1>   mov dx, 0x03CE
    56 000000D9 66EF                <1>   out dx, ax
    57                              <1> 
    58 000000DB 5A                  <1>   pop edx
    59 000000DC 58                  <1>   pop eax
    60                              <1> 
    61 000000DD 89EC                <1>   mov esp, ebp
    62 000000DF 5D                  <1>   pop ebp
    63                              <1> 
    64 000000E0 C3                  <1>   ret
    65                              <1> 
    66                              <1> vga_set_write_plane:
    67 000000E1 55                  <1>   push ebp
    68 000000E2 89E5                <1>   mov ebp, esp
    69                              <1> 
    70 000000E4 50                  <1>   push eax
    71 000000E5 52                  <1>   push edx
    72                              <1> 
    73 000000E6 8A6508              <1>   mov ah, [ebp + 8]
    74 000000E9 80E40F              <1>   and ah, 0x0F
    75 000000EC B002                <1>   mov al, 0x02
    76 000000EE 66BAC403            <1>   mov dx, 0x03C4
    77 000000F2 66EF                <1>   out dx, ax
    78                              <1> 
    79 000000F4 5A                  <1>   pop edx
    80 000000F5 58                  <1>   pop eax
    81                              <1> 
    82 000000F6 89EC                <1>   mov esp, ebp
    83 000000F8 5D                  <1>   pop ebp
    84                              <1> 
    85 000000F9 C3                  <1>   ret
    86                              <1> 
    87                              <1> vram_font_copy:
    88 000000FA 55                  <1>   push ebp
    89 000000FB 89E5                <1>   mov ebp, esp
    90                              <1> 
    91 000000FD 50                  <1> 	push	eax
    92 000000FE 53                  <1> 	push	ebx
    93 000000FF 51                  <1> 	push	ecx
    94 00000100 52                  <1> 	push	edx
    95 00000101 56                  <1> 	push	esi
    96 00000102 57                  <1> 	push	edi
    97                              <1> 
    98 00000103 8B7508              <1>   mov esi, [ebp + 8]
    99 00000106 8B7D0C              <1>   mov edi, [ebp + 12]
   100 00000109 0FB74510            <1>   movzx eax, word [ebp + 16]
   101 0000010D 0FB75D14            <1>   movzx ebx, word [ebp + 20]
   102                              <1> 
   103 00000111 84C7                <1>   test bh, al
   104 00000113 0F94C6              <1>   setz dh
   105 00000116 FECE                <1>   dec dh
   106                              <1> 
   107 00000118 84C3                <1>   test bl, al
   108 0000011A 0F94C2              <1>   setz dl
   109 0000011D FECA                <1>   dec dl
   110                              <1> 
   111 0000011F FC                  <1>   cld
   112                              <1> 
   113 00000120 B910000000          <1>   mov ecx, 16
   114                              <1> 
   115                              <1> .10L:
   116 00000125 AC                  <1>   lodsb
   117 00000126 88C4                <1>   mov ah, al
   118 00000128 F6D4                <1>   not ah
   119                              <1> 
   120 0000012A 20D0                <1>   and al, dl
   121 0000012C F7C310000000        <1>   test ebx, 0x0010
   122 00000132 7404                <1>   jz .11F
   123 00000134 2227                <1>   and ah, [edi]
   124 00000136 EB02                <1>   jmp .11E
   125                              <1> 
   126                              <1> .11F:
   127 00000138 20F4                <1>   and ah, dh
   128                              <1> .11E:
   129 0000013A 08E0                <1>   or al, ah
   130 0000013C 8807                <1>   mov [edi], al
   131 0000013E 83C750              <1>   add edi, 80
   132 00000141 E2E2                <1>   loop .10L
   133                              <1> .10E:
   134 00000143 5F                  <1> 	pop		edi
   135 00000144 5E                  <1> 	pop		esi
   136 00000145 5A                  <1> 	pop		edx
   137 00000146 59                  <1> 	pop		ecx
   138 00000147 5B                  <1> 	pop		ebx
   139 00000148 58                  <1> 	pop		eax
   140                              <1> 
   141 00000149 89EC                <1>   mov esp, ebp
   142 0000014B 5D                  <1>   pop ebp
   143 0000014C C3                  <1>   ret
   144                              <1> 
   145                              <1> vram_bit_copy:
   146 0000014D 55                  <1>   push ebp
   147 0000014E 89E5                <1>   mov ebp, esp
   148                              <1> 
   149 00000150 50                  <1> 	push	eax
   150 00000151 53                  <1> 	push	ebx
   151 00000152 52                  <1> 	push	edx
   152 00000153 56                  <1> 	push	esi
   153 00000154 57                  <1> 	push	edi
   154                              <1> 
   155 00000155 8B7D0C              <1>   mov edi, [ebp + 12]
   156 00000158 0FB64510            <1>   movzx eax, byte [ebp + 16]
   157 0000015C 0FB65D14            <1>   movzx ebx, byte [ebp + 20]
   158 00000160 84C3                <1>   test bl, al
   159 00000162 0F94C3              <1>   setz bl
   160 00000165 FECB                <1>   dec bl
   161                              <1> 
   162 00000167 8A4508              <1>   mov al, [ebp + 8]
   163 0000016A 88C4                <1>   mov ah, al
   164 0000016C F6D4                <1>   not ah
   165                              <1> 
   166 0000016E 2227                <1>   and ah, [edi]
   167 00000170 20D8                <1>   and al, bl
   168 00000172 08E0                <1>   or al, ah
   169 00000174 8807                <1>   mov [edi], al
   170                              <1> 
   171 00000176 5F                  <1>   pop edi
   172 00000177 5E                  <1>   pop esi
   173 00000178 5A                  <1>   pop edx
   174 00000179 5B                  <1>   pop ebx
   175 0000017A 58                  <1>   pop eax
   176                              <1> 
   177 0000017B 89EC                <1>   mov esp, ebp
   178 0000017D 5D                  <1>   pop ebp
   179 0000017E C3                  <1>   ret
    45                                  %include	"../modules/protect/draw_char.s"
    46                              <1> draw_char:
    47 0000017F 55                  <1>   push ebp
    48 00000180 89E5                <1>   mov ebp, esp
    49                              <1> 
    50 00000182 50                  <1>   push	eax
    51 00000183 53                  <1> 	push	ebx
    52 00000184 51                  <1> 	push	ecx
    53 00000185 52                  <1> 	push	edx
    54 00000186 56                  <1> 	push	esi
    55 00000187 57                  <1> 	push	edi
    56                              <1> 
    57 00000188 0FB67514            <1>   movzx esi, byte [ebp + 20]
    58 0000018C C1E604              <1>   shl esi, 4
    59 0000018F 0335[C0000000]      <1>   add esi, [FONT_ADR]
    60                              <1> 
    61 00000195 8B7D0C              <1>   mov edi, [ebp + 12]
    62 00000198 C1E708              <1>   shl edi, 8
    63 0000019B 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    64 000001A2 037D08              <1>   add edi, [ebp + 8]
    65                              <1> 
    66 000001A5 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    67                              <1> 
    68 000001A9 6A03E818FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    68 000001B2 C404                <1>
    69 000001B4 6A08E826FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    69 000001BD C404                <1>
    70 000001BF 536A085756E831FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    70 000001C8 FF6683C410          <1>
    71                              <1> 
    72 000001CD 6A02E8F4FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    72 000001D6 C404                <1>
    73 000001D8 6A04E802FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    73 000001E1 C404                <1>
    74 000001E3 536A045756E80DFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    74 000001EC FF6683C410          <1>
    75                              <1> 
    76 000001F1 6A01E8D0FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    76 000001FA C404                <1>
    77 000001FC 6A02E8DEFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    77 00000205 C404                <1>
    78 00000207 536A025756E8E9FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
    78 00000210 FF6683C410          <1>
    79                              <1> 
    80 00000215 6A00E8ACFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    80 0000021E C404                <1>
    81 00000220 6A01E8BAFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    81 00000229 C404                <1>
    82 0000022B 536A015756E8C5FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
    82 00000234 FF6683C410          <1>
    83                              <1> 
    84 00000239 5F                  <1>   pop		edi
    85 0000023A 5E                  <1> 	pop		esi
    86 0000023B 5A                  <1> 	pop		edx
    87 0000023C 59                  <1> 	pop		ecx
    88 0000023D 5B                  <1> 	pop		ebx
    89 0000023E 58                  <1> 	pop		eax
    90                              <1> 
    91 0000023F 89EC                <1>   mov esp, ebp
    92 00000241 5D                  <1>   pop ebp
    93                              <1> 
    94 00000242 C3                  <1>   ret
    46                                  %include	"../modules/protect/draw_font.s"
    47                              <1> draw_font:
    48 00000243 55                  <1>   push ebp
    49 00000244 89E5                <1>   mov ebp, esp
    50                              <1> 
    51 00000246 50                  <1>   push eax
    52 00000247 53                  <1>   push ebx
    53 00000248 51                  <1>   push ecx
    54 00000249 52                  <1>   push edx
    55 0000024A 56                  <1>   push esi
    56 0000024B 57                  <1>   push edi
    57                              <1> 
    58 0000024C 8B7508              <1>   mov esi, [ebp + 8]
    59 0000024F 8B7D0C              <1>   mov edi, [ebp + 12]
    60                              <1> 
    61 00000252 B900000000          <1>   mov ecx, 0
    62                              <1> .10L:
    63 00000257 81F900010000        <1>   cmp ecx, 256
    64 0000025D 731F                <1>   jae .10E
    65 0000025F 89C8                <1>   mov eax, ecx
    66 00000261 83E00F              <1>   and eax, 0x0F
    67 00000264 01F0                <1>   add eax, esi
    68                              <1> 
    69 00000266 89CB                <1>   mov ebx, ecx
    70 00000268 C1EB04              <1>   shr ebx, 4
    71 0000026B 01FB                <1>   add ebx, edi
    72                              <1> 
    73 0000026D 516A075350E808FFFF- <1>   cdecl draw_char, eax, ebx, 0x07, ecx
    73 00000276 FF6683C410          <1>
    74                              <1> 
    75 0000027B 41                  <1>   inc ecx
    76 0000027C EBD9                <1>   jmp .10L
    77                              <1> 
    78                              <1> .10E:
    79 0000027E 5F                  <1>   pop edi
    80 0000027F 5E                  <1>   pop esi
    81 00000280 5A                  <1>   pop edx
    82 00000281 59                  <1>   pop ecx
    83 00000282 5B                  <1>   pop ebx
    84 00000283 58                  <1>   pop eax
    85                              <1> 
    86 00000284 89EC                <1>   mov esp, ebp
    87 00000286 5D                  <1>   pop ebp
    88                              <1> 
    89 00000287 C3                  <1>   ret
    47                                  %include  "../modules/protect/draw_str.s"
    48                              <1> draw_str:
    49 00000288 55                  <1>   push ebp
    50 00000289 89E5                <1>   mov ebp, esp
    51                              <1> 
    52 0000028B 50                  <1>   push eax
    53 0000028C 53                  <1>   push ebx
    54 0000028D 51                  <1>   push ecx
    55 0000028E 52                  <1>   push edx
    56 0000028F 56                  <1>   push esi
    57                              <1> 
    58 00000290 8B4D08              <1>   mov ecx, [ebp + 8]
    59 00000293 8B550C              <1>   mov edx, [ebp + 12]
    60 00000296 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    61 0000029A 8B7514              <1>   mov esi, [ebp + 20]
    62                              <1> 
    63 0000029D FC                  <1>   cld
    64                              <1> 
    65                              <1> .10L:
    66 0000029E AC                  <1>   lodsb
    67 0000029F 3C00                <1>   cmp al, 0
    68 000002A1 7425                <1>   je .10E
    69 000002A3 50535251E8D3FEFFFF- <1>   cdecl draw_char, ecx, edx, ebx, eax
    69 000002AC 6683C410            <1>
    70                              <1> 
    71 000002B0 41                  <1>   inc ecx
    72 000002B1 83F950              <1>   cmp ecx, 80
    73 000002B4 7C10                <1>   jl .12E
    74 000002B6 B900000000          <1>   mov ecx, 0
    75 000002BB 42                  <1>   inc edx
    76 000002BC 83FA1E              <1>   cmp edx, 30
    77 000002BF 7C05                <1>   jl .12E
    78 000002C1 BA00000000          <1>   mov edx, 0
    79                              <1> .12E:
    80 000002C6 EBD6                <1>   jmp .10L
    81                              <1> .10E:
    82 000002C8 5E                  <1>   pop esi
    83 000002C9 5A                  <1>   pop edx
    84 000002CA 59                  <1>   pop ecx
    85 000002CB 5B                  <1>   pop ebx
    86 000002CC 58                  <1>   pop eax
    87                              <1> 
    88 000002CD 89EC                <1>   mov esp, ebp
    89 000002CF 5D                  <1>   pop ebp
    90                              <1> 
    91 000002D0 C3                  <1>   ret
    48                                  %include "../modules/protect/draw_color_bar.s"
    49                              <1> draw_color_bar:
    50 000002D1 55                  <1>   push ebp
    51 000002D2 89E5                <1>   mov ebp, esp
    52                              <1> 
    53 000002D4 50                  <1>   push eax
    54 000002D5 53                  <1>   push ebx
    55 000002D6 51                  <1>   push ecx
    56 000002D7 52                  <1>   push edx
    57 000002D8 56                  <1>   push esi
    58 000002D9 57                  <1>   push edi
    59                              <1> 
    60 000002DA 8B7508              <1>   mov esi, [ebp + 8]
    61 000002DD 8B7B0C              <1>   mov edi, [ebx + 12]
    62                              <1> 
    63 000002E0 B900000000          <1>   mov ecx, 0
    64                              <1> 
    65                              <1> .10L:
    66 000002E5 83F910              <1>   cmp ecx, 16
    67 000002E8 732E                <1>   jae .10E
    68                              <1> 
    69 000002EA 89C8                <1>   mov eax, ecx
    70 000002EC 83E001              <1>   and eax, 0x01
    71 000002EF C1E003              <1>   shl eax, 3
    72 000002F2 01F0                <1>   add eax, esi
    73                              <1> 
    74 000002F4 89CB                <1>   mov ebx, ecx
    75 000002F6 D1EB                <1>   shr ebx, 1
    76 000002F8 01FB                <1>   add ebx, edi
    77                              <1> 
    78 000002FA 89CA                <1>   mov edx, ecx
    79 000002FC D1E2                <1>   shl edx, 1
    80 000002FE 8B92[2B030000]      <1>   mov edx, [.t0 + edx]
    81                              <1> 
    82 00000304 68[22030000]525350- <1>   cdecl draw_str, eax, ebx, edx, .s0
    82 0000030C E877FFFFFF6683C410  <1>
    83                              <1> 
    84 00000315 41                  <1>   inc ecx
    85 00000316 EBCD                <1>   jmp .10L
    86                              <1> .10E:
    87 00000318 5F                  <1>   pop edi
    88 00000319 5E                  <1>   pop esi
    89 0000031A 5A                  <1>   pop edx
    90 0000031B 59                  <1>   pop ecx
    91 0000031C 5B                  <1>   pop ebx
    92 0000031D 58                  <1>   pop eax
    93                              <1> 
    94 0000031E 89EC                <1>   mov esp, ebp
    95 00000320 5D                  <1>   pop ebp
    96                              <1> 
    97 00000321 C3                  <1>   ret
    98                              <1> 
    99 00000322 202020202020202000  <1> .s0:	db '        ', 0
   100                              <1> 
   101                              <1> .t0:
   102 0000032B 00000008            <1>   dw	0x0000, 0x0800
   103 0000032F 00010009            <1> 	dw	0x0100, 0x0900
   104 00000333 0002000A            <1> 	dw	0x0200, 0x0A00
   105 00000337 0003000B            <1> 	dw	0x0300, 0x0B00
   106 0000033B 0004000C            <1> 	dw	0x0400, 0x0C00
   107 0000033F 0005000D            <1> 	dw	0x0500, 0x0D00
   108 00000343 0006000E            <1> 	dw	0x0600, 0x0E00
   109 00000347 0007000F            <1> 	dw	0x0700, 0x0F00
    49                                  %include  "../modules/protect/draw_pixel.s"
    50                              <1> draw_pixel:
    51 0000034B 55                  <1>   push ebp
    52 0000034C 89E5                <1>   mov ebp, esp
    53 0000034E 50                  <1>   push eax
    54 0000034F 53                  <1>   push ebx
    55 00000350 51                  <1>   push ecx
    56 00000351 57                  <1>   push edi
    57                              <1> 
    58 00000352 8B7D0C              <1>   mov edi, [ebp + 12]
    59 00000355 C1E704              <1>   shl edi, 4
    60 00000358 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA_0000]
    61 0000035F 8B5D08              <1>   mov ebx, [ebp + 8]
    62 00000362 89D9                <1>   mov ecx, ebx
    63 00000364 C1EB03              <1>   shr ebx, 3
    64 00000367 01DF                <1>   add edi, ebx
    65                              <1> 
    66 00000369 83E107              <1>   and ecx, 0x07
    67 0000036C BB80000000          <1>   mov ebx, 0x80
    68 00000371 D3EB                <1>   shr ebx, cl
    69                              <1> 
    70 00000373 8B4D10              <1>   mov ecx, [ebp + 16]
    71                              <1> 
    72 00000376 6A03E84BFDFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    72 0000037F C404                <1>
    73 00000381 6A08E859FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    73 0000038A C404                <1>
    74 0000038C 516A085753E8B7FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    74 00000395 FF6683C410          <1>
    75                              <1> 
    76 0000039A 6A02E827FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    76 000003A3 C404                <1>
    77 000003A5 6A04E835FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    77 000003AE C404                <1>
    78 000003B0 516A045753E893FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    78 000003B9 FF6683C410          <1>
    79                              <1> 
    80 000003BE 6A01E803FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    80 000003C7 C404                <1>
    81 000003C9 6A02E811FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    81 000003D2 C404                <1>
    82 000003D4 516A025753E86FFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    82 000003DD FF6683C410          <1>
    83                              <1> 
    84 000003E2 6A00E8DFFCFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    84 000003EB C404                <1>
    85 000003ED 6A01E8EDFCFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    85 000003F6 C404                <1>
    86 000003F8 516A015753E84BFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x01, ecx
    86 00000401 FF6683C410          <1>
    87                              <1> 
    88 00000406 5F                  <1>   pop edi
    89 00000407 59                  <1>   pop ecx
    90 00000408 5B                  <1>   pop ebx
    91 00000409 58                  <1>   pop eax
    92                              <1> 
    93 0000040A 89EC                <1>   mov esp, ebp
    94 0000040C 5D                  <1>   pop ebp
    95 0000040D C3                  <1>   ret
    50                                  %include  "../modules/protect/draw_line.s"
    51                              <1> draw_line:
    52 0000040E 55                  <1>   push ebp
    53 0000040F 89E5                <1>   mov ebp, esp
    54                              <1> 
    55 00000411 6A00                <1>   push dword 0
    56 00000413 6A00                <1>   push dword 0
    57 00000415 6A00                <1>   push dword 0
    58 00000417 6A00                <1>   push dword 0
    59 00000419 6A00                <1>   push dword 0
    60 0000041B 6A00                <1>   push dword 0
    61 0000041D 6A00                <1>   push dword 0
    62                              <1> 
    63 0000041F 50                  <1>   push eax
    64 00000420 53                  <1>   push ebx
    65 00000421 51                  <1>   push ecx
    66 00000422 52                  <1>   push edx
    67 00000423 56                  <1>   push esi
    68 00000424 57                  <1>   push edi
    69                              <1> 
    70 00000425 8B4508              <1>   mov eax, [ebp + 8]
    71 00000428 8B5D10              <1>   mov ebx, [ebp + 16]
    72 0000042B 29C3                <1>   sub ebx, eax
    73 0000042D 7D09                <1>   jge .10F
    74                              <1> 
    75 0000042F F7DB                <1>   neg ebx
    76 00000431 BEFFFFFFFF          <1>   mov esi, -1
    77 00000436 EB05                <1>   jmp .10E
    78                              <1> .10F:
    79 00000438 BE01000000          <1>   mov esi, 1
    80                              <1> .10E:
    81 0000043D 8B4D0C              <1>   mov ecx, [ebp + 12]
    82 00000440 8B5514              <1>   mov edx, [ebp + 20]
    83 00000443 29CA                <1>   sub edx, ecx
    84 00000445 7D09                <1>   jge .20F
    85                              <1> 
    86 00000447 F7DA                <1>   neg edx
    87 00000449 BFFFFFFFFF          <1>   mov edi, -1
    88 0000044E EB05                <1>   jmp .20E
    89                              <1> .20F:
    90 00000450 BF01000000          <1>   mov edi, 1
    91                              <1> .20E:
    92 00000455 8945F8              <1>   mov [ebp - 8], eax
    93 00000458 895DF4              <1>   mov [ebp - 12], ebx
    94 0000045B 8975F0              <1>   mov [ebp - 16], esi
    95                              <1> 
    96 0000045E 894DEC              <1>   mov [ebp - 20], ecx
    97 00000461 8955E8              <1>   mov [ebp - 24], edx
    98 00000464 897DE4              <1>   mov [ebp - 28], edi
    99                              <1> 
   100 00000467 39D3                <1>   cmp ebx, edx
   101 00000469 7F08                <1>   jg .22F
   102                              <1> 
   103 0000046B 8D75EC              <1>   lea esi, [ebp - 20]
   104 0000046E 8D7DF8              <1>   lea edi, [ebp - 8]
   105                              <1> 
   106 00000471 EB06                <1>   jmp .22E
   107                              <1> .22F:
   108 00000473 8D75F8              <1>   lea esi, [ebp - 8]
   109 00000476 8D7DEC              <1>   lea edi, [ebp - 20]
   110                              <1> .22E:
   111 00000479 8B4EFC              <1>   mov ecx, [esi - 4]
   112 0000047C 83F900              <1>   cmp ecx, 0
   113 0000047F 7505                <1>   jnz .30E
   114 00000481 B901000000          <1>   mov ecx, 1
   115                              <1> .30E:
   116                              <1> .50L:
   117 00000486 FF7518FF75ECFF75F8- <1>   cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   117 0000048F E8B7FEFFFF6683C40C  <1>
   118                              <1> 
   119 00000498 8B46F8              <1>   mov eax, [esi - 8]
   120 0000049B 0106                <1>   add [esi - 0], eax
   121                              <1> 
   122 0000049D 8B45FC              <1>   mov eax, [ebp - 4]
   123 000004A0 0347FC              <1>   add eax, [edi - 4]
   124 000004A3 8B5EFC              <1>   mov ebx, [esi - 4]
   125                              <1> 
   126 000004A6 39D8                <1>   cmp eax, ebx
   127 000004A8 7C07                <1>   jl .52E
   128 000004AA 29D8                <1>   sub eax, ebx
   129                              <1> 
   130 000004AC 8B5FF8              <1>   mov ebx, [edi - 8]
   131 000004AF 011F                <1>   add [edi - 0], ebx
   132                              <1> 
   133                              <1> .52E:
   134 000004B1 8945FC              <1>   mov [ebp - 4], eax
   135 000004B4 E2D0                <1>   loop .50L
   136                              <1> 
   137                              <1> .50E:
   138 000004B6 5F                  <1>   pop edi
   139 000004B7 5E                  <1>   pop esi
   140 000004B8 5A                  <1>   pop edx
   141 000004B9 59                  <1>   pop ecx
   142 000004BA 5B                  <1>   pop ebx
   143 000004BB 58                  <1>   pop eax
   144                              <1> 
   145 000004BC 89EC                <1>   mov esp, ebp
   146 000004BE 5D                  <1>   pop ebp
   147 000004BF C3                  <1>   ret
    51                                  %include 	"../modules/protect/draw_rect.s"
    52                              <1> draw_rect:
    53 000004C0 55                  <1>   push ebp
    54 000004C1 89E5                <1>   mov ebp, esp
    55                              <1> 
    56 000004C3 50                  <1>   push eax
    57 000004C4 53                  <1>   push ebx
    58 000004C5 51                  <1>   push ecx
    59 000004C6 52                  <1>   push edx
    60 000004C7 56                  <1>   push esi
    61 000004C8 57                  <1>   push edi
    62                              <1> 
    63 000004C9 8B4508              <1>   mov eax, [ebp + 8]
    64 000004CC 8B5D0C              <1>   mov ebx, [ebp + 12]
    65 000004CF 8B4D10              <1>   mov ecx, [ebp + 16]
    66 000004D2 8B5514              <1>   mov edx, [ebp + 20]
    67 000004D5 8B7518              <1>   mov esi, [ebp + 24]
    68                              <1> 
    69 000004D8 39C8                <1>   cmp eax, ecx
    70 000004DA 7C01                <1>   jl .10E
    71 000004DC 91                  <1>   xchg eax, ecx
    72                              <1> 
    73                              <1> .10E:
    74 000004DD 39D3                <1>   cmp ebx, edx
    75 000004DF 7C02                <1>   jl .20E
    76 000004E1 87DA                <1>   xchg ebx, edx
    77                              <1> .20E:
    78 000004E3 5653515350E821FFFF- <1>   cdecl draw_line, eax, ebx, ecx, ebx, esi
    78 000004EC FF6683C414          <1>
    79 000004F1 5652505350E813FFFF- <1>   cdecl draw_line, eax, ebx, eax, edx, esi
    79 000004FA FF6683C414          <1>
    80                              <1> 
    81 000004FF 4A                  <1>   dec edx
    82 00000500 5652515250E804FFFF- <1>   cdecl draw_line, eax, edx, ecx, edx, esi
    82 00000509 FF6683C414          <1>
    83 0000050E 42                  <1>   inc edx
    84                              <1> 
    85 0000050F 49                  <1>   dec ecx
    86 00000510 5652515351E8F4FEFF- <1>   cdecl draw_line, ecx, ebx, ecx, edx, esi
    86 00000519 FF6683C414          <1>
    87                              <1> 
    88 0000051E 5F                  <1>   pop edi
    89 0000051F 5E                  <1>   pop esi
    90 00000520 5A                  <1>   pop edx
    91 00000521 59                  <1>   pop ecx
    92 00000522 5B                  <1>   pop ebx
    93 00000523 58                  <1>   pop eax
    94                              <1> 
    95 00000524 89EC                <1>   mov esp, ebp
    96 00000526 5D                  <1>   pop ebp
    97                              <1> 
    98 00000527 C3                  <1>   ret
    52                                  %include  "../modules/protect/itoa.s"
    53                              <1> itoa:
    54 00000528 55                  <1>   push ebp
    55 00000529 89E5                <1>   mov ebp, esp
    56                              <1> 
    57 0000052B 50                  <1>   push eax
    58 0000052C 53                  <1>   push ebx
    59 0000052D 51                  <1>   push ecx
    60 0000052E 52                  <1>   push edx
    61 0000052F 56                  <1>   push esi
    62 00000530 57                  <1>   push edi
    63                              <1> 
    64 00000531 8B4508              <1>   mov eax, [ebp + 8]
    65 00000534 8B750C              <1>   mov esi, [ebp + 12]
    66 00000537 8B4D10              <1>   mov ecx, [ebp + 16]
    67                              <1> 
    68 0000053A 89F7                <1>   mov edi, esi
    69 0000053C 01CF                <1>   add edi, ecx
    70 0000053E 4F                  <1>   dec edi
    71                              <1> 
    72 0000053F 8B5D18              <1>   mov ebx, [ebp + 24]
    73                              <1> 
    74 00000542 66F7C30100          <1>   test bx, 0b0001
    75                              <1> .10Q:
    76 00000547 7408                <1>   je .10E
    77 00000549 83F800              <1>   cmp eax, 0
    78                              <1> .12Q:
    79 0000054C 7D03                <1>   jge .12E
    80 0000054E 83CB02              <1>   or ebx, 0b0010
    81                              <1> .12E:
    82                              <1> .10E:
    83 00000551 F7C302000000        <1>   test ebx, 0b0010
    84                              <1> .20Q:
    85 00000557 7410                <1>   je .20E
    86 00000559 83F800              <1>   cmp eax, 0
    87                              <1> .22Q:
    88 0000055C 7D07                <1>   jge .22F
    89 0000055E F7D8                <1>   neg eax
    90 00000560 C6062D              <1>   mov [esi], byte '-'
    91 00000563 EB03                <1>   jmp .22E
    92                              <1> .22F:
    93 00000565 C6062B              <1>   mov [esi], byte '+'
    94                              <1> .22E:
    95 00000568 49                  <1>   dec ecx
    96                              <1> .20E:
    97 00000569 8B5D14              <1>   mov ebx, [ebp + 20]
    98                              <1> .30L:
    99 0000056C BA00000000          <1>   mov edx, 0
   100 00000571 F7F3                <1>   div ebx
   101                              <1> 
   102 00000573 89D6                <1>   mov esi, edx
   103 00000575 8A96[A0050000]      <1>   mov dl, byte [.ascii + esi]
   104 0000057B 8817                <1>   mov [edi], dl
   105 0000057D 4F                  <1>   dec edi
   106 0000057E 83F800              <1>   cmp eax, 0
   107 00000581 E0E9                <1>   loopnz .30L
   108                              <1> .30E:
   109 00000583 83F900              <1>   cmp ecx, 0
   110                              <1> .40Q:
   111 00000586 740E                <1>   je .40E
   112 00000588 B020                <1>   mov al, ' '
   113 0000058A 66837D1804          <1>   cmp [ebp + 24], word 0b0100
   114                              <1> .42Q:
   115 0000058F 7502                <1>   jne .42E
   116 00000591 B030                <1>   mov al, '0'
   117                              <1> .42E:
   118 00000593 FD                  <1>   std
   119 00000594 F3AA                <1>   rep stosb
   120                              <1> .40E:
   121 00000596 5F                  <1>   pop edi
   122 00000597 5E                  <1>   pop esi
   123 00000598 5A                  <1>   pop edx
   124 00000599 59                  <1>   pop ecx
   125 0000059A 5B                  <1>   pop ebx
   126 0000059B 58                  <1>   pop eax
   127                              <1> 
   128 0000059C 89EC                <1>   mov esp, ebp
   129 0000059E 5D                  <1>   pop ebp
   130 0000059F C3                  <1>   ret
   131                              <1> 
   132 000005A0 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"
   132 000005A9 39414243444546      <1>
    53                                  %include "../modules/protect/rtc.s"
    54                              <1> rtc_get_time:
    55 000005B0 55                  <1>   push ebp
    56 000005B1 89E5                <1>   mov ebp, esp
    57                              <1> 
    58 000005B3 53                  <1>   push ebx
    59                              <1> 
    60 000005B4 B00A                <1>   mov al, 0x0A
    61 000005B6 E670                <1>   out 0x70, al
    62 000005B8 E471                <1>   in al, 0x71
    63 000005BA A880                <1>   test al, 0x80
    64 000005BC 7407                <1>   je .10F
    65 000005BE B801000000          <1>   mov eax, 1
    66 000005C3 EB27                <1>   jmp .10E
    67                              <1> .10F:
    68 000005C5 B004                <1>   mov al, 0x04
    69 000005C7 E670                <1>   out 0x70, al
    70 000005C9 E471                <1>   in al, 0x71
    71                              <1> 
    72 000005CB C1E008              <1>   shl eax, 8
    73                              <1> 
    74 000005CE B002                <1>   mov al, 0x02
    75 000005D0 E670                <1>   out 0x70, al
    76 000005D2 E471                <1>   in al, 0x71
    77                              <1> 
    78 000005D4 C1E008              <1>   shl eax, 8
    79                              <1> 
    80 000005D7 B000                <1>   mov al, 0x00
    81 000005D9 E670                <1>   out 0x70, al
    82 000005DB E471                <1>   in al, 0x71
    83                              <1> 
    84 000005DD 25FFFFFF00          <1>   and eax, 0x00_FF_FF_FF
    85                              <1> 
    86 000005E2 8B5D08              <1>   mov ebx, [ebp + 8]
    87 000005E5 8903                <1>   mov [ebx], eax
    88 000005E7 B808000000          <1>   mov eax, 8
    89                              <1> .10E:
    90 000005EC 5B                  <1>   pop ebx
    91                              <1> 
    92 000005ED 89EC                <1>   mov esp, ebp
    93 000005EF 5D                  <1>   pop ebp
    94                              <1> 
    95 000005F0 C3                  <1>   ret
    54                                  %include "../modules/protect/draw_time.s"
    55                              <1> draw_time:
    56 000005F1 55                  <1>   push ebp
    57 000005F2 89E5                <1>   mov ebp, esp
    58                              <1> 
    59 000005F4 50                  <1>   push eax
    60 000005F5 53                  <1>   push ebx
    61                              <1> 
    62 000005F6 8B4514              <1>   mov eax, [ebp + 20]
    63 000005F9 3B05[76060000]      <1>   cmp eax, [.last]
    64 000005FF 7467                <1>   je .10E
    65 00000601 A3[76060000]        <1>   mov [.last], eax
    66                              <1> 
    67 00000606 BB00000000          <1>   mov ebx, 0
    68 0000060B 88C3                <1>   mov bl, al
    69 0000060D 6A046A106A0268-     <1>   cdecl itoa, ebx, .sec, 2, 16, 0b0100
    69 00000614 [84060000]53E80AFF- <1>
    69 0000061C FFFF6683C414        <1>
    70                              <1> 
    71 00000622 88E3                <1>   mov bl, ah
    72 00000624 6A046A106A0268-     <1>   cdecl itoa, ebx, .min, 2, 16, 0b0100
    72 0000062B [81060000]53E8F3FE- <1>
    72 00000633 FFFF6683C414        <1>
    73                              <1> 
    74 00000639 C1E810              <1>   shr eax, 16
    75 0000063C 6A046A106A0268-     <1>   cdecl itoa, eax, .hour, 2, 16, 0b0100
    75 00000643 [7E060000]50E8DBFE- <1>
    75 0000064B FFFF6683C414        <1>
    76                              <1> 
    77 00000651 68[7E060000]FF7510- <1>   cdecl draw_str, dword[ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    77 00000659 FF750CFF7508E824FC- <1>
    77 00000662 FFFF6683C410        <1>
    78                              <1> .10E:
    79 00000668 5B                  <1>   pop ebx
    80 00000669 58                  <1>   pop eax
    81                              <1> 
    82 0000066A 89EC                <1>   mov esp, ebp
    83 0000066C 5D                  <1>   pop ebp
    84                              <1> 
    85 0000066D C3                  <1>   ret
    86                              <1> 
    87                              <1> ALIGN 2, db 0
    88 0000066E 0000000000000000    <1> .temp:	dq	0
    89 00000676 0000000000000000    <1> .last:	dq	0
    90 0000067E 5A5A3A              <1> .hour:	db	"ZZ:"
    91 00000681 5A5A3A              <1> .min:	db	"ZZ:"
    92 00000684 5A5A00              <1> .sec:	db	"ZZ", 0
    55                                  %include  "../modules/protect/interrupt.s"
    56 00000687 90                  <1> ALIGN 4
    57 00000688 FF07                <1> IDTR:	dw 		8 * 256 - 1
    58 0000068A 00001000            <1> 		dd 		VECT_BASE
    59                              <1> 
    60                              <1> init_int:
    61 0000068E 50                  <1> 	push	eax
    62 0000068F 53                  <1> 	push	ebx
    63 00000690 51                  <1> 	push	ecx
    64 00000691 57                  <1> 	push	edi
    65                              <1> 
    66 00000692 8D05[D7070000]      <1> 	lea		eax, [int_default]
    67 00000698 BB008E0800          <1> 	mov		ebx, 0x0008_8E00
    68 0000069D 6693                <1> 	xchg	ax, bx
    69 0000069F B900010000          <1> 	mov		ecx, 256
    70 000006A4 BF00001000          <1> 	mov		edi, VECT_BASE
    71                              <1> 
    72                              <1> .10L:
    73 000006A9 891F                <1> 	mov		[edi + 0], ebx
    74 000006AB 894704              <1> 	mov		[edi + 4], eax
    75 000006AE 83C708              <1> 	add		edi, 8
    76 000006B1 E2F6                <1> 	loop	.10L
    77 000006B3 0F011D[88060000]    <1> 	lidt	[IDTR]
    78                              <1> 
    79 000006BA 5F                  <1> 	pop		edi
    80 000006BB 59                  <1> 	pop		ecx
    81 000006BC 5B                  <1> 	pop		ebx
    82 000006BD 58                  <1> 	pop		eax
    83                              <1> 
    84 000006BE C3                  <1> 	ret
    85                              <1> 
    86                              <1> int_stop:
    87 000006BF 50680F0600006A0F6A- <1> 	cdecl	draw_str, 25, 15, 0x060F, eax
    87 000006C8 19E8BAFBFFFF6683C4- <1>
    87 000006D1 10                  <1>
    88 000006D2 8B0424              <1> 	mov		eax, [esp + 0]
    89 000006D5 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p1, 8, 16, 0b0100
    89 000006DC [9A070000]50E842FE- <1>
    89 000006E4 FFFF6683C414        <1>
    90 000006EA 8B442404            <1> 	mov		eax, [esp + 4]
    91 000006EE 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p2, 8, 16, 0b0100
    91 000006F5 [AB070000]50E829FE- <1>
    91 000006FD FFFF6683C414        <1>
    92                              <1> 
    93 00000703 8B442408            <1> 	mov		eax, [esp + 8]
    94 00000707 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p3, 8, 16, 0b0100
    94 0000070E [BC070000]50E810FE- <1>
    94 00000716 FFFF6683C414        <1>
    95                              <1> 
    96 0000071C 8B44240C            <1> 	mov		eax, [esp +12]
    97 00000720 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p4, 8, 16, 0b0100
    97 00000727 [CD070000]50E8F7FD- <1>
    97 0000072F FFFF6683C414        <1>
    98                              <1> 
    99 00000735 68[93070000]68040F- <1> 	cdecl	draw_str, 25, 16, 0x0F04, .s1
    99 0000073D 00006A106A19E840FB- <1>
    99 00000746 FFFF6683C410        <1>
   100 0000074C 68[A4070000]68040F- <1> 	cdecl	draw_str, 25, 17, 0x0F04, .s2
   100 00000754 00006A116A19E829FB- <1>
   100 0000075D FFFF6683C410        <1>
   101 00000763 68[B5070000]68040F- <1> 	cdecl	draw_str, 25, 18, 0x0F04, .s3
   101 0000076B 00006A126A19E812FB- <1>
   101 00000774 FFFF6683C410        <1>
   102 0000077A 68[C6070000]68040F- <1> 	cdecl	draw_str, 25, 19, 0x0F04, .s4
   102 00000782 00006A136A19E8FBFA- <1>
   102 0000078B FFFF6683C410        <1>
   103                              <1> 
   104 00000791 EBFE                <1> 	jmp		$
   105                              <1> 
   106 00000793 4553502B20303A      <1> .s1		db	"ESP+ 0:"
   107 0000079A 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
   107 000007A3 00                  <1>
   108 000007A4 2020202B20343A      <1> .s2		db	"   + 4:"
   109 000007AB 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
   109 000007B4 00                  <1>
   110 000007B5 2020202B20383A      <1> .s3		db	"   + 8:"
   111 000007BC 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
   111 000007C5 00                  <1>
   112 000007C6 2020202B31323A      <1> .s4		db	"   +12:"
   113 000007CD 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
   113 000007D6 00                  <1>
   114                              <1> 
   115                              <1> int_default:
   116 000007D7 9C                  <1> 	pushf
   117 000007D8 0E                  <1> 	push	cs
   118 000007D9 68[BF060000]        <1> 	push	int_stop
   119                              <1> 
   120 000007DE B8[E4070000]        <1> 	mov		eax, .s0
   121 000007E3 CF                  <1> 	iret
   122                              <1> 
   123 000007E4 203C2020202053544F- <1> .s0		db	" <    STOP    > ", 0
   123 000007ED 50202020203E2000    <1>
   124                              <1> 
   125                              <1> int_zero_div:
   126 000007F5 9C                  <1> 	pushf
   127 000007F6 0E                  <1> 	push	cs
   128 000007F7 68[BF060000]        <1> 	push	int_stop
   129                              <1> 
   130 000007FC B8[02080000]        <1> 	mov		eax, .s0
   131 00000801 CF                  <1> 	iret
   132                              <1> 
   133 00000802 203C20205A45524F20- <1> .s0		db	" <  ZERO DIV  > ", 0
   133 0000080B 44495620203E2000    <1>
    56                                  %include  "../modules/protect/pic.s"
    57                              <1> init_pic:
    58 00000813 50                  <1>   push eax
    59                              <1> 
    60                              <1>   outp 0x20, 0x11
    38 00000814 B011                <2>  mov al, %2
    39 00000816 E620                <2>  out %1, al
    61                              <1>   outp 0x21, 0x20
    38 00000818 B020                <2>  mov al, %2
    39 0000081A E621                <2>  out %1, al
    62                              <1>   outp 0x21, 0x04
    38 0000081C B004                <2>  mov al, %2
    39 0000081E E621                <2>  out %1, al
    63                              <1>   outp 0x21, 0x05
    38 00000820 B005                <2>  mov al, %2
    39 00000822 E621                <2>  out %1, al
    64                              <1>   outp 0x21, 0xFF
    38 00000824 B0FF                <2>  mov al, %2
    39 00000826 E621                <2>  out %1, al
    65                              <1> 
    66                              <1>   outp 0xA0, 0x11
    38 00000828 B011                <2>  mov al, %2
    39 0000082A E6A0                <2>  out %1, al
    67                              <1>   outp 0xA1, 0x28
    38 0000082C B028                <2>  mov al, %2
    39 0000082E E6A1                <2>  out %1, al
    68                              <1>   outp 0xA1, 0x02
    38 00000830 B002                <2>  mov al, %2
    39 00000832 E6A1                <2>  out %1, al
    69                              <1>   outp 0xA1, 0x01
    38 00000834 B001                <2>  mov al, %2
    39 00000836 E6A1                <2>  out %1, al
    70                              <1>   outp 0xA1, 0xFF
    38 00000838 B0FF                <2>  mov al, %2
    39 0000083A E6A1                <2>  out %1, al
    71                              <1> 
    72 0000083C 58                  <1>   pop eax
    73                              <1> 
    74 0000083D C3                  <1>   ret
    57                                  %include  "../modules/protect/int_rtc.s"
    58                              <1> rtc_int_en:
    59 0000083E 55                  <1>   push ebp
    60 0000083F 89E5                <1>   mov ebp, esp
    61                              <1> 
    62                              <1>   outp 0x70, 0x0B
    38 00000841 B00B                <2>  mov al, %2
    39 00000843 E670                <2>  out %1, al
    63 00000845 E471                <1>   in al, 0x71
    64 00000847 0A4508              <1>   or al, [ebp + 8]
    65 0000084A E671                <1>   out 0x71, al
    66                              <1> 
    67 0000084C 58                  <1>   pop eax
    68 0000084D 89EC                <1>   mov esp, ebp
    69 0000084F 5D                  <1>   pop ebp
    70 00000850 C3                  <1>   ret
    71                              <1> 
    72                              <1> int_rtc:
    73 00000851 60                  <1>   pusha
    74 00000852 1E                  <1>   push ds
    75 00000853 06                  <1>   push es
    76                              <1> 
    77 00000854 66B81000            <1>   mov ax, 0x0010
    78 00000858 8ED8                <1>   mov ds, ax
    79 0000085A 8EC0                <1>   mov es, ax
    80                              <1> 
    81 0000085C 68[C4000000]E84AFD- <1>   cdecl rtc_get_time, RTC_TIME
    81 00000864 FFFF6683C404        <1>
    82                              <1>   outp 0x70, 0x0C
    38 0000086A B00C                <2>  mov al, %2
    39 0000086C E670                <2>  out %1, al
    83 0000086E E471                <1>   in al, 0x71
    84                              <1> 
    85 00000870 B020                <1>   mov al, 0x20
    86 00000872 E6A0                <1>   out 0xA0, al
    87 00000874 E620                <1>   out 0x20, al
    88                              <1> 
    89 00000876 07                  <1>   pop es
    90 00000877 1F                  <1>   pop ds
    91 00000878 61                  <1>   popa
    92 00000879 CF                  <1>   iret
    93                              <1> 
    58                                  
    59 0000087A 00<rep 1786h>             times KERNEL_SIZE - ($ - $$) db 0x00
