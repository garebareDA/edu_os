     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
    13                              <1> 
    14                              <1> VECT_BASE equ 0x0010_0000
    15                              <1> 
    16                              <1> RING_ITEM_SIZE equ (1 << 4)
    17                              <1> RING_INDEX_MASK equ (RING_ITEM_SIZE - 1)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1>   endstruc
    21                              <1> 
    22                              <1> %macro set_vect 1-*
    23                              <1>   push eax
    24                              <1>   push edi
    25                              <1> 
    26                              <1>   mov edi,VECT_BASE + (%1 * 8)
    27                              <1>   mov eax, %2
    28                              <1> 
    29                              <1>   mov [edi + 0], ax
    30                              <1>   shr eax, 16
    31                              <1>   mov [edi + 6], ax
    32                              <1> 
    33                              <1>   pop edi
    34                              <1>   pop eax
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro outp 2
    38                              <1>   mov al, %2
    39                              <1>   out %1, al
    40                              <1> %endmacro
    41                              <1> 
    42                              <1> struc ring_buff
    43 00000000 ????????            <1>   .rp resd 1
    44 00000004 ????????            <1>   .wp resd 1
    45 00000008 <res 40h>           <1>   .item resd RING_ITEM_SIZE
    46                              <1>   endstruc
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[28010000]              mov [FONT_ADR], eax
    13                                  
    14 00000016 E8DB060000                cdecl init_int
    15 0000001B E85C080000                cdecl	init_pic
    16                                  
    17                                    set_vect 0x00, int_zero_div
    23 00000020 50                  <1>  push eax
    24 00000021 57                  <1>  push edi
    25                              <1> 
    26 00000022 BF00001000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 00000027 B8[5E080000]        <1>  mov eax, %2
    28                              <1> 
    29 0000002C 668907              <1>  mov [edi + 0], ax
    30 0000002F C1E810              <1>  shr eax, 16
    31 00000032 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 00000036 5F                  <1>  pop edi
    34 00000037 58                  <1>  pop eax
    18                                    set_vect 0x20, int_timer
    23 00000038 50                  <1>  push eax
    24 00000039 57                  <1>  push edi
    25                              <1> 
    26 0000003A BF00011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 0000003F B8[040A0000]        <1>  mov eax, %2
    28                              <1> 
    29 00000044 668907              <1>  mov [edi + 0], ax
    30 00000047 C1E810              <1>  shr eax, 16
    31 0000004A 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 0000004E 5F                  <1>  pop edi
    34 0000004F 58                  <1>  pop eax
    19                                    set_vect 0x21, int_keyboard
    23 00000050 50                  <1>  push eax
    24 00000051 57                  <1>  push edi
    25                              <1> 
    26 00000052 BF08011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 00000057 B8[97090000]        <1>  mov eax, %2
    28                              <1> 
    29 0000005C 668907              <1>  mov [edi + 0], ax
    30 0000005F C1E810              <1>  shr eax, 16
    31 00000062 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 00000066 5F                  <1>  pop edi
    34 00000067 58                  <1>  pop eax
    20                                    set_vect 0x28, int_rtc
    23 00000068 50                  <1>  push eax
    24 00000069 57                  <1>  push edi
    25                              <1> 
    26 0000006A BF40011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 0000006F B8[BA080000]        <1>  mov eax, %2
    28                              <1> 
    29 00000074 668907              <1>  mov [edi + 0], ax
    30 00000077 C1E810              <1>  shr eax, 16
    31 0000007A 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 0000007E 5F                  <1>  pop edi
    34 0000007F 58                  <1>  pop eax
    21                                  
    22 00000080 6A10E8200800006683-       cdecl rtc_int_en, 0x10
    22 00000089 C404               
    23 0000008B E898090000                cdecl	int_en_timer0
    24                                  
    25                                    outp 0x21, 0b1111_1000
    38 00000090 B0F8                <1>  mov al, %2
    39 00000092 E621                <1>  out %1, al
    26                                    outp 0xA1, 0b1111_1110
    38 00000094 B0FE                <1>  mov al, %2
    39 00000096 E6A1                <1>  out %1, al
    27                                  
    28 00000098 FB                        sti
    29                                  
    30 00000099 6A0D6A3FE809020000-       cdecl draw_font, 63, 13
    30 000000A2 6683C408           
    31 000000A6 6A046A3FE88A020000-       cdecl draw_color_bar, 63, 4
    31 000000AF 6683C408           
    32                                  
    33 000000B3 68[13010000]680F01-       cdecl draw_str, 25, 14, 0x010F, .s0
    33 000000BB 00006A0E6A19E82A02-
    33 000000C4 00006683C410       
    34                                  
    35                                  .10L:
    36 000000CA A1[2C010000]              mov eax, [RTC_TIME]
    37 000000CF 5068000700006A006A-       cdecl draw_time, 72, 0, 0x0700, eax
    37 000000D8 48E87B0500006683C4-
    37 000000E1 10                 
    38                                  
    39 000000E2 E850090000                cdecl	draw_rotation_bar
    40                                  
    41 000000E7 68[24010000]68-           cdecl ring_rd, _KEY_BUFF, .int_key
    41 000000ED [BC090000]E8ED0700-
    41 000000F5 006683C408         
    42 000000FA 83F800                    cmp eax, 0
    43 000000FD 7412                      je .10E
    44                                  
    45 000000FF 68[BC090000]6A1D6A-       cdecl draw_key, 2, 29, _KEY_BUFF
    45 00000107 02E8370800006683C4-
    45 00000110 0C                 
    46                                  .10E:
    47 00000111 EBB7                      jmp .10L
    48                                  
    49 00000113 48656C6C6F2C206B65-     .s0 db "Hello, kernel", 0
    49 0000011C 726E656C00         
    50                                  
    51 00000121 00<rep 3h>              ALIGN 4, db 0
    52 00000124 00                      .int_key: db 0
    53                                  
    54 00000125 00<rep 3h>              ALIGN 4, db 0
    55 00000128 00000000                FONT_ADR: dd 0
    56 0000012C 00000000                RTC_TIME: dd 0
    57                                  
    58                                  %include	"../modules/protect/vga.s"
    59                              <1> vga_set_read_plane:
    60 00000130 55                  <1>   push ebp
    61 00000131 89E5                <1>   mov ebp, esp
    62                              <1> 
    63 00000133 50                  <1>   push eax
    64 00000134 52                  <1>   push edx
    65                              <1> 
    66 00000135 8A6508              <1>   mov ah, [ebp + 8]
    67 00000138 80E403              <1>   and ah, 0x03
    68 0000013B B004                <1>   mov al, 0x04
    69 0000013D 66BACE03            <1>   mov dx, 0x03CE
    70 00000141 66EF                <1>   out dx, ax
    71                              <1> 
    72 00000143 5A                  <1>   pop edx
    73 00000144 58                  <1>   pop eax
    74                              <1> 
    75 00000145 89EC                <1>   mov esp, ebp
    76 00000147 5D                  <1>   pop ebp
    77                              <1> 
    78 00000148 C3                  <1>   ret
    79                              <1> 
    80                              <1> vga_set_write_plane:
    81 00000149 55                  <1>   push ebp
    82 0000014A 89E5                <1>   mov ebp, esp
    83                              <1> 
    84 0000014C 50                  <1>   push eax
    85 0000014D 52                  <1>   push edx
    86                              <1> 
    87 0000014E 8A6508              <1>   mov ah, [ebp + 8]
    88 00000151 80E40F              <1>   and ah, 0x0F
    89 00000154 B002                <1>   mov al, 0x02
    90 00000156 66BAC403            <1>   mov dx, 0x03C4
    91 0000015A 66EF                <1>   out dx, ax
    92                              <1> 
    93 0000015C 5A                  <1>   pop edx
    94 0000015D 58                  <1>   pop eax
    95                              <1> 
    96 0000015E 89EC                <1>   mov esp, ebp
    97 00000160 5D                  <1>   pop ebp
    98                              <1> 
    99 00000161 C3                  <1>   ret
   100                              <1> 
   101                              <1> vram_font_copy:
   102 00000162 55                  <1>   push ebp
   103 00000163 89E5                <1>   mov ebp, esp
   104                              <1> 
   105 00000165 50                  <1> 	push	eax
   106 00000166 53                  <1> 	push	ebx
   107 00000167 51                  <1> 	push	ecx
   108 00000168 52                  <1> 	push	edx
   109 00000169 56                  <1> 	push	esi
   110 0000016A 57                  <1> 	push	edi
   111                              <1> 
   112 0000016B 8B7508              <1>   mov esi, [ebp + 8]
   113 0000016E 8B7D0C              <1>   mov edi, [ebp + 12]
   114 00000171 0FB74510            <1>   movzx eax, word [ebp + 16]
   115 00000175 0FB75D14            <1>   movzx ebx, word [ebp + 20]
   116                              <1> 
   117 00000179 84C7                <1>   test bh, al
   118 0000017B 0F94C6              <1>   setz dh
   119 0000017E FECE                <1>   dec dh
   120                              <1> 
   121 00000180 84C3                <1>   test bl, al
   122 00000182 0F94C2              <1>   setz dl
   123 00000185 FECA                <1>   dec dl
   124                              <1> 
   125 00000187 FC                  <1>   cld
   126                              <1> 
   127 00000188 B910000000          <1>   mov ecx, 16
   128                              <1> 
   129                              <1> .10L:
   130 0000018D AC                  <1>   lodsb
   131 0000018E 88C4                <1>   mov ah, al
   132 00000190 F6D4                <1>   not ah
   133                              <1> 
   134 00000192 20D0                <1>   and al, dl
   135 00000194 F7C310000000        <1>   test ebx, 0x0010
   136 0000019A 7404                <1>   jz .11F
   137 0000019C 2227                <1>   and ah, [edi]
   138 0000019E EB02                <1>   jmp .11E
   139                              <1> 
   140                              <1> .11F:
   141 000001A0 20F4                <1>   and ah, dh
   142                              <1> .11E:
   143 000001A2 08E0                <1>   or al, ah
   144 000001A4 8807                <1>   mov [edi], al
   145 000001A6 83C750              <1>   add edi, 80
   146 000001A9 E2E2                <1>   loop .10L
   147                              <1> .10E:
   148 000001AB 5F                  <1> 	pop		edi
   149 000001AC 5E                  <1> 	pop		esi
   150 000001AD 5A                  <1> 	pop		edx
   151 000001AE 59                  <1> 	pop		ecx
   152 000001AF 5B                  <1> 	pop		ebx
   153 000001B0 58                  <1> 	pop		eax
   154                              <1> 
   155 000001B1 89EC                <1>   mov esp, ebp
   156 000001B3 5D                  <1>   pop ebp
   157 000001B4 C3                  <1>   ret
   158                              <1> 
   159                              <1> vram_bit_copy:
   160 000001B5 55                  <1>   push ebp
   161 000001B6 89E5                <1>   mov ebp, esp
   162                              <1> 
   163 000001B8 50                  <1> 	push	eax
   164 000001B9 53                  <1> 	push	ebx
   165 000001BA 52                  <1> 	push	edx
   166 000001BB 56                  <1> 	push	esi
   167 000001BC 57                  <1> 	push	edi
   168                              <1> 
   169 000001BD 8B7D0C              <1>   mov edi, [ebp + 12]
   170 000001C0 0FB64510            <1>   movzx eax, byte [ebp + 16]
   171 000001C4 0FB65D14            <1>   movzx ebx, byte [ebp + 20]
   172 000001C8 84C3                <1>   test bl, al
   173 000001CA 0F94C3              <1>   setz bl
   174 000001CD FECB                <1>   dec bl
   175                              <1> 
   176 000001CF 8A4508              <1>   mov al, [ebp + 8]
   177 000001D2 88C4                <1>   mov ah, al
   178 000001D4 F6D4                <1>   not ah
   179                              <1> 
   180 000001D6 2227                <1>   and ah, [edi]
   181 000001D8 20D8                <1>   and al, bl
   182 000001DA 08E0                <1>   or al, ah
   183 000001DC 8807                <1>   mov [edi], al
   184                              <1> 
   185 000001DE 5F                  <1>   pop edi
   186 000001DF 5E                  <1>   pop esi
   187 000001E0 5A                  <1>   pop edx
   188 000001E1 5B                  <1>   pop ebx
   189 000001E2 58                  <1>   pop eax
   190                              <1> 
   191 000001E3 89EC                <1>   mov esp, ebp
   192 000001E5 5D                  <1>   pop ebp
   193 000001E6 C3                  <1>   ret
    59                                  %include	"../modules/protect/draw_char.s"
    60                              <1> draw_char:
    61 000001E7 55                  <1>   push ebp
    62 000001E8 89E5                <1>   mov ebp, esp
    63                              <1> 
    64 000001EA 50                  <1>   push	eax
    65 000001EB 53                  <1> 	push	ebx
    66 000001EC 51                  <1> 	push	ecx
    67 000001ED 52                  <1> 	push	edx
    68 000001EE 56                  <1> 	push	esi
    69 000001EF 57                  <1> 	push	edi
    70                              <1> 
    71 000001F0 0FB67514            <1>   movzx esi, byte [ebp + 20]
    72 000001F4 C1E604              <1>   shl esi, 4
    73 000001F7 0335[28010000]      <1>   add esi, [FONT_ADR]
    74                              <1> 
    75 000001FD 8B7D0C              <1>   mov edi, [ebp + 12]
    76 00000200 C1E708              <1>   shl edi, 8
    77 00000203 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    78 0000020A 037D08              <1>   add edi, [ebp + 8]
    79                              <1> 
    80 0000020D 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    81                              <1> 
    82 00000211 6A03E818FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    82 0000021A C404                <1>
    83 0000021C 6A08E826FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    83 00000225 C404                <1>
    84 00000227 536A085756E831FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    84 00000230 FF6683C410          <1>
    85                              <1> 
    86 00000235 6A02E8F4FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    86 0000023E C404                <1>
    87 00000240 6A04E802FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    87 00000249 C404                <1>
    88 0000024B 536A045756E80DFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    88 00000254 FF6683C410          <1>
    89                              <1> 
    90 00000259 6A01E8D0FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    90 00000262 C404                <1>
    91 00000264 6A02E8DEFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    91 0000026D C404                <1>
    92 0000026F 536A025756E8E9FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
    92 00000278 FF6683C410          <1>
    93                              <1> 
    94 0000027D 6A00E8ACFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    94 00000286 C404                <1>
    95 00000288 6A01E8BAFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    95 00000291 C404                <1>
    96 00000293 536A015756E8C5FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
    96 0000029C FF6683C410          <1>
    97                              <1> 
    98 000002A1 5F                  <1>   pop		edi
    99 000002A2 5E                  <1> 	pop		esi
   100 000002A3 5A                  <1> 	pop		edx
   101 000002A4 59                  <1> 	pop		ecx
   102 000002A5 5B                  <1> 	pop		ebx
   103 000002A6 58                  <1> 	pop		eax
   104                              <1> 
   105 000002A7 89EC                <1>   mov esp, ebp
   106 000002A9 5D                  <1>   pop ebp
   107                              <1> 
   108 000002AA C3                  <1>   ret
    60                                  %include	"../modules/protect/draw_font.s"
    61                              <1> draw_font:
    62 000002AB 55                  <1>   push ebp
    63 000002AC 89E5                <1>   mov ebp, esp
    64                              <1> 
    65 000002AE 50                  <1>   push eax
    66 000002AF 53                  <1>   push ebx
    67 000002B0 51                  <1>   push ecx
    68 000002B1 52                  <1>   push edx
    69 000002B2 56                  <1>   push esi
    70 000002B3 57                  <1>   push edi
    71                              <1> 
    72 000002B4 8B7508              <1>   mov esi, [ebp + 8]
    73 000002B7 8B7D0C              <1>   mov edi, [ebp + 12]
    74                              <1> 
    75 000002BA B900000000          <1>   mov ecx, 0
    76                              <1> .10L:
    77 000002BF 81F900010000        <1>   cmp ecx, 256
    78 000002C5 731F                <1>   jae .10E
    79 000002C7 89C8                <1>   mov eax, ecx
    80 000002C9 83E00F              <1>   and eax, 0x0F
    81 000002CC 01F0                <1>   add eax, esi
    82                              <1> 
    83 000002CE 89CB                <1>   mov ebx, ecx
    84 000002D0 C1EB04              <1>   shr ebx, 4
    85 000002D3 01FB                <1>   add ebx, edi
    86                              <1> 
    87 000002D5 516A075350E808FFFF- <1>   cdecl draw_char, eax, ebx, 0x07, ecx
    87 000002DE FF6683C410          <1>
    88                              <1> 
    89 000002E3 41                  <1>   inc ecx
    90 000002E4 EBD9                <1>   jmp .10L
    91                              <1> 
    92                              <1> .10E:
    93 000002E6 5F                  <1>   pop edi
    94 000002E7 5E                  <1>   pop esi
    95 000002E8 5A                  <1>   pop edx
    96 000002E9 59                  <1>   pop ecx
    97 000002EA 5B                  <1>   pop ebx
    98 000002EB 58                  <1>   pop eax
    99                              <1> 
   100 000002EC 89EC                <1>   mov esp, ebp
   101 000002EE 5D                  <1>   pop ebp
   102                              <1> 
   103 000002EF C3                  <1>   ret
    61                                  %include  "../modules/protect/draw_str.s"
    62                              <1> draw_str:
    63 000002F0 55                  <1>   push ebp
    64 000002F1 89E5                <1>   mov ebp, esp
    65                              <1> 
    66 000002F3 50                  <1>   push eax
    67 000002F4 53                  <1>   push ebx
    68 000002F5 51                  <1>   push ecx
    69 000002F6 52                  <1>   push edx
    70 000002F7 56                  <1>   push esi
    71                              <1> 
    72 000002F8 8B4D08              <1>   mov ecx, [ebp + 8]
    73 000002FB 8B550C              <1>   mov edx, [ebp + 12]
    74 000002FE 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    75 00000302 8B7514              <1>   mov esi, [ebp + 20]
    76                              <1> 
    77 00000305 FC                  <1>   cld
    78                              <1> 
    79                              <1> .10L:
    80 00000306 AC                  <1>   lodsb
    81 00000307 3C00                <1>   cmp al, 0
    82 00000309 7425                <1>   je .10E
    83 0000030B 50535251E8D3FEFFFF- <1>   cdecl draw_char, ecx, edx, ebx, eax
    83 00000314 6683C410            <1>
    84                              <1> 
    85 00000318 41                  <1>   inc ecx
    86 00000319 83F950              <1>   cmp ecx, 80
    87 0000031C 7C10                <1>   jl .12E
    88 0000031E B900000000          <1>   mov ecx, 0
    89 00000323 42                  <1>   inc edx
    90 00000324 83FA1E              <1>   cmp edx, 30
    91 00000327 7C05                <1>   jl .12E
    92 00000329 BA00000000          <1>   mov edx, 0
    93                              <1> .12E:
    94 0000032E EBD6                <1>   jmp .10L
    95                              <1> .10E:
    96 00000330 5E                  <1>   pop esi
    97 00000331 5A                  <1>   pop edx
    98 00000332 59                  <1>   pop ecx
    99 00000333 5B                  <1>   pop ebx
   100 00000334 58                  <1>   pop eax
   101                              <1> 
   102 00000335 89EC                <1>   mov esp, ebp
   103 00000337 5D                  <1>   pop ebp
   104                              <1> 
   105 00000338 C3                  <1>   ret
    62                                  %include "../modules/protect/draw_color_bar.s"
    63                              <1> draw_color_bar:
    64 00000339 55                  <1>   push ebp
    65 0000033A 89E5                <1>   mov ebp, esp
    66                              <1> 
    67 0000033C 50                  <1>   push eax
    68 0000033D 53                  <1>   push ebx
    69 0000033E 51                  <1>   push ecx
    70 0000033F 52                  <1>   push edx
    71 00000340 56                  <1>   push esi
    72 00000341 57                  <1>   push edi
    73                              <1> 
    74 00000342 8B7508              <1>   mov esi, [ebp + 8]
    75 00000345 8B7B0C              <1>   mov edi, [ebx + 12]
    76                              <1> 
    77 00000348 B900000000          <1>   mov ecx, 0
    78                              <1> 
    79                              <1> .10L:
    80 0000034D 83F910              <1>   cmp ecx, 16
    81 00000350 732E                <1>   jae .10E
    82                              <1> 
    83 00000352 89C8                <1>   mov eax, ecx
    84 00000354 83E001              <1>   and eax, 0x01
    85 00000357 C1E003              <1>   shl eax, 3
    86 0000035A 01F0                <1>   add eax, esi
    87                              <1> 
    88 0000035C 89CB                <1>   mov ebx, ecx
    89 0000035E D1EB                <1>   shr ebx, 1
    90 00000360 01FB                <1>   add ebx, edi
    91                              <1> 
    92 00000362 89CA                <1>   mov edx, ecx
    93 00000364 D1E2                <1>   shl edx, 1
    94 00000366 8B92[93030000]      <1>   mov edx, [.t0 + edx]
    95                              <1> 
    96 0000036C 68[8A030000]525350- <1>   cdecl draw_str, eax, ebx, edx, .s0
    96 00000374 E877FFFFFF6683C410  <1>
    97                              <1> 
    98 0000037D 41                  <1>   inc ecx
    99 0000037E EBCD                <1>   jmp .10L
   100                              <1> .10E:
   101 00000380 5F                  <1>   pop edi
   102 00000381 5E                  <1>   pop esi
   103 00000382 5A                  <1>   pop edx
   104 00000383 59                  <1>   pop ecx
   105 00000384 5B                  <1>   pop ebx
   106 00000385 58                  <1>   pop eax
   107                              <1> 
   108 00000386 89EC                <1>   mov esp, ebp
   109 00000388 5D                  <1>   pop ebp
   110                              <1> 
   111 00000389 C3                  <1>   ret
   112                              <1> 
   113 0000038A 202020202020202000  <1> .s0:	db '        ', 0
   114                              <1> 
   115                              <1> .t0:
   116 00000393 00000008            <1>   dw	0x0000, 0x0800
   117 00000397 00010009            <1> 	dw	0x0100, 0x0900
   118 0000039B 0002000A            <1> 	dw	0x0200, 0x0A00
   119 0000039F 0003000B            <1> 	dw	0x0300, 0x0B00
   120 000003A3 0004000C            <1> 	dw	0x0400, 0x0C00
   121 000003A7 0005000D            <1> 	dw	0x0500, 0x0D00
   122 000003AB 0006000E            <1> 	dw	0x0600, 0x0E00
   123 000003AF 0007000F            <1> 	dw	0x0700, 0x0F00
    63                                  %include  "../modules/protect/draw_pixel.s"
    64                              <1> draw_pixel:
    65 000003B3 55                  <1>   push ebp
    66 000003B4 89E5                <1>   mov ebp, esp
    67 000003B6 50                  <1>   push eax
    68 000003B7 53                  <1>   push ebx
    69 000003B8 51                  <1>   push ecx
    70 000003B9 57                  <1>   push edi
    71                              <1> 
    72 000003BA 8B7D0C              <1>   mov edi, [ebp + 12]
    73 000003BD C1E704              <1>   shl edi, 4
    74 000003C0 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA_0000]
    75 000003C7 8B5D08              <1>   mov ebx, [ebp + 8]
    76 000003CA 89D9                <1>   mov ecx, ebx
    77 000003CC C1EB03              <1>   shr ebx, 3
    78 000003CF 01DF                <1>   add edi, ebx
    79                              <1> 
    80 000003D1 83E107              <1>   and ecx, 0x07
    81 000003D4 BB80000000          <1>   mov ebx, 0x80
    82 000003D9 D3EB                <1>   shr ebx, cl
    83                              <1> 
    84 000003DB 8B4D10              <1>   mov ecx, [ebp + 16]
    85                              <1> 
    86 000003DE 6A03E84BFDFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    86 000003E7 C404                <1>
    87 000003E9 6A08E859FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    87 000003F2 C404                <1>
    88 000003F4 516A085753E8B7FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    88 000003FD FF6683C410          <1>
    89                              <1> 
    90 00000402 6A02E827FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    90 0000040B C404                <1>
    91 0000040D 6A04E835FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    91 00000416 C404                <1>
    92 00000418 516A045753E893FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    92 00000421 FF6683C410          <1>
    93                              <1> 
    94 00000426 6A01E803FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    94 0000042F C404                <1>
    95 00000431 6A02E811FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    95 0000043A C404                <1>
    96 0000043C 516A025753E86FFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    96 00000445 FF6683C410          <1>
    97                              <1> 
    98 0000044A 6A00E8DFFCFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    98 00000453 C404                <1>
    99 00000455 6A01E8EDFCFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    99 0000045E C404                <1>
   100 00000460 516A015753E84BFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x01, ecx
   100 00000469 FF6683C410          <1>
   101                              <1> 
   102 0000046E 5F                  <1>   pop edi
   103 0000046F 59                  <1>   pop ecx
   104 00000470 5B                  <1>   pop ebx
   105 00000471 58                  <1>   pop eax
   106                              <1> 
   107 00000472 89EC                <1>   mov esp, ebp
   108 00000474 5D                  <1>   pop ebp
   109 00000475 C3                  <1>   ret
    64                                  %include  "../modules/protect/draw_line.s"
    65                              <1> draw_line:
    66 00000476 55                  <1>   push ebp
    67 00000477 89E5                <1>   mov ebp, esp
    68                              <1> 
    69 00000479 6A00                <1>   push dword 0
    70 0000047B 6A00                <1>   push dword 0
    71 0000047D 6A00                <1>   push dword 0
    72 0000047F 6A00                <1>   push dword 0
    73 00000481 6A00                <1>   push dword 0
    74 00000483 6A00                <1>   push dword 0
    75 00000485 6A00                <1>   push dword 0
    76                              <1> 
    77 00000487 50                  <1>   push eax
    78 00000488 53                  <1>   push ebx
    79 00000489 51                  <1>   push ecx
    80 0000048A 52                  <1>   push edx
    81 0000048B 56                  <1>   push esi
    82 0000048C 57                  <1>   push edi
    83                              <1> 
    84 0000048D 8B4508              <1>   mov eax, [ebp + 8]
    85 00000490 8B5D10              <1>   mov ebx, [ebp + 16]
    86 00000493 29C3                <1>   sub ebx, eax
    87 00000495 7D09                <1>   jge .10F
    88                              <1> 
    89 00000497 F7DB                <1>   neg ebx
    90 00000499 BEFFFFFFFF          <1>   mov esi, -1
    91 0000049E EB05                <1>   jmp .10E
    92                              <1> .10F:
    93 000004A0 BE01000000          <1>   mov esi, 1
    94                              <1> .10E:
    95 000004A5 8B4D0C              <1>   mov ecx, [ebp + 12]
    96 000004A8 8B5514              <1>   mov edx, [ebp + 20]
    97 000004AB 29CA                <1>   sub edx, ecx
    98 000004AD 7D09                <1>   jge .20F
    99                              <1> 
   100 000004AF F7DA                <1>   neg edx
   101 000004B1 BFFFFFFFFF          <1>   mov edi, -1
   102 000004B6 EB05                <1>   jmp .20E
   103                              <1> .20F:
   104 000004B8 BF01000000          <1>   mov edi, 1
   105                              <1> .20E:
   106 000004BD 8945F8              <1>   mov [ebp - 8], eax
   107 000004C0 895DF4              <1>   mov [ebp - 12], ebx
   108 000004C3 8975F0              <1>   mov [ebp - 16], esi
   109                              <1> 
   110 000004C6 894DEC              <1>   mov [ebp - 20], ecx
   111 000004C9 8955E8              <1>   mov [ebp - 24], edx
   112 000004CC 897DE4              <1>   mov [ebp - 28], edi
   113                              <1> 
   114 000004CF 39D3                <1>   cmp ebx, edx
   115 000004D1 7F08                <1>   jg .22F
   116                              <1> 
   117 000004D3 8D75EC              <1>   lea esi, [ebp - 20]
   118 000004D6 8D7DF8              <1>   lea edi, [ebp - 8]
   119                              <1> 
   120 000004D9 EB06                <1>   jmp .22E
   121                              <1> .22F:
   122 000004DB 8D75F8              <1>   lea esi, [ebp - 8]
   123 000004DE 8D7DEC              <1>   lea edi, [ebp - 20]
   124                              <1> .22E:
   125 000004E1 8B4EFC              <1>   mov ecx, [esi - 4]
   126 000004E4 83F900              <1>   cmp ecx, 0
   127 000004E7 7505                <1>   jnz .30E
   128 000004E9 B901000000          <1>   mov ecx, 1
   129                              <1> .30E:
   130                              <1> .50L:
   131 000004EE FF7518FF75ECFF75F8- <1>   cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   131 000004F7 E8B7FEFFFF6683C40C  <1>
   132                              <1> 
   133 00000500 8B46F8              <1>   mov eax, [esi - 8]
   134 00000503 0106                <1>   add [esi - 0], eax
   135                              <1> 
   136 00000505 8B45FC              <1>   mov eax, [ebp - 4]
   137 00000508 0347FC              <1>   add eax, [edi - 4]
   138 0000050B 8B5EFC              <1>   mov ebx, [esi - 4]
   139                              <1> 
   140 0000050E 39D8                <1>   cmp eax, ebx
   141 00000510 7C07                <1>   jl .52E
   142 00000512 29D8                <1>   sub eax, ebx
   143                              <1> 
   144 00000514 8B5FF8              <1>   mov ebx, [edi - 8]
   145 00000517 011F                <1>   add [edi - 0], ebx
   146                              <1> 
   147                              <1> .52E:
   148 00000519 8945FC              <1>   mov [ebp - 4], eax
   149 0000051C E2D0                <1>   loop .50L
   150                              <1> 
   151                              <1> .50E:
   152 0000051E 5F                  <1>   pop edi
   153 0000051F 5E                  <1>   pop esi
   154 00000520 5A                  <1>   pop edx
   155 00000521 59                  <1>   pop ecx
   156 00000522 5B                  <1>   pop ebx
   157 00000523 58                  <1>   pop eax
   158                              <1> 
   159 00000524 89EC                <1>   mov esp, ebp
   160 00000526 5D                  <1>   pop ebp
   161 00000527 C3                  <1>   ret
    65                                  %include 	"../modules/protect/draw_rect.s"
    66                              <1> draw_rect:
    67 00000528 55                  <1>   push ebp
    68 00000529 89E5                <1>   mov ebp, esp
    69                              <1> 
    70 0000052B 50                  <1>   push eax
    71 0000052C 53                  <1>   push ebx
    72 0000052D 51                  <1>   push ecx
    73 0000052E 52                  <1>   push edx
    74 0000052F 56                  <1>   push esi
    75 00000530 57                  <1>   push edi
    76                              <1> 
    77 00000531 8B4508              <1>   mov eax, [ebp + 8]
    78 00000534 8B5D0C              <1>   mov ebx, [ebp + 12]
    79 00000537 8B4D10              <1>   mov ecx, [ebp + 16]
    80 0000053A 8B5514              <1>   mov edx, [ebp + 20]
    81 0000053D 8B7518              <1>   mov esi, [ebp + 24]
    82                              <1> 
    83 00000540 39C8                <1>   cmp eax, ecx
    84 00000542 7C01                <1>   jl .10E
    85 00000544 91                  <1>   xchg eax, ecx
    86                              <1> 
    87                              <1> .10E:
    88 00000545 39D3                <1>   cmp ebx, edx
    89 00000547 7C02                <1>   jl .20E
    90 00000549 87DA                <1>   xchg ebx, edx
    91                              <1> .20E:
    92 0000054B 5653515350E821FFFF- <1>   cdecl draw_line, eax, ebx, ecx, ebx, esi
    92 00000554 FF6683C414          <1>
    93 00000559 5652505350E813FFFF- <1>   cdecl draw_line, eax, ebx, eax, edx, esi
    93 00000562 FF6683C414          <1>
    94                              <1> 
    95 00000567 4A                  <1>   dec edx
    96 00000568 5652515250E804FFFF- <1>   cdecl draw_line, eax, edx, ecx, edx, esi
    96 00000571 FF6683C414          <1>
    97 00000576 42                  <1>   inc edx
    98                              <1> 
    99 00000577 49                  <1>   dec ecx
   100 00000578 5652515351E8F4FEFF- <1>   cdecl draw_line, ecx, ebx, ecx, edx, esi
   100 00000581 FF6683C414          <1>
   101                              <1> 
   102 00000586 5F                  <1>   pop edi
   103 00000587 5E                  <1>   pop esi
   104 00000588 5A                  <1>   pop edx
   105 00000589 59                  <1>   pop ecx
   106 0000058A 5B                  <1>   pop ebx
   107 0000058B 58                  <1>   pop eax
   108                              <1> 
   109 0000058C 89EC                <1>   mov esp, ebp
   110 0000058E 5D                  <1>   pop ebp
   111                              <1> 
   112 0000058F C3                  <1>   ret
    66                                  %include  "../modules/protect/itoa.s"
    67                              <1> itoa:
    68 00000590 55                  <1>   push ebp
    69 00000591 89E5                <1>   mov ebp, esp
    70                              <1> 
    71 00000593 50                  <1>   push eax
    72 00000594 53                  <1>   push ebx
    73 00000595 51                  <1>   push ecx
    74 00000596 52                  <1>   push edx
    75 00000597 56                  <1>   push esi
    76 00000598 57                  <1>   push edi
    77                              <1> 
    78 00000599 8B4508              <1>   mov eax, [ebp + 8]
    79 0000059C 8B750C              <1>   mov esi, [ebp + 12]
    80 0000059F 8B4D10              <1>   mov ecx, [ebp + 16]
    81                              <1> 
    82 000005A2 89F7                <1>   mov edi, esi
    83 000005A4 01CF                <1>   add edi, ecx
    84 000005A6 4F                  <1>   dec edi
    85                              <1> 
    86 000005A7 8B5D18              <1>   mov ebx, [ebp + 24]
    87                              <1> 
    88 000005AA 66F7C30100          <1>   test bx, 0b0001
    89                              <1> .10Q:
    90 000005AF 7408                <1>   je .10E
    91 000005B1 83F800              <1>   cmp eax, 0
    92                              <1> .12Q:
    93 000005B4 7D03                <1>   jge .12E
    94 000005B6 83CB02              <1>   or ebx, 0b0010
    95                              <1> .12E:
    96                              <1> .10E:
    97 000005B9 F7C302000000        <1>   test ebx, 0b0010
    98                              <1> .20Q:
    99 000005BF 7410                <1>   je .20E
   100 000005C1 83F800              <1>   cmp eax, 0
   101                              <1> .22Q:
   102 000005C4 7D07                <1>   jge .22F
   103 000005C6 F7D8                <1>   neg eax
   104 000005C8 C6062D              <1>   mov [esi], byte '-'
   105 000005CB EB03                <1>   jmp .22E
   106                              <1> .22F:
   107 000005CD C6062B              <1>   mov [esi], byte '+'
   108                              <1> .22E:
   109 000005D0 49                  <1>   dec ecx
   110                              <1> .20E:
   111 000005D1 8B5D14              <1>   mov ebx, [ebp + 20]
   112                              <1> .30L:
   113 000005D4 BA00000000          <1>   mov edx, 0
   114 000005D9 F7F3                <1>   div ebx
   115                              <1> 
   116 000005DB 89D6                <1>   mov esi, edx
   117 000005DD 8A96[08060000]      <1>   mov dl, byte [.ascii + esi]
   118 000005E3 8817                <1>   mov [edi], dl
   119 000005E5 4F                  <1>   dec edi
   120 000005E6 83F800              <1>   cmp eax, 0
   121 000005E9 E0E9                <1>   loopnz .30L
   122                              <1> .30E:
   123 000005EB 83F900              <1>   cmp ecx, 0
   124                              <1> .40Q:
   125 000005EE 740E                <1>   je .40E
   126 000005F0 B020                <1>   mov al, ' '
   127 000005F2 66837D1804          <1>   cmp [ebp + 24], word 0b0100
   128                              <1> .42Q:
   129 000005F7 7502                <1>   jne .42E
   130 000005F9 B030                <1>   mov al, '0'
   131                              <1> .42E:
   132 000005FB FD                  <1>   std
   133 000005FC F3AA                <1>   rep stosb
   134                              <1> .40E:
   135 000005FE 5F                  <1>   pop edi
   136 000005FF 5E                  <1>   pop esi
   137 00000600 5A                  <1>   pop edx
   138 00000601 59                  <1>   pop ecx
   139 00000602 5B                  <1>   pop ebx
   140 00000603 58                  <1>   pop eax
   141                              <1> 
   142 00000604 89EC                <1>   mov esp, ebp
   143 00000606 5D                  <1>   pop ebp
   144 00000607 C3                  <1>   ret
   145                              <1> 
   146 00000608 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"
   146 00000611 39414243444546      <1>
    67                                  %include "../modules/protect/rtc.s"
    68                              <1> rtc_get_time:
    69 00000618 55                  <1>   push ebp
    70 00000619 89E5                <1>   mov ebp, esp
    71                              <1> 
    72 0000061B 53                  <1>   push ebx
    73                              <1> 
    74 0000061C B00A                <1>   mov al, 0x0A
    75 0000061E E670                <1>   out 0x70, al
    76 00000620 E471                <1>   in al, 0x71
    77 00000622 A880                <1>   test al, 0x80
    78 00000624 7407                <1>   je .10F
    79 00000626 B801000000          <1>   mov eax, 1
    80 0000062B EB27                <1>   jmp .10E
    81                              <1> .10F:
    82 0000062D B004                <1>   mov al, 0x04
    83 0000062F E670                <1>   out 0x70, al
    84 00000631 E471                <1>   in al, 0x71
    85                              <1> 
    86 00000633 C1E008              <1>   shl eax, 8
    87                              <1> 
    88 00000636 B002                <1>   mov al, 0x02
    89 00000638 E670                <1>   out 0x70, al
    90 0000063A E471                <1>   in al, 0x71
    91                              <1> 
    92 0000063C C1E008              <1>   shl eax, 8
    93                              <1> 
    94 0000063F B000                <1>   mov al, 0x00
    95 00000641 E670                <1>   out 0x70, al
    96 00000643 E471                <1>   in al, 0x71
    97                              <1> 
    98 00000645 25FFFFFF00          <1>   and eax, 0x00_FF_FF_FF
    99                              <1> 
   100 0000064A 8B5D08              <1>   mov ebx, [ebp + 8]
   101 0000064D 8903                <1>   mov [ebx], eax
   102 0000064F B808000000          <1>   mov eax, 8
   103                              <1> .10E:
   104 00000654 5B                  <1>   pop ebx
   105                              <1> 
   106 00000655 89EC                <1>   mov esp, ebp
   107 00000657 5D                  <1>   pop ebp
   108                              <1> 
   109 00000658 C3                  <1>   ret
    68                                  %include "../modules/protect/draw_time.s"
    69                              <1> draw_time:
    70 00000659 55                  <1>   push ebp
    71 0000065A 89E5                <1>   mov ebp, esp
    72                              <1> 
    73 0000065C 50                  <1>   push eax
    74 0000065D 53                  <1>   push ebx
    75                              <1> 
    76 0000065E 8B4514              <1>   mov eax, [ebp + 20]
    77 00000661 3B05[DE060000]      <1>   cmp eax, [.last]
    78 00000667 7467                <1>   je .10E
    79 00000669 A3[DE060000]        <1>   mov [.last], eax
    80                              <1> 
    81 0000066E BB00000000          <1>   mov ebx, 0
    82 00000673 88C3                <1>   mov bl, al
    83 00000675 6A046A106A0268-     <1>   cdecl itoa, ebx, .sec, 2, 16, 0b0100
    83 0000067C [EC060000]53E80AFF- <1>
    83 00000684 FFFF6683C414        <1>
    84                              <1> 
    85 0000068A 88E3                <1>   mov bl, ah
    86 0000068C 6A046A106A0268-     <1>   cdecl itoa, ebx, .min, 2, 16, 0b0100
    86 00000693 [E9060000]53E8F3FE- <1>
    86 0000069B FFFF6683C414        <1>
    87                              <1> 
    88 000006A1 C1E810              <1>   shr eax, 16
    89 000006A4 6A046A106A0268-     <1>   cdecl itoa, eax, .hour, 2, 16, 0b0100
    89 000006AB [E6060000]50E8DBFE- <1>
    89 000006B3 FFFF6683C414        <1>
    90                              <1> 
    91 000006B9 68[E6060000]FF7510- <1>   cdecl draw_str, dword[ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    91 000006C1 FF750CFF7508E824FC- <1>
    91 000006CA FFFF6683C410        <1>
    92                              <1> .10E:
    93 000006D0 5B                  <1>   pop ebx
    94 000006D1 58                  <1>   pop eax
    95                              <1> 
    96 000006D2 89EC                <1>   mov esp, ebp
    97 000006D4 5D                  <1>   pop ebp
    98                              <1> 
    99 000006D5 C3                  <1>   ret
   100                              <1> 
   101                              <1> ALIGN 2, db 0
   102 000006D6 0000000000000000    <1> .temp:	dq	0
   103 000006DE 0000000000000000    <1> .last:	dq	0
   104 000006E6 5A5A3A              <1> .hour:	db	"ZZ:"
   105 000006E9 5A5A3A              <1> .min:	db	"ZZ:"
   106 000006EC 5A5A00              <1> .sec:	db	"ZZ", 0
    69                                  %include  "../modules/protect/interrupt.s"
    70 000006EF 90                  <1> ALIGN 4
    71 000006F0 FF07                <1> IDTR:	dw 		8 * 256 - 1
    72 000006F2 00001000            <1> 		dd 		VECT_BASE
    73                              <1> 
    74                              <1> init_int:
    75 000006F6 50                  <1> 	push	eax
    76 000006F7 53                  <1> 	push	ebx
    77 000006F8 51                  <1> 	push	ecx
    78 000006F9 57                  <1> 	push	edi
    79                              <1> 
    80 000006FA 8D05[40080000]      <1> 	lea		eax, [int_default]
    81 00000700 BB008E0800          <1> 	mov		ebx, 0x0008_8E00
    82 00000705 6693                <1> 	xchg	ax, bx
    83 00000707 B900010000          <1> 	mov		ecx, 256
    84 0000070C BF00001000          <1> 	mov		edi, VECT_BASE
    85                              <1> 
    86                              <1> .10L:
    87 00000711 891F                <1> 	mov		[edi + 0], ebx
    88 00000713 894704              <1> 	mov		[edi + 4], eax
    89 00000716 83C708              <1> 	add		edi, 8
    90 00000719 E2F6                <1> 	loop	.10L
    91 0000071B 0F011D[F0060000]    <1> 	lidt	[IDTR]
    92                              <1> 
    93 00000722 5F                  <1> 	pop		edi
    94 00000723 59                  <1> 	pop		ecx
    95 00000724 5B                  <1> 	pop		ebx
    96 00000725 58                  <1> 	pop		eax
    97                              <1> 
    98 00000726 C3                  <1> 	ret
    99                              <1> 
   100                              <1> int_stop:
   101 00000727 FB                  <1> 	sti
   102                              <1> 
   103 00000728 50680F0600006A0F6A- <1> 	cdecl	draw_str, 25, 15, 0x060F, eax
   103 00000731 19E8B9FBFFFF6683C4- <1>
   103 0000073A 10                  <1>
   104 0000073B 8B0424              <1> 	mov		eax, [esp + 0]
   105 0000073E 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p1, 8, 16, 0b0100
   105 00000745 [03080000]50E841FE- <1>
   105 0000074D FFFF6683C414        <1>
   106 00000753 8B442404            <1> 	mov		eax, [esp + 4]
   107 00000757 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p2, 8, 16, 0b0100
   107 0000075E [14080000]50E828FE- <1>
   107 00000766 FFFF6683C414        <1>
   108                              <1> 
   109 0000076C 8B442408            <1> 	mov		eax, [esp + 8]
   110 00000770 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p3, 8, 16, 0b0100
   110 00000777 [25080000]50E80FFE- <1>
   110 0000077F FFFF6683C414        <1>
   111                              <1> 
   112 00000785 8B44240C            <1> 	mov		eax, [esp +12]
   113 00000789 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p4, 8, 16, 0b0100
   113 00000790 [36080000]50E8F6FD- <1>
   113 00000798 FFFF6683C414        <1>
   114                              <1> 
   115 0000079E 68[FC070000]68040F- <1> 	cdecl	draw_str, 25, 16, 0x0F04, .s1
   115 000007A6 00006A106A19E83FFB- <1>
   115 000007AF FFFF6683C410        <1>
   116 000007B5 68[0D080000]68040F- <1> 	cdecl	draw_str, 25, 17, 0x0F04, .s2
   116 000007BD 00006A116A19E828FB- <1>
   116 000007C6 FFFF6683C410        <1>
   117 000007CC 68[1E080000]68040F- <1> 	cdecl	draw_str, 25, 18, 0x0F04, .s3
   117 000007D4 00006A126A19E811FB- <1>
   117 000007DD FFFF6683C410        <1>
   118 000007E3 68[2F080000]68040F- <1> 	cdecl	draw_str, 25, 19, 0x0F04, .s4
   118 000007EB 00006A136A19E8FAFA- <1>
   118 000007F4 FFFF6683C410        <1>
   119                              <1> 
   120 000007FA EBFE                <1> 	jmp		$
   121                              <1> 
   122 000007FC 4553502B20303A      <1> .s1		db	"ESP+ 0:"
   123 00000803 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
   123 0000080C 00                  <1>
   124 0000080D 2020202B20343A      <1> .s2		db	"   + 4:"
   125 00000814 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
   125 0000081D 00                  <1>
   126 0000081E 2020202B20383A      <1> .s3		db	"   + 8:"
   127 00000825 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
   127 0000082E 00                  <1>
   128 0000082F 2020202B31323A      <1> .s4		db	"   +12:"
   129 00000836 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
   129 0000083F 00                  <1>
   130                              <1> 
   131                              <1> int_default:
   132 00000840 9C                  <1> 	pushf
   133 00000841 0E                  <1> 	push	cs
   134 00000842 68[27070000]        <1> 	push	int_stop
   135                              <1> 
   136 00000847 B8[4D080000]        <1> 	mov		eax, .s0
   137 0000084C CF                  <1> 	iret
   138                              <1> 
   139 0000084D 203C2020202053544F- <1> .s0		db	" <    STOP    > ", 0
   139 00000856 50202020203E2000    <1>
   140                              <1> 
   141                              <1> int_zero_div:
   142 0000085E 9C                  <1> 	pushf
   143 0000085F 0E                  <1> 	push	cs
   144 00000860 68[27070000]        <1> 	push	int_stop
   145                              <1> 
   146 00000865 B8[6B080000]        <1> 	mov		eax, .s0
   147 0000086A CF                  <1> 	iret
   148                              <1> 
   149 0000086B 203C20205A45524F20- <1> .s0		db	" <  ZERO DIV  > ", 0
   149 00000874 44495620203E2000    <1>
    70                                  %include  "../modules/protect/pic.s"
    71                              <1> init_pic:
    72 0000087C 50                  <1>   push eax
    73                              <1> 
    74                              <1>   outp 0x20, 0x11
    38 0000087D B011                <2>  mov al, %2
    39 0000087F E620                <2>  out %1, al
    75                              <1>   outp 0x21, 0x20
    38 00000881 B020                <2>  mov al, %2
    39 00000883 E621                <2>  out %1, al
    76                              <1>   outp 0x21, 0x04
    38 00000885 B004                <2>  mov al, %2
    39 00000887 E621                <2>  out %1, al
    77                              <1>   outp 0x21, 0x05
    38 00000889 B005                <2>  mov al, %2
    39 0000088B E621                <2>  out %1, al
    78                              <1>   outp 0x21, 0xFF
    38 0000088D B0FF                <2>  mov al, %2
    39 0000088F E621                <2>  out %1, al
    79                              <1> 
    80                              <1>   outp 0xA0, 0x11
    38 00000891 B011                <2>  mov al, %2
    39 00000893 E6A0                <2>  out %1, al
    81                              <1>   outp 0xA1, 0x28
    38 00000895 B028                <2>  mov al, %2
    39 00000897 E6A1                <2>  out %1, al
    82                              <1>   outp 0xA1, 0x02
    38 00000899 B002                <2>  mov al, %2
    39 0000089B E6A1                <2>  out %1, al
    83                              <1>   outp 0xA1, 0x01
    38 0000089D B001                <2>  mov al, %2
    39 0000089F E6A1                <2>  out %1, al
    84                              <1>   outp 0xA1, 0xFF
    38 000008A1 B0FF                <2>  mov al, %2
    39 000008A3 E6A1                <2>  out %1, al
    85                              <1> 
    86 000008A5 58                  <1>   pop eax
    87                              <1> 
    88 000008A6 C3                  <1>   ret
    71                                  %include  "../modules/protect/int_rtc.s"
    72                              <1> rtc_int_en:
    73 000008A7 55                  <1>   push ebp
    74 000008A8 89E5                <1>   mov ebp, esp
    75                              <1> 
    76                              <1>   outp 0x70, 0x0B
    38 000008AA B00B                <2>  mov al, %2
    39 000008AC E670                <2>  out %1, al
    77 000008AE E471                <1>   in al, 0x71
    78 000008B0 0A4508              <1>   or al, [ebp + 8]
    79 000008B3 E671                <1>   out 0x71, al
    80                              <1> 
    81 000008B5 58                  <1>   pop eax
    82 000008B6 89EC                <1>   mov esp, ebp
    83 000008B8 5D                  <1>   pop ebp
    84 000008B9 C3                  <1>   ret
    85                              <1> 
    86                              <1> int_rtc:
    87 000008BA 60                  <1>   pusha
    88 000008BB 1E                  <1>   push ds
    89 000008BC 06                  <1>   push es
    90                              <1> 
    91 000008BD 66B81000            <1>   mov ax, 0x0010
    92 000008C1 8ED8                <1>   mov ds, ax
    93 000008C3 8EC0                <1>   mov es, ax
    94                              <1> 
    95 000008C5 68[2C010000]E849FD- <1>   cdecl rtc_get_time, RTC_TIME
    95 000008CD FFFF6683C404        <1>
    96                              <1>   outp 0x70, 0x0C
    38 000008D3 B00C                <2>  mov al, %2
    39 000008D5 E670                <2>  out %1, al
    97 000008D7 E471                <1>   in al, 0x71
    98                              <1> 
    99 000008D9 B020                <1>   mov al, 0x20
   100 000008DB E6A0                <1>   out 0xA0, al
   101 000008DD E620                <1>   out 0x20, al
   102                              <1> 
   103 000008DF 07                  <1>   pop es
   104 000008E0 1F                  <1>   pop ds
   105 000008E1 61                  <1>   popa
   106 000008E2 CF                  <1>   iret
   107                              <1> 
    72                                  %include  "../modules/protect/ring_buff.s"
    73                              <1> ring_rd:
    74 000008E3 55                  <1>   push ebp
    75 000008E4 89E5                <1>   mov ebp, esp
    76                              <1> 
    77 000008E6 53                  <1>   push ebx
    78 000008E7 56                  <1>   push esi
    79 000008E8 57                  <1>   push edi
    80                              <1> 
    81 000008E9 8B7508              <1>   mov esi, [ebp + 8]
    82 000008EC 8B7D0C              <1> 	mov edi, [ebp +12]
    83                              <1> 
    84 000008EF B800000000          <1>   mov eax, 0
    85 000008F4 8B1E                <1>   mov ebx, [esi + ring_buff.rp]
    86 000008F6 3B5E04              <1>   cmp ebx, [esi + ring_buff.wp]
    87 000008F9 7411                <1>   je .10E
    88                              <1> 
    89 000008FB 8A441E08            <1>   mov al, [esi + ring_buff.item + ebx]
    90                              <1> 
    91 000008FF 8807                <1>   mov [edi], al
    92                              <1> 
    93 00000901 43                  <1>   inc ebx
    94 00000902 83E30F              <1>   and ebx, RING_INDEX_MASK
    95 00000905 891E                <1>   mov [esi + ring_buff.rp], ebx
    96 00000907 B801000000          <1>   mov eax, 1
    97                              <1> .10E:
    98 0000090C 5F                  <1>   pop edi
    99 0000090D 5E                  <1>   pop esi
   100 0000090E 5B                  <1>   pop ebx
   101                              <1> 
   102 0000090F 89EC                <1>   mov esp, ebp
   103 00000911 5D                  <1>   pop ebp
   104                              <1> 
   105 00000912 C3                  <1>   ret
   106                              <1> 
   107                              <1> ring_wr:
   108 00000913 55                  <1>   push ebp
   109 00000914 89E5                <1>   mov ebp, esp
   110                              <1> 
   111 00000916 53                  <1>   push ebx
   112 00000917 51                  <1>   push ecx
   113 00000918 56                  <1>   push esi
   114                              <1> 
   115 00000919 8B7508              <1>   mov esi, [ebp + 8]
   116                              <1> 
   117 0000091C B800000000          <1>   mov eax, 0
   118 00000921 8B5E04              <1>   mov ebx, [esi + ring_buff.wp]
   119 00000924 89D9                <1>   mov ecx, ebx
   120 00000926 41                  <1>   inc ecx
   121 00000927 83E10F              <1>   and ecx, RING_INDEX_MASK
   122                              <1> 
   123 0000092A 3B0E                <1>   cmp ecx, [esi + ring_buff.rp]
   124 0000092C 740F                <1>   je .10E
   125                              <1> 
   126 0000092E 8A450C              <1>   mov		al, [ebp +12]
   127                              <1> 
   128 00000931 88441E08            <1>   mov [esi + ring_buff.item + ebx], al
   129 00000935 894E04              <1>   mov [esi + ring_buff.wp], ecx
   130                              <1> 
   131 00000938 B801000000          <1>   mov		eax, 1
   132                              <1> .10E:
   133 0000093D 5E                  <1>   pop esi
   134 0000093E 59                  <1>   pop ecx
   135 0000093F 5B                  <1>   pop ebx
   136                              <1> 
   137 00000940 89EC                <1>   mov esp, ebp
   138 00000942 5D                  <1>   pop ebp
   139 00000943 C3                  <1>   ret
   140                              <1> 
   141                              <1> draw_key:
   142 00000944 55                  <1>   push ebp
   143 00000945 89E5                <1>   mov ebp, esp
   144                              <1> 
   145 00000947 60                  <1>   pusha
   146                              <1> 
   147 00000948 8B5508              <1>   mov edx, [ebp + 8]
   148 0000094B 8B7D0C              <1>   mov edi, [ebp + 12]
   149 0000094E 8B7510              <1>   mov esi, [ebp + 16]
   150                              <1> 
   151 00000951 8B1E                <1>   mov ebx, [esi + ring_buff.rp]
   152 00000953 8D7608              <1>   lea esi, [esi + ring_buff.item]
   153 00000956 B910000000          <1>   mov ecx, RING_ITEM_SIZE
   154                              <1> 
   155                              <1> .10L:
   156 0000095B 4B                  <1>   dec ebx
   157 0000095C 83E30F              <1>   and ebx, RING_INDEX_MASK
   158 0000095F 8A041E              <1>   mov al, [esi + ebx]
   159                              <1> 
   160 00000962 6A046A106A0268-     <1>   cdecl itoa, eax, .tmp, 2, 16, 0b0100
   160 00000969 [93090000]50E81DFC- <1>
   160 00000971 FFFF6683C414        <1>
   161 00000977 68[93090000]6A0257- <1>   cdecl draw_str, edx, edi, 0x02, .tmp
   161 0000097F 52E86BF9FFFF6683C4- <1>
   161 00000988 10                  <1>
   162                              <1> 
   163 00000989 83C203              <1>   add edx, 3
   164                              <1> 
   165 0000098C E2CD                <1>   loop .10L
   166                              <1> .10E:
   167 0000098E 61                  <1>   popa
   168 0000098F 89EC                <1>   mov esp, ebp
   169 00000991 5D                  <1>   pop ebp
   170                              <1> 
   171 00000992 C3                  <1>   ret
   172 00000993 2D2D2000            <1> .tmp db "-- ", 0
    73                                  %include "../modules/protect/int_keyboard.s"
    74                              <1> int_keyboard:
    75 00000997 60                  <1>   pusha
    76 00000998 1E                  <1>   push ds
    77 00000999 06                  <1>   push es
    78                              <1> 
    79 0000099A 66B81000            <1>   mov ax, 0x0010
    80 0000099E 8ED8                <1>   mov ds, ax
    81 000009A0 8EC0                <1>   mov es, ax
    82                              <1> 
    83 000009A2 E460                <1>   in al, 0x60
    84                              <1> 
    85 000009A4 5068[BC090000]E864- <1>   cdecl ring_wr, _KEY_BUFF, eax
    85 000009AC FFFFFF6683C408      <1>
    86                              <1>   outp 0x20, 0x20
    38 000009B3 B020                <2>  mov al, %2
    39 000009B5 E620                <2>  out %1, al
    87                              <1> 
    88 000009B7 07                  <1>   pop es
    89 000009B8 1F                  <1>   pop ds
    90 000009B9 61                  <1>   popa
    91 000009BA CF                  <1>   iret
    92                              <1> 
    93 000009BB 00                  <1> ALIGN 4, db 0
    94 000009BC 00<rep 48h>         <1> _KEY_BUFF: times ring_buff_size db 0
    74                                  %include "modules/int_timer.s"
    75                              <1> int_timer:
    76 00000A04 60                  <1>   pushad
    77 00000A05 1E                  <1>   push ds
    78 00000A06 06                  <1>   push es
    79                              <1> 
    80 00000A07 66B81000            <1>   mov ax, 0x0010
    81 00000A0B 8ED8                <1>   mov ds, ax
    82 00000A0D 8EC0                <1>   mov es, ax
    83                              <1> 
    84 00000A0F FF05[200A0000]      <1>   inc dword [TIMER_COUNT]
    85                              <1>   outp 0x20, 0x20
    38 00000A15 B020                <2>  mov al, %2
    39 00000A17 E620                <2>  out %1, al
    86                              <1> 
    87 00000A19 07                  <1>   pop es
    88 00000A1A 1F                  <1>   pop ds
    89 00000A1B 61                  <1>   popad
    90                              <1> 
    91 00000A1C CF                  <1>   iret
    92                              <1> 
    93 00000A1D 00<rep 3h>          <1> ALIGN 4, db 0
    94 00000A20 0000000000000000    <1> TIMER_COUNT: dq 0
    75                                  %include "../modules/protect/timer.s"
    76                              <1> int_en_timer0:
    77 00000A28 50                  <1>   push eax
    78                              <1> 
    79                              <1>   outp 0x43, 0b_00_11_010_0
    38 00000A29 B034                <2>  mov al, %2
    39 00000A2B E643                <2>  out %1, al
    80                              <1>   outp 0x40, 0x9C
    38 00000A2D B09C                <2>  mov al, %2
    39 00000A2F E640                <2>  out %1, al
    81                              <1>   outp 0x40, 0x2E
    38 00000A31 B02E                <2>  mov al, %2
    39 00000A33 E640                <2>  out %1, al
    82                              <1> 
    83 00000A35 58                  <1>   pop eax
    84                              <1> 
    85 00000A36 C3                  <1>   ret
    76                                  %include "../modules/protect/draw_rotation_bar.s"
    77                              <1> draw_rotation_bar:
    78 00000A37 50                  <1>   push eax
    79                              <1> 
    80 00000A38 A1[200A0000]        <1>   mov eax, [TIMER_COUNT]
    81 00000A3D C1E804              <1>   shr eax, 4
    82 00000A40 3B05[680A0000]      <1>   cmp eax, [.index]
    83 00000A46 741E                <1>   je .10E
    84                              <1> 
    85                              <1> 
    86 00000A48 A3[680A0000]        <1>   mov [.index], eax
    87 00000A4D 83E003              <1>   and eax, 0x03
    88                              <1> 
    89 00000A50 8A80[6C0A0000]      <1>   mov al, [.table + eax]
    90 00000A56 506A0F6A1D6A00E885- <1>   cdecl draw_char, 0, 29, 0x000F, eax
    90 00000A5F F7FFFF6683C410      <1>
    91                              <1> .10E:
    92 00000A66 58                  <1>   pop eax
    93 00000A67 C3                  <1>   ret
    94                              <1> 
    95                              <1> ALIGN 4, db 0
    96 00000A68 00000000            <1> .index:		dd 0
    97 00000A6C 7C2F2D5C            <1> .table:		db	"|/-\"
    77                                  
    78 00000A70 00<rep 1590h>             times KERNEL_SIZE - ($ - $$) db 0x00
