     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
    13                              <1> 
    14                              <1> VECT_BASE equ 0x0010_0000
    15                              <1> 
    16                              <1> RING_ITEM_SIZE equ (1 << 4)
    17                              <1> RING_INDEX_MASK equ (RING_ITEM_SIZE - 1)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1>   endstruc
    21                              <1> 
    22                              <1> %macro set_vect 1-*
    23                              <1>   push eax
    24                              <1>   push edi
    25                              <1> 
    26                              <1>   mov edi,VECT_BASE + (%1 * 8)
    27                              <1>   mov eax, %2
    28                              <1> 
    29                              <1>   mov [edi + 0], ax
    30                              <1>   shr eax, 16
    31                              <1>   mov [edi + 6], ax
    32                              <1> 
    33                              <1>   pop edi
    34                              <1>   pop eax
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro outp 2
    38                              <1>   mov al, %2
    39                              <1>   out %1, al
    40                              <1> %endmacro
    41                              <1> 
    42                              <1> struc ring_buff
    43 00000000 ????????            <1>   .rp resd 1
    44 00000004 ????????            <1>   .wp resd 1
    45 00000008 <res 40h>           <1>   .item resd RING_ITEM_SIZE
    46                              <1>   endstruc
     3                                  
     4                                    ORG BOOT_LOAD
     5                                  
     6                                  entry:
     7 00000000 EB58                      jmp ipl
     8 00000002 90<rep 58h>               times 90 -($ - $$) db 0x90
     9                                  ipl:
    10 0000005A FA                        cli
    11 0000005B B80000                    mov ax, 0x0000
    12 0000005E 8ED8                      mov ds, ax
    13 00000060 8EC0                      mov es, ax
    14 00000062 8ED0                      mov ss, ax
    15 00000064 BC007C                    mov sp, BOOT_LOAD
    16                                  
    17 00000067 FB                        sti
    18 00000068 8816[BA00]                mov [BOOT + drive.no], dl
    19                                  
    20 0000006C 68[9900]E8500083C4-       cdecl puts, .s0
    20 00000074 02                 
    21                                  
    22 00000075 BB0F00                    mov bx, BOOT_SECT - 1
    23 00000078 B9007E                    mov cx, BOOT_LOAD + SECT_SIZE
    24                                  
    25 0000007B 515368[BA00]E89B00-       cdecl read_chs, BOOT, bx, cx
    25 00000083 83C406             
    26                                  
    27 00000086 39D8                      cmp ax, bx
    28                                  .10Q:
    29 00000088 740C                      jz .10E
    30                                  .10T:
    31 0000008A 68[A600]E8320083C4-       cdecl puts, .e0
    31 00000092 02                 
    32 00000093 E84B00                    call reboot
    33                                  .10E:
    34 00000096 E9D305                    jmp stage_2
    35                                  
    36 00000099 626F6F74696E672E2E-     .s0 db "booting...", 0x0A, 0x0D, 0
    36 000000A2 2E0A0D00           
    37 000000A6 4572726F723A536563-     .e0 db "Error:Sector: read", 0
    37 000000AF 746F723A2072656164-
    37 000000B8 00                 
    38 000000B9 00                      ALIGN 2, db 0
    39                                  BOOT:
    40                                    istruc	drive
    41 000000BA 0000                        at drive.no, dw 0
    42 000000BC 0000                        at drive.cyln, dw 0
    43 000000BE 0000                        at drive.head, dw 0
    44 000000C0 0200                        at drive.sect, dw 2
    45                                    iend
    46                                  
    47                                  %include "../modules/real/puts.s"
    48                              <1> puts:
    49 000000C2 55                  <1>   push bp
    50 000000C3 89E5                <1>   mov bp, sp
    51                              <1> 
    52 000000C5 50                  <1>   push ax
    53 000000C6 53                  <1>   push bx
    54 000000C7 56                  <1>   push si
    55                              <1> 
    56 000000C8 8B7604              <1>   mov si, [bp + 4]
    57 000000CB B40E                <1>   mov ah, 0x0E
    58 000000CD BB0000              <1>   mov bx, 0x0000
    59                              <1> 
    60 000000D0 FC                  <1>   cld
    61                              <1> 
    62                              <1> .10L:
    63 000000D1 AC                  <1>   lodsb
    64                              <1> 
    65 000000D2 3C00                <1>   cmp al, 0
    66 000000D4 7404                <1>   je .10E
    67                              <1> 
    68 000000D6 CD10                <1>   int 0x10
    69 000000D8 EBF7                <1>   jmp .10L
    70                              <1> 
    71                              <1> .10E:
    72 000000DA 5E                  <1>   pop si
    73 000000DB 5B                  <1>   pop bx
    74 000000DC 58                  <1>   pop ax
    75                              <1> 
    76 000000DD 89EC                <1>   mov sp, bp
    77 000000DF 5D                  <1>   pop bp
    78                              <1> 
    79 000000E0 C3                  <1>   ret
    48                                  %include "../modules/real/reboot.s"
    49                              <1> reboot:
    50 000000E1 68[FE00]E8DBFF83C4- <1>   cdecl puts, .s0
    50 000000E9 02                  <1>
    51                              <1> .10L:
    52 000000EA B81000              <1>   mov   ax, 0x10
    53 000000ED CD16                <1>   int   0x16
    54 000000EF 3C20                <1>   cmp   al, ' '
    55 000000F1 75F7                <1>   jne   .10L
    56 000000F3 68[1901]E8C9FF83C4- <1>   cdecl puts, .s1
    56 000000FB 02                  <1>
    57 000000FC CD19                <1>   int 0x19
    58 000000FE 0A0D50757368205370- <1> .s0 db 0x0A, 0x0D, "Push Space key to reboot", 0
    58 00000107 616365206B65792074- <1>
    58 00000110 6F207265626F6F7400  <1>
    59 00000119 0A0D0A0D00          <1> .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    49                                  %include "../modules/real/read_chs.s"
    50                              <1> read_chs:
    51 0000011E 55                  <1>   push bp
    52 0000011F 89E5                <1>   mov bp, sp
    53 00000121 6A03                <1>   push 3
    54 00000123 6A00                <1>   push 0
    55                              <1> 
    56 00000125 53                  <1>   push bx
    57 00000126 51                  <1>   push cx
    58 00000127 52                  <1>   push dx
    59 00000128 06                  <1>   push es
    60 00000129 56                  <1>   push si
    61                              <1> 
    62 0000012A 8B7604              <1>   mov si, [bp + 4]
    63 0000012D 8A6C02              <1>   mov ch, [si + drive.cyln + 0]
    64 00000130 8A4C03              <1>   mov cl, [si + drive.cyln + 1]
    65 00000133 C0E106              <1>   shl cl, 6
    66 00000136 0A4C06              <1>   or cl, [si + drive.sect]
    67                              <1> 
    68 00000139 8A7404              <1>   mov dh, [si + drive.head]
    69 0000013C 8A14                <1>   mov dl, [si + 0]
    70 0000013E B80000              <1>   mov ax, 0x0000
    71 00000141 8EC0                <1>   mov es, ax
    72 00000143 8B5E08              <1>   mov bx, [bp + 8]
    73                              <1> 
    74                              <1> .10L:
    75 00000146 B402                <1>   mov ah, 0x02
    76 00000148 8A4606              <1>   mov al, [bp + 6]
    77 0000014B CD13                <1>   int 0x13
    78 0000014D 7304                <1>   jnc .11E
    79 0000014F B000                <1>   mov al, 0
    80 00000151 EB0C                <1>   jmp .10E
    81                              <1> .11E:
    82 00000153 3C00                <1>   cmp al, 0
    83 00000155 7508                <1>   jne .10E
    84 00000157 B80000              <1>   mov ax, 0
    85 0000015A FF4EFE              <1>   dec word [bp - 2]
    86 0000015D 75E7                <1>   jnz .10L
    87                              <1> .10E:
    88 0000015F B400                <1>   mov ah, 0
    89 00000161 5E                  <1>   pop si
    90 00000162 07                  <1>   pop es
    91 00000163 5A                  <1>   pop dx
    92 00000164 59                  <1>   pop cx
    93 00000165 5B                  <1>   pop bx
    94                              <1> 
    95 00000166 89EC                <1>   mov sp, bp
    96 00000168 5D                  <1>   pop bp
    97 00000169 C3                  <1>   ret
    50                                  
    51 0000016A 00<rep 94h>               times 510 - ($ - $$) db 0x00
    52 000001FE 55AA                      db 0x55, 0xAA
    53                                  
    54                                    FONT:
    55 00000200 0000                      .seg: dw 0
    56 00000202 0000                      .off: dw 0
    57                                    ACPI_DATA:
    58 00000204 00000000                  .adr: dd 0
    59 00000208 00000000                  .len: dd 0
    60                                  
    61                                  %include "../modules/real/itoa.s"
    62                              <1> itoa:
    63 0000020C 55                  <1>   push bp
    64 0000020D 89E5                <1>   mov bp, sp
    65                              <1> 
    66 0000020F 50                  <1>   push ax
    67 00000210 53                  <1>   push bx
    68 00000211 51                  <1>   push cx
    69 00000212 52                  <1>   push dx
    70 00000213 56                  <1>   push si
    71 00000214 57                  <1>   push di
    72                              <1> 
    73 00000215 8B4604              <1>   mov ax, [bp + 4]
    74 00000218 8B7606              <1>   mov si, [bp + 6]
    75 0000021B 8B4E08              <1>   mov cx, [bp + 8]
    76                              <1> 
    77 0000021E 89F7                <1>   mov di, si
    78 00000220 01CF                <1>   add di, cx
    79 00000222 4F                  <1>   dec di
    80                              <1> 
    81 00000223 8B5E0C              <1>   mov bx, [bp + 12]
    82                              <1> 
    83 00000226 F7C30100            <1>   test bx, 0b0001
    84                              <1> .10Q:
    85 0000022A 7408                <1>   je .10E
    86 0000022C 83F800              <1>   cmp ax, 0
    87                              <1> .12Q:
    88 0000022F 7D03                <1>   jge .12E
    89 00000231 83CB02              <1>   or bx, 0b0010
    90                              <1> .12E:
    91                              <1> .10E:
    92 00000234 F7C30200            <1>   test bx, 0b0010
    93                              <1> .20Q:
    94 00000238 7410                <1>   je .20E
    95 0000023A 83F800              <1>   cmp ax, 0
    96                              <1> .22Q:
    97 0000023D 7D07                <1>   jge .22F
    98 0000023F F7D8                <1>   neg ax
    99 00000241 C6042D              <1>   mov [si], byte '-'
   100 00000244 EB03                <1>   jmp .22E
   101                              <1> .22F:
   102 00000246 C6042B              <1>   mov [si], byte '+'
   103                              <1> .22E:
   104 00000249 49                  <1>   dec cx
   105                              <1> .20E:
   106 0000024A 8B5E0A              <1>   mov bx, [bp + 10]
   107                              <1> .30L:
   108 0000024D BA0000              <1>   mov dx, 0
   109 00000250 F7F3                <1>   div bx
   110                              <1> 
   111 00000252 89D6                <1>   mov si, dx
   112 00000254 8A94[7C02]          <1>   mov dl, byte [.ascii + si]
   113 00000258 8815                <1>   mov [di], dl
   114 0000025A 4F                  <1>   dec di
   115 0000025B 83F800              <1>   cmp ax, 0
   116 0000025E E0ED                <1>   loopnz .30L
   117                              <1> .30E:
   118 00000260 83F900              <1>   cmp cx, 0
   119                              <1> .40Q:
   120 00000263 740D                <1>   je .40E
   121 00000265 B020                <1>   mov al, ' '
   122 00000267 837E0C04            <1>   cmp [bp + 12], word 0b0100
   123                              <1> .42Q:
   124 0000026B 7502                <1>   jne .42E
   125 0000026D B030                <1>   mov al, '0'
   126                              <1> .42E:
   127 0000026F FD                  <1>   std
   128 00000270 F3AA                <1>   rep stosb
   129                              <1> .40E:
   130 00000272 5F                  <1>   pop di
   131 00000273 5E                  <1>   pop si
   132 00000274 5A                  <1>   pop dx
   133 00000275 59                  <1>   pop cx
   134 00000276 5B                  <1>   pop bx
   135 00000277 58                  <1>   pop ax
   136                              <1> 
   137 00000278 89EC                <1>   mov sp, bp
   138 0000027A 5D                  <1>   pop bp
   139 0000027B C3                  <1>   ret
   140                              <1> 
   141 0000027C 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"
   141 00000285 39414243444546      <1>
    62                                  %include "../modules/real/get_drive_param.s"
    63                              <1> get_drive_param:
    64 0000028C 55                  <1>   push bp
    65 0000028D 89E5                <1>   mov bp, sp
    66                              <1> 
    67 0000028F 53                  <1>   push bx
    68 00000290 51                  <1>   push cx
    69 00000291 06                  <1>   push es
    70 00000292 56                  <1>   push si
    71 00000293 57                  <1>   push di
    72                              <1> 
    73 00000294 8B7604              <1>   mov si, [bp + 4]
    74 00000297 B80000              <1>   mov ax, 0
    75 0000029A 8EC0                <1>   mov es, ax
    76                              <1> 
    77 0000029C 89C7                <1>   mov di, ax
    78 0000029E B408                <1>   mov ah, 8
    79 000002A0 8A14                <1>   mov dl, [si + drive.no]
    80 000002A2 CD13                <1>   int 0x13
    81                              <1> .10Q:
    82 000002A4 721B                <1>   jc  .10F
    83                              <1> .10T:
    84 000002A6 88C8                <1>   mov al, cl
    85 000002A8 83E03F              <1>   and ax, 0x3F
    86                              <1> 
    87 000002AB C0E906              <1>   shr cl, 6
    88 000002AE C1C908              <1>   ror cx, 8
    89 000002B1 41                  <1>   inc cx
    90                              <1> 
    91 000002B2 0FB6DE              <1>   movzx bx, dh
    92 000002B5 43                  <1>   inc bx
    93                              <1> 
    94 000002B6 894C02              <1>   mov [si + drive.cyln], cx
    95 000002B9 895C04              <1>   mov [si + drive.head], bx
    96 000002BC 894406              <1>   mov [si + drive.sect], ax
    97 000002BF EB03                <1>   jmp .10E
    98                              <1> 
    99                              <1> .10F:
   100 000002C1 B80000              <1>   mov ax, 0
   101                              <1> .10E:
   102 000002C4 5F                  <1>   pop di
   103 000002C5 5E                  <1>   pop si
   104 000002C6 07                  <1>   pop es
   105 000002C7 59                  <1>   pop cx
   106 000002C8 5B                  <1>   pop bx
   107                              <1> 
   108 000002C9 89EC                <1>   mov sp, bp
   109 000002CB 5D                  <1>   pop bp
   110 000002CC C3                  <1>   ret
    63                                  %include "../modules/real/get_font_adr.s"
    64                              <1> get_font_adr:
    65 000002CD 55                  <1>   push bp
    66 000002CE 89E5                <1>   mov bp, sp
    67                              <1> 
    68 000002D0 50                  <1>   push ax
    69 000002D1 53                  <1>   push bx
    70 000002D2 56                  <1>   push si
    71 000002D3 06                  <1>   push es
    72 000002D4 55                  <1>   push bp
    73                              <1> 
    74 000002D5 8B7604              <1>   mov si, [bp + 4]
    75 000002D8 B83011              <1>   mov ax, 0x1130
    76 000002DB B706                <1>   mov bh, 0x06
    77 000002DD CD10                <1>   int 10h
    78                              <1> 
    79 000002DF 8C04                <1>   mov [si + 0], es
    80 000002E1 896C02              <1>   mov [si + 2], bp
    81                              <1> 
    82 000002E4 5D                  <1>   pop bp
    83 000002E5 07                  <1>   pop es
    84 000002E6 5E                  <1>   pop si
    85 000002E7 5B                  <1>   pop bx
    86 000002E8 58                  <1>   pop ax
    87                              <1> 
    88 000002E9 89EC                <1>   mov sp, bp
    89 000002EB 5D                  <1>   pop bp
    90 000002EC C3                  <1>   ret
    64                                  %include "../modules/real/get_mem_info.s"
    65                              <1> get_mem_info:
    66 000002ED 6650                <1>   push eax
    67 000002EF 6653                <1>   push ebx
    68 000002F1 6651                <1>   push ecx
    69 000002F3 6652                <1>   push edx
    70 000002F5 56                  <1>   push si
    71 000002F6 57                  <1>   push di
    72 000002F7 55                  <1>   push bp
    73                              <1> 
    74 000002F8 68[8C03]E8C4FD83C4- <1>   cdecl	puts, .s0
    74 00000300 02                  <1>
    75                              <1> 
    76 00000301 BD0000              <1>   mov bp, 0
    77 00000304 66BB00000000        <1>   mov ebx, 0
    78                              <1> .10L:
    79 0000030A 66B820E80000        <1>   mov eax, 0x0000E820
    80 00000310 66B914000000        <1>   mov ecx, E820_RECORD_SIZE
    81 00000316 66BA50414D53        <1>   mov edx, 'PAMS'
    82 0000031C BF[1804]            <1>   mov di , .b0
    83 0000031F CD15                <1>   int 0x15
    84 00000321 663D50414D53        <1>   cmp eax, 'PAMS'
    85 00000327 7402                <1>   je .12E
    86 00000329 EB4C                <1>   jmp .10E
    87                              <1> .12E:
    88 0000032B 7302                <1>   jnc .14E
    89 0000032D EB48                <1>   jmp .10E
    90                              <1> .14E:
    91 0000032F 57E8F90083C402      <1>   cdecl put_mem_info, di
    92 00000336 668B4510            <1>   mov eax, [di + 16]
    93 0000033A 6683F803            <1>   cmp eax, 3
    94 0000033E 750F                <1>   jne .15E
    95 00000340 668B05              <1>   mov eax, [di + 0]
    96 00000343 66A3[0402]          <1>   mov [ACPI_DATA.adr], eax
    97 00000347 668B4508            <1>   mov eax, [di + 8]
    98 0000034B 66A3[0802]          <1>   mov [ACPI_DATA.len], eax
    99                              <1> .15E:
   100 0000034F 6683FB00            <1>   cmp ebx, 0
   101 00000353 741C                <1>   jz .16E
   102 00000355 45                  <1>   inc bp
   103 00000356 83E507              <1>   and bp, 0x07
   104 00000359 7516                <1>   jnz .16E
   105 0000035B 68[FF03]E861FD83C4- <1>   cdecl puts, .s2
   105 00000363 02                  <1>
   106 00000364 B410                <1>   mov ah, 0x10
   107 00000366 CD16                <1>   int 0x16
   108 00000368 68[0A04]E854FD83C4- <1>   cdecl puts, .s3
   108 00000370 02                  <1>
   109                              <1> .16E:
   110 00000371 6683FB00            <1>   cmp ebx, 0
   111 00000375 7593                <1>   jne .10L
   112                              <1> .10E:
   113 00000377 68[CF03]E845FD83C4- <1>   cdecl	puts, .s1
   113 0000037F 02                  <1>
   114                              <1> 
   115 00000380 5D                  <1>   pop bp
   116 00000381 5F                  <1>   pop di
   117 00000382 5E                  <1>   pop si
   118 00000383 665A                <1>   pop edx
   119 00000385 6659                <1>   pop ecx
   120 00000387 665B                <1>   pop ebx
   121 00000389 6658                <1>   pop eax
   122 0000038B C3                  <1>   ret
   123                              <1> 
   124 0000038C 2045383230204D656D- <1> .s0:	db " E820 Memory Map:", 0x0A, 0x0D
   124 00000395 6F7279204D61703A0A- <1>
   124 0000039E 0D                  <1>
   125 0000039F 20426173655F5F5F5F- <1> 		db " Base_____________ Length___________ Type____", 0x0A, 0x0D, 0
   125 000003A8 5F5F5F5F5F5F5F5F5F- <1>
   125 000003B1 204C656E6774685F5F- <1>
   125 000003BA 5F5F5F5F5F5F5F5F5F- <1>
   125 000003C3 20547970655F5F5F5F- <1>
   125 000003CC 0A0D00              <1>
   126 000003CF 202D2D2D2D2D2D2D2D- <1> .s1:	db " ----------------- ----------------- --------", 0x0A, 0x0D, 0
   126 000003D8 2D2D2D2D2D2D2D2D2D- <1>
   126 000003E1 202D2D2D2D2D2D2D2D- <1>
   126 000003EA 2D2D2D2D2D2D2D2D2D- <1>
   126 000003F3 202D2D2D2D2D2D2D2D- <1>
   126 000003FC 0A0D00              <1>
   127 000003FF 203C6D6F72652E2E2E- <1> .s2:	db " <more...>", 0
   127 00000408 3E00                <1>
   128 0000040A 0D2020202020202020- <1> .s3:	db 0x0D, "          ", 0x0D, 0
   128 00000413 20200D00            <1>
   129                              <1> 
   130 00000417 00                  <1> ALIGN 4, db 0
   131 00000418 00<rep 14h>         <1> .b0:	times E820_RECORD_SIZE db 0
   132                              <1> 
   133                              <1> put_mem_info:
   134 0000042C 55                  <1>   push bp
   135 0000042D 89E5                <1>   mov bp, sp
   136 0000042F 53                  <1>   push bx
   137 00000430 56                  <1>   push si
   138                              <1> 
   139 00000431 8B7604              <1>   mov si, [bp + 4]
   140                              <1> 
   141 00000434 6A046A106A0468-     <1>   cdecl itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
   141 0000043B [0B05]FF7406E8C9FD- <1>
   141 00000443 83C40A              <1>
   142 00000446 6A046A106A0468-     <1>   cdecl itoa, word [si + 4], .p2 + 4, 4, 16, 0b0100
   142 0000044D [0F05]FF7404E8B7FD- <1>
   142 00000455 83C40A              <1>
   143 00000458 6A046A106A0468-     <1>   cdecl itoa, word [si + 2], .p3 + 0, 4, 16, 0b0100
   143 0000045F [1405]FF7402E8A5FD- <1>
   143 00000467 83C40A              <1>
   144 0000046A 6A046A106A0468-     <1>   cdecl itoa, word [si + 0], .p3 + 4, 4, 16, 0b0100
   144 00000471 [1805]FF34E894FD83- <1>
   144 00000479 C40A                <1>
   145                              <1> 
   146 0000047B 6A046A106A0468-     <1>   cdecl	itoa, word [si +14], .p4 + 0, 4, 16, 0b0100
   146 00000482 [1D05]FF740EE882FD- <1>
   146 0000048A 83C40A              <1>
   147 0000048D 6A046A106A0468-     <1> 	cdecl	itoa, word [si +12], .p4 + 4, 4, 16, 0b0100
   147 00000494 [2105]FF740CE870FD- <1>
   147 0000049C 83C40A              <1>
   148 0000049F 6A046A106A0468-     <1> 	cdecl	itoa, word [si +10], .p5 + 0, 4, 16, 0b0100
   148 000004A6 [2605]FF740AE85EFD- <1>
   148 000004AE 83C40A              <1>
   149 000004B1 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 8], .p5 + 4, 4, 16, 0b0100
   149 000004B8 [2A05]FF7408E84CFD- <1>
   149 000004C0 83C40A              <1>
   150                              <1> 
   151 000004C3 6A046A106A0468-     <1>   cdecl	itoa, word [si +18], .p6 + 0, 4, 16, 0b0100
   151 000004CA [2F05]FF7412E83AFD- <1>
   151 000004D2 83C40A              <1>
   152 000004D5 6A046A106A0468-     <1> 	cdecl	itoa, word [si +16], .p6 + 4, 4, 16, 0b0100
   152 000004DC [3305]FF7410E828FD- <1>
   152 000004E4 83C40A              <1>
   153                              <1> 
   154 000004E7 68[0A05]E8D5FB83C4- <1>   cdecl	puts, .s1
   154 000004EF 02                  <1>
   155                              <1> 
   156 000004F0 8B5C10              <1>   mov bx, [si + 16]
   157 000004F3 83E307              <1>   and bx, 0x07
   158 000004F6 D1E3                <1>   shl bx, 1
   159 000004F8 81C3[8C05]          <1>   add bx, .t0
   160 000004FC FF37E8C1FB83C402    <1>   cdecl puts, word [bx]
   161                              <1> 
   162 00000504 5E                  <1>   pop si
   163 00000505 5B                  <1>   pop bx
   164                              <1> 
   165 00000506 89EC                <1>   mov sp, bp
   166 00000508 5D                  <1>   pop bp
   167 00000509 C3                  <1>   ret
   168                              <1> 
   169 0000050A 20                  <1> .s1:	db " "
   170 0000050B 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"
   171 00000514 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   172 0000051D 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"
   173 00000526 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "
   174 0000052F 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ", 0
   175                              <1> 
   176 00000538 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   176 00000541 290A0D00            <1>
   177 00000545 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   177 0000054E 0A0D00              <1>
   178 00000551 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   178 0000055A 64290A0D00          <1>
   179 0000055F 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   179 00000568 7461290A0D00        <1>
   180 0000056E 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   180 00000577 53290A0D00          <1>
   181 0000057C 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   181 00000585 6F7279290A0D00      <1>
   182                              <1> 
   183 0000058C [3805][4505][5105]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   183 00000592 [5F05][6E05][7C05]- <1>
   183 00000598 [3805][3805]        <1>
    65                                  %include "../modules/real/kbc.s"
    66                              <1> KBC_Data_Write:
    67 0000059C 55                  <1>   push bp
    68 0000059D 89E5                <1>   mov bp, sp
    69                              <1> 
    70 0000059F 51                  <1>   push cx
    71 000005A0 B90000              <1>   mov cx, 0
    72                              <1> .10L:
    73 000005A3 E464                <1>   in al, 0x64
    74 000005A5 A802                <1>   test al , 0x02
    75 000005A7 E0FA                <1>   loopnz .10L
    76 000005A9 83F900              <1>   cmp cx, 0
    77 000005AC 7405                <1>   jz .20E
    78 000005AE 8A4604              <1>   mov al, [bp + 4]
    79 000005B1 E660                <1>   out 0x60, al
    80                              <1> .20E:
    81 000005B3 89C8                <1>   mov ax, cx
    82                              <1> 
    83 000005B5 59                  <1>   pop cx
    84 000005B6 89EC                <1>   mov sp, bp
    85 000005B8 5D                  <1>   pop bp
    86 000005B9 C3                  <1>   ret
    87                              <1> 
    88                              <1> KBC_Data_Read:
    89 000005BA 55                  <1>   push bp
    90 000005BB 89E5                <1>   mov bp, sp
    91 000005BD 51                  <1>   push cx
    92 000005BE 57                  <1>   push di
    93                              <1> 
    94 000005BF B90000              <1>   mov cx, 0
    95                              <1> 
    96                              <1> .10L:
    97 000005C2 E464                <1>   in al, 0x64
    98 000005C4 A801                <1>   test al, 0x01
    99 000005C6 E1FA                <1>   loopz .10L
   100                              <1> 
   101 000005C8 83F900              <1>   cmp cx, 0
   102 000005CB 7409                <1>   jz .20E
   103 000005CD B400                <1>   mov ah, 0x00
   104 000005CF E460                <1>   in al, 0x60
   105 000005D1 8B7E04              <1>   mov di, [bp + 4]
   106 000005D4 8905                <1>   mov [di + 0], ax
   107                              <1> .20E:
   108 000005D6 89C8                <1>   mov ax, cx
   109 000005D8 5F                  <1>   pop di
   110 000005D9 59                  <1>   pop cx
   111                              <1> 
   112 000005DA 89EC                <1>   mov sp, bp
   113 000005DC 5D                  <1>   pop bp
   114 000005DD C3                  <1>   ret
   115                              <1> 
   116                              <1> KBC_Cmd_Write:
   117 000005DE 55                  <1>   push bp
   118 000005DF 89E5                <1>   mov bp, sp
   119                              <1> 
   120 000005E1 51                  <1>   push cx
   121 000005E2 B90000              <1>   mov cx, 0
   122                              <1> .10L:
   123 000005E5 E464                <1>   in al, 0x64
   124 000005E7 A802                <1>   test al, 0x02
   125 000005E9 E0FA                <1>   loopnz .10L
   126 000005EB 83F900              <1>   cmp cx, 0
   127 000005EE 7405                <1>   jz .20E
   128 000005F0 8A4604              <1>   mov al, [bp + 4]
   129 000005F3 E664                <1>   out 0x64, al
   130                              <1> .20E:
   131 000005F5 89C8                <1>   mov ax, cx
   132                              <1> 
   133 000005F7 59                  <1>   pop cx
   134 000005F8 89EC                <1>   mov sp, bp
   135 000005FA 5D                  <1>   pop bp
   136 000005FB C3                  <1>   ret
    66                                  %include "../modules/real/lba_chs.s"
    67                              <1> lba_chs:
    68 000005FC 55                  <1>   push bp
    69 000005FD 89E5                <1>   mov bp, sp
    70                              <1> 
    71 000005FF 50                  <1>   push ax
    72 00000600 53                  <1>   push bx
    73 00000601 52                  <1>   push dx
    74 00000602 56                  <1>   push si
    75 00000603 57                  <1>   push di
    76                              <1> 
    77 00000604 8B7604              <1>   mov si, [bp + 4]
    78 00000607 8B7E06              <1>   mov di, [bp + 6]
    79                              <1> 
    80 0000060A 8A4404              <1>   mov al, [si + drive.head]
    81 0000060D F66406              <1>   mul byte [si + drive.sect]
    82 00000610 89C3                <1>   mov bx, ax
    83                              <1> 
    84 00000612 BA0000              <1>   mov dx, 0
    85 00000615 8B4608              <1>   mov ax, [bp + 8]
    86 00000618 F7F3                <1>   div bx
    87                              <1> 
    88 0000061A 894502              <1>   mov [di + drive.cyln], ax
    89 0000061D 89D0                <1>   mov ax, dx
    90 0000061F F67406              <1>   div byte [si + drive.sect]
    91                              <1> 
    92 00000622 0FB6D4              <1>   movzx dx, ah
    93 00000625 42                  <1>   inc dx
    94                              <1> 
    95 00000626 B400                <1>   mov ah, 0x00
    96                              <1> 
    97 00000628 894504              <1>   mov [di + drive.head], ax
    98 0000062B 895506              <1>   mov [di + drive.sect], dx
    99                              <1> 
   100 0000062E 5F                  <1>   pop di
   101 0000062F 5E                  <1>   pop si
   102 00000630 5A                  <1>   pop dx
   103 00000631 5B                  <1>   pop bx
   104 00000632 58                  <1>   pop ax
   105                              <1> 
   106 00000633 89EC                <1>   mov sp, bp
   107 00000635 5D                  <1>   pop bp
   108                              <1> 
   109 00000636 C3                  <1>   ret
    67                                  %include "../modules/real/read_lba.s"
    68                              <1> read_lba:
    69 00000637 55                  <1>   push bp
    70 00000638 89E5                <1>   mov bp, sp
    71 0000063A 56                  <1>   push si
    72 0000063B 8B7604              <1>   mov si, [bp + 4]
    73 0000063E 8B4606              <1>   mov ax, [bp + 6]
    74                              <1> 
    75 00000641 5068[6406]56E8B3FF- <1>   cdecl lba_chs, si, .chs, ax
    75 00000649 83C406              <1>
    76 0000064C 8A04                <1>   mov al, [si + drive.no]
    77 0000064E A2[6406]            <1>   mov [.chs + drive.no], al
    78                              <1> 
    79 00000651 FF760AFF760868-     <1>   cdecl read_chs, .chs, word [bp + 8], word [bp + 10]
    79 00000658 [6406]E8C1FA83C406  <1>
    80 00000660 89EC                <1>   mov sp, bp
    81 00000662 5D                  <1>   pop bp
    82 00000663 C3                  <1>   ret
    83                              <1> 
    84                              <1>   ALIGN 2
    85 00000664 00<rep 8h>          <1>   .chs: times drive_size db 0
    68                                  
    69                                  stage_2:
    70 0000066C 68[E606]E850FA83C4-       cdecl puts, .s0
    70 00000674 02                 
    71 00000675 68[BA00]E811FC83C4-       cdecl get_drive_param, BOOT
    71 0000067D 02                 
    72 0000067E 83F800                    cmp ax, 0
    73                                  .10Q:
    74 00000681 750C                      jne .10E
    75                                  .10T:
    76 00000683 68[1D07]E839FA83C4-       cdecl puts, .e0
    76 0000068B 02                 
    77 0000068C E852FA                    call reboot
    78                                  .10E:
    79 0000068F A1[BA00]                	mov	ax, [BOOT + drive.no]
    80 00000692 6A046A106A0268-         	cdecl	itoa, ax, .p1, 2, 16, 0b0100
    80 00000699 [FE06]50E86DFB83C4-
    80 000006A1 0A                 
    81 000006A2 A1[BC00]                	mov	ax, [BOOT + drive.cyln]
    82 000006A5 6A046A106A0468-         	cdecl	itoa, ax, .p2, 4, 16, 0b0100
    82 000006AC [0607]50E85AFB83C4-
    82 000006B4 0A                 
    83 000006B5 A1[BE00]                	mov	ax, [BOOT + drive.head]
    84 000006B8 6A046A106A0268-         	cdecl	itoa, ax, .p3, 2, 16, 0b0100
    84 000006BF [1007]50E847FB83C4-
    84 000006C7 0A                 
    85 000006C8 A1[C000]                	mov	ax, [BOOT + drive.sect]
    86 000006CB 6A046A106A0268-         	cdecl	itoa, ax, .p4, 2, 16, 0b0100
    86 000006D2 [1807]50E834FB83C4-
    86 000006DA 0A                 
    87 000006DB 68[F506]E8E1F983C4-     	cdecl	puts, .s1
    87 000006E3 02                 
    88 000006E4 EB52                      jmp stage_3
    89 000006E6 326E64207374616765-     .s0		db	"2nd stage...", 0x0A, 0x0D, 0
    89 000006EF 2E2E2E0A0D00       
    90 000006F5 2044726976653A3078      .s1		db	" Drive:0x"
    91 000006FE 20202C20433A3078        .p1		db	"  , C:0x"
    92 00000706 202020202C20483A30-     .p2		db	"    , H:0x"
    92 0000070F 78                 
    93 00000710 20202C20533A3078        .p3		db	"  , S:0x"
    94 00000718 20200A0D00              .p4		db	"  ", 0x0A, 0x0D, 0
    95                                  
    96 0000071D 43616E277420676574-     .e0		db	"Can't get drive parameter.", 0
    96 00000726 206472697665207061-
    96 0000072F 72616D657465722E00 
    97                                  
    98                                  stage_3:
    99 00000738 68[B507]E884F983C4-       cdecl puts, .s0
    99 00000740 02                 
   100 00000741 68[0002]E886FB83C4-       cdecl get_font_adr, FONT
   100 00000749 02                 
   101 0000074A 6A046A106A0468-           cdecl itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   101 00000751 [D207]FF36[0002]E8-
   101 00000758 B2FA83C40A         
   102 0000075D 6A046A106A0468-           cdecl	itoa, word [FONT.off], .p2, 4, 16, 0b0100
   102 00000764 [D707]FF36[0202]E8-
   102 0000076B 9FFA83C40A         
   103 00000770 68[C407]E84CF983C4-     	cdecl	puts, .s1
   103 00000778 02                 
   104                                  
   105 00000779 E871FB                    cdecl get_mem_info
   106                                  
   107 0000077C 66A1[0402]                mov eax, [ACPI_DATA.adr]
   108 00000780 6683F800                  cmp eax, 0
   109 00000784 742D                      je .10E
   110                                  
   111 00000786 6A046A106A0468-           cdecl itoa, ax, .p4, 4, 16, 0b0100
   111 0000078D [F007]50E879FA83C4-
   111 00000795 0A                 
   112 00000796 66C1E810                  shr eax, 16
   113 0000079A 6A046A106A0468-           cdecl itoa, ax, .p3, 4, 16, 0b0100
   113 000007A1 [EC07]50E865FA83C4-
   113 000007A9 0A                 
   114                                  
   115 000007AA 68[E107]E812F983C4-       cdecl puts, .s2
   115 000007B2 02                 
   116                                  .10E:
   117 000007B3 EB42                      jmp stage_4
   118                                  
   119 000007B5 337264207374616765-     .s0:	db	"3rd stage...", 0x0A, 0x0D, 0
   119 000007BE 2E2E2E0A0D00       
   120                                  
   121 000007C4 20466F6E7420416464-     .s1:	db	" Font Address="
   121 000007CD 726573733D         
   122 000007D2 5A5A5A5A3A              .p1:	db	"ZZZZ:"
   123 000007D7 5A5A5A5A0A0D00          .p2:	db	"ZZZZ", 0x0A, 0x0D, 0
   124 000007DE 0A0D00                  	db	0x0A, 0x0D, 0
   125                                  
   126 000007E1 204143504920646174-     .s2: db " ACPI data="
   126 000007EA 613D               
   127 000007EC 5A5A5A5A                .p3: db "ZZZZ"
   128 000007F0 5A5A5A5A0A0D00          .p4: db "ZZZZ", 0x0A, 0x0D, 0
   129                                  
   130                                  stage_4:
   131 000007F7 68[CB08]E8C5F883C4-       cdecl puts, .s0
   131 000007FF 02                 
   132 00000800 FA                        cli
   133 00000801 68AD00E8D7FD83C402        cdecl KBC_Cmd_Write, 0x0AD
   134                                  
   135 0000080A 68D000E8CEFD83C402        cdecl KBC_Cmd_Write, 0xD0
   136 00000813 68[0F09]E8A1FD83C4-       cdecl KBC_Data_Read, .key
   136 0000081B 02                 
   137                                  
   138 0000081C 8A1E[0F09]                mov bl, [.key]
   139 00000820 80CB02                    or bl, 0x02
   140                                  
   141 00000823 68D100E8B5FD83C402        cdecl KBC_Cmd_Write, 0xD1
   142 0000082C 53E86CFD83C402            cdecl KBC_Data_Write, bx
   143 00000833 68AE00E8A5FD83C402        cdecl KBC_Cmd_Write, 0xAE
   144 0000083C FB                        sti
   145                                  
   146 0000083D 68[DA08]E87FF883C4-       cdecl puts, .s1
   146 00000845 02                 
   147                                  
   148 00000846 68[EE08]E876F883C4-       cdecl puts, .s2
   148 0000084E 02                 
   149 0000084F BB0000                    mov bx, 0
   150                                  
   151                                  .10L:
   152 00000852 B400                      mov ah, 0x00
   153 00000854 CD16                      int 0x16
   154                                  
   155 00000856 3C31                      cmp al, '1'
   156 00000858 7266                      jb .10E
   157                                  
   158 0000085A 3C33                      cmp al, '3'
   159 0000085C 7762                      ja .10E
   160                                  
   161 0000085E 88C1                      mov cl, al
   162 00000860 FEC9                      dec cl
   163 00000862 80E103                    and cl, 0x03
   164 00000865 B80100                    mov ax, 0x001
   165 00000868 D3E0                      shl ax, cl
   166 0000086A 31C3                      xor bx, ax
   167                                  
   168 0000086C FA                        cli
   169                                  
   170 0000086D 68AD00E86BFD83C402        cdecl KBC_Cmd_Write, 0xAD
   171 00000876 68ED00E820FD83C402        cdecl KBC_Data_Write, 0xED
   172 0000087F 68[0F09]E835FD83C4-       cdecl KBC_Data_Read, .key
   172 00000887 02                 
   173                                  
   174 00000888 803E[0F09]FA              cmp [.key], byte 0xFA
   175 0000088D 7509                      jne .11F
   176 0000088F 53E809FD83C402            cdecl KBC_Data_Write, bx
   177 00000896 EB1C                      jmp .11E
   178                                  
   179                                  .11F:
   180 00000898 6A046A106A0268-             cdecl itoa, word [.key], .e1, 2, 16, 0b0100
   180 0000089F [0B09]FF36[0F09]E8-
   180 000008A6 64F983C40A         
   181 000008AB 68[0A09]E811F883C4-         cdecl puts, .e0
   181 000008B3 02                 
   182                                  .11E:
   183 000008B4 68AE00E824FD83C402        cdecl KBC_Cmd_Write, 0xAE
   184 000008BD FB                        sti
   185 000008BE EB92                      jmp .10L
   186                                  .10E:
   187 000008C0 68[0109]E8FCF783C4-       cdecl puts, .s3
   187 000008C8 02                 
   188 000008C9 EB46                      jmp stage_5
   189                                  
   190 000008CB 347468207374616765-     .s0: db "4th stage...", 0x0A, 0x0D,0
   190 000008D4 2E2E2E0A0D00       
   191 000008DA 413230204761746520-     .s1: db "A20 Gate Enabled.", 0x0A, 0x0D, 0
   191 000008E3 456E61626C65642E0A-
   191 000008EC 0D00               
   192 000008EE 4B6579626F7264204C-     .s2: db "Keybord LED Test..."
   192 000008F7 454420546573742E2E-
   192 00000900 2E                 
   193 00000901 28646F6E65290A0D00      .s3: db "(done)", 0x0A, 0x0D, 0
   194 0000090A 5B                      .e0: db "["
   195 0000090B 5A5A5D00                .e1: db "ZZ]", 0
   196 0000090F 0000                    .key: dw 0
   197                                  
   198                                  stage_5:
   199 00000911 68[3D09]E8ABF783C4-       cdecl	puts, .s0
   199 00000919 02                 
   200 0000091A 68009C6A106A1068-         cdecl read_lba, BOOT, BOOT_SECT, KERNEL_SECT, BOOT_END
   200 00000922 [BA00]E810FD83C408 
   201 0000092A 83F810                    cmp ax, KERNEL_SECT
   202                                  .10Q:
   203 0000092D 740C                      jz .10E
   204                                  .10T:
   205 0000092F 68[4C09]E88DF783C4-       cdecl puts, .e0
   205 00000937 02                 
   206 00000938 E8A6F7                    call reboot
   207                                  .10E:
   208 0000093B EB29                      jmp stage_6
   209 0000093D 357468207374616765-     .s0 db "5th stage...", 0x0A, 0x0D, 0
   209 00000946 2E2E2E0A0D00       
   210 0000094C 4661696C757265206C-     .e0 db "Failure load kernel ...", 0x0A, 0x0D, 0
   210 00000955 6F6164206B65726E65-
   210 0000095E 6C202E2E2E0A0D00   
   211                                  
   212                                  stage_6:
   213 00000966 68[7E09]E856F783C4-       cdecl puts, .s0
   213 0000096E 02                 
   214                                  .10L:
   215 0000096F B400                      mov ah, 0x00
   216 00000971 CD16                      int 0x16
   217 00000973 3C20                      cmp al, ' '
   218 00000975 75F8                      jne .10L
   219 00000977 B81200                    mov ax, 0x0012
   220 0000097A CD10                      int 0x10
   221 0000097C EB5E                      jmp stage_7
   222 0000097E 367468207374616765-       .s0		db	"6th stage...", 0x0A, 0x0D, 0x0A, 0x0D
   222 00000987 2E2E2E0A0D0A0D     
   223 0000098E 205B50757368205350-     		db	" [Push SPACE key to protect mode...]", 0x0A, 0x0D, 0
   223 00000997 414345206B65792074-
   223 000009A0 6F2070726F74656374-
   223 000009A9 206D6F64652E2E2E5D-
   223 000009B2 0A0D00             
   224                                  
   225 000009B5 00<rep 3h>              ALIGN 4, db 0
   226 000009B8 0000000000000000        GDT: dq	0x00_0_0_0_0_000000_0000	; NULL
   227 000009C0 FFFF0000009ACF00        .cs: dq	0x00_C_F_9_A_000000_FFFF	; CODE 4G
   228 000009C8 FFFF00000092CF00        .ds: dq	0x00_C_F_9_2_000000_FFFF	; DATA 4G
   229                                  .gdt_end:
   230                                  SEL_CODE equ	.cs - GDT						; �R�[�h�p�Z���N�^
   231                                  SEL_DATA equ	.ds - GDT
   232                                  
   233                                  GDTR:
   234 000009D0 1700                      dw GDT.gdt_end - GDT - 1
   235 000009D2 [B8090000]                dd GDT
   236                                  IDTR:
   237 000009D6 0000                      dw 0
   238 000009D8 00000000                  dd 0
   239                                  
   240                                  stage_7:
   241 000009DC FA                        cli
   242 000009DD 0F0116[D009]              lgdt [GDTR]
   243 000009E2 0F011E[D609]              lidt [IDTR]
   244                                  
   245 000009E7 0F20C0                    mov eax, cr0
   246 000009EA 83C801                    or ax, 1
   247 000009ED 0F22C0                    mov cr0, eax
   248                                  
   249 000009F0 EB00                      jmp $ + 2
   250                                    [BITS 32]
   251 000009F2 66                        DB 0x66
   252 000009F3 EA[FA090000]0800          jmp SEL_CODE:CODE_32
   253                                  
   254                                  CODE_32:
   255 000009FA 66B81000                  mov ax, SEL_DATA
   256 000009FE 8ED8                      mov ds, ax
   257 00000A00 8EC0                      mov es, ax
   258 00000A02 8EE0                      mov fs, ax
   259 00000A04 8EE8                      mov gs, ax
   260 00000A06 8ED0                      mov ss, ax
   261                                  
   262 00000A08 B900080000                mov ecx, (KERNEL_SIZE) / 4
   263 00000A0D BE009C0000                mov esi, BOOT_END
   264 00000A12 BF00101000                mov edi, KERNEL_LOAD
   265 00000A17 FC                        cld
   266 00000A18 F3A5                      rep movsd
   267 00000A1A E9(00101000)              jmp KERNEL_LOAD
   268                                  
   269 00000A1F 00<rep 15E1h>               times BOOT_SIZE - ($ - $$) db 0
