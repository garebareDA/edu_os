     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1> endstruc
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[90000000]              mov [FONT_ADR], eax
    13                                  
    14 00000016 6A41680F0100006A00-       cdecl	draw_char, 0, 0, 0x010F, 'A'
    14 0000001F 6A00E8F30000006683-
    14 00000028 C410               
    15 0000002A 6A42680F0100006A00-     	cdecl	draw_char, 1, 0, 0x010F, 'B'
    15 00000033 6A01E8DF0000006683-
    15 0000003C C410               
    16 0000003E 6A43680F0100006A00-     	cdecl	draw_char, 2, 0, 0x010F, 'C'
    16 00000047 6A02E8CB0000006683-
    16 00000050 C410               
    17                                  
    18 00000052 6A3068020400006A00-     	cdecl	draw_char, 0, 0, 0x0402, '0'
    18 0000005B 6A00E8B70000006683-
    18 00000064 C410               
    19 00000066 6A3168120200006A00-     	cdecl	draw_char, 1, 0, 0x0212, '1'
    19 0000006F 6A01E8A30000006683-
    19 00000078 C410               
    20 0000007A 6A5F68120200006A00-     	cdecl	draw_char, 2, 0, 0x0212, '_'
    20 00000083 6A02E88F0000006683-
    20 0000008C C410               
    21                                  
    22 0000008E EBFE                      jmp $
    23                                  
    24                                  ALIGN 4, db 0
    25 00000090 00000000                FONT_ADR: dd 0
    26                                  
    27                                  %include	"../modules/protect/vga.s"
    28                              <1> vga_set_read_plane:
    29 00000094 55                  <1>   push ebp
    30 00000095 89E5                <1>   mov ebp, esp
    31                              <1> 
    32 00000097 50                  <1>   push eax
    33 00000098 52                  <1>   push edx
    34                              <1> 
    35 00000099 8A6508              <1>   mov ah, [ebp + 8]
    36 0000009C 80E403              <1>   and ah, 0x03
    37 0000009F B004                <1>   mov al, 0x04
    38 000000A1 66BACE03            <1>   mov dx, 0x03CE
    39 000000A5 66EF                <1>   out dx, ax
    40                              <1> 
    41 000000A7 5A                  <1>   pop edx
    42 000000A8 58                  <1>   pop eax
    43                              <1> 
    44 000000A9 89EC                <1>   mov esp, ebp
    45 000000AB 5D                  <1>   pop ebp
    46                              <1> 
    47 000000AC C3                  <1>   ret
    48                              <1> 
    49                              <1> vga_set_write_plane:
    50 000000AD 55                  <1>   push ebp
    51 000000AE 89E5                <1>   mov ebp, esp
    52                              <1> 
    53 000000B0 50                  <1>   push eax
    54 000000B1 52                  <1>   push edx
    55                              <1> 
    56 000000B2 8A6508              <1>   mov ah, [ebp + 8]
    57 000000B5 80E40F              <1>   and ah, 0x0F
    58 000000B8 B002                <1>   mov al, 0x02
    59 000000BA 66BAC403            <1>   mov dx, 0x03C4
    60 000000BE 66EF                <1>   out dx, ax
    61                              <1> 
    62 000000C0 5A                  <1>   pop edx
    63 000000C1 58                  <1>   pop eax
    64                              <1> 
    65 000000C2 89EC                <1>   mov esp, ebp
    66 000000C4 5D                  <1>   pop ebp
    67                              <1> 
    68 000000C5 C3                  <1>   ret
    69                              <1> 
    70                              <1> vram_font_copy:
    71 000000C6 55                  <1>   push ebp
    72 000000C7 89E5                <1>   mov ebp, esp
    73                              <1> 
    74 000000C9 50                  <1> 	push	eax
    75 000000CA 53                  <1> 	push	ebx
    76 000000CB 51                  <1> 	push	ecx
    77 000000CC 52                  <1> 	push	edx
    78 000000CD 56                  <1> 	push	esi
    79 000000CE 57                  <1> 	push	edi
    80                              <1> 
    81 000000CF 8B7508              <1>   mov esi, [ebp + 8]
    82 000000D2 8B7D0C              <1>   mov edi, [ebp + 12]
    83 000000D5 0FB74510            <1>   movzx eax, word [ebp + 16]
    84 000000D9 0FB75D14            <1>   movzx ebx, word [ebp + 20]
    85                              <1> 
    86 000000DD 84C7                <1>   test bh, al
    87 000000DF 0F94C6              <1>   setz dh
    88 000000E2 FECE                <1>   dec dh
    89                              <1> 
    90 000000E4 84C3                <1>   test bl, al
    91 000000E6 0F94C2              <1>   setz dl
    92 000000E9 FECA                <1>   dec dl
    93                              <1> 
    94 000000EB FC                  <1>   cld
    95                              <1> 
    96 000000EC B910000000          <1>   mov ecx, 16
    97                              <1> 
    98                              <1> .10L:
    99 000000F1 AC                  <1>   lodsb
   100 000000F2 88C4                <1>   mov ah, al
   101 000000F4 F6D4                <1>   not ah
   102                              <1> 
   103 000000F6 20D0                <1>   and al, dl
   104 000000F8 F7C310000000        <1>   test ebx, 0x0010
   105 000000FE 7404                <1>   jz .11F
   106 00000100 2227                <1>   and ah, [edi]
   107 00000102 EB02                <1>   jmp .11E
   108                              <1> 
   109                              <1> .11F:
   110 00000104 20F4                <1>   and ah, dh
   111                              <1> .11E:
   112 00000106 08E0                <1>   or al, ah
   113 00000108 8807                <1>   mov [edi], al
   114 0000010A 83C750              <1>   add edi, 80
   115 0000010D E2E2                <1>   loop .10L
   116                              <1> .10E:
   117 0000010F 5F                  <1> 	pop		edi
   118 00000110 5E                  <1> 	pop		esi
   119 00000111 5A                  <1> 	pop		edx
   120 00000112 59                  <1> 	pop		ecx
   121 00000113 5B                  <1> 	pop		ebx
   122 00000114 58                  <1> 	pop		eax
   123                              <1> 
   124 00000115 89EC                <1>   mov esp, ebp
   125 00000117 5D                  <1>   pop ebp
   126 00000118 C3                  <1>   ret
    28                                  %include	"../modules/protect/draw_char.s"
    29                              <1> draw_char:
    30 00000119 55                  <1>   push ebp
    31 0000011A 89E5                <1>   mov ebp, esp
    32                              <1> 
    33 0000011C 50                  <1>   push	eax
    34 0000011D 53                  <1> 	push	ebx
    35 0000011E 51                  <1> 	push	ecx
    36 0000011F 52                  <1> 	push	edx
    37 00000120 56                  <1> 	push	esi
    38 00000121 57                  <1> 	push	edi
    39                              <1> 
    40 00000122 0FB67514            <1>   movzx esi, byte [ebp + 20]
    41 00000126 C1E604              <1>   shl esi, 4
    42 00000129 0335[90000000]      <1>   add esi, [FONT_ADR]
    43                              <1> 
    44 0000012F 8B7D0C              <1>   mov edi, [ebp + 12]
    45 00000132 C1E708              <1>   shl edi, 8
    46 00000135 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    47 0000013C 037D08              <1>   add edi, [ebp + 8]
    48                              <1> 
    49 0000013F 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    50                              <1> 
    51 00000143 6A03E84AFFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    51 0000014C C404                <1>
    52 0000014E 6A08E858FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    52 00000157 C404                <1>
    53 00000159 536A085756E863FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    53 00000162 FF6683C410          <1>
    54                              <1> 
    55 00000167 6A02E826FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    55 00000170 C404                <1>
    56 00000172 6A04E834FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    56 0000017B C404                <1>
    57 0000017D 536A045756E83FFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    57 00000186 FF6683C410          <1>
    58                              <1> 
    59 0000018B 6A01E802FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    59 00000194 C404                <1>
    60 00000196 6A02E810FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    60 0000019F C404                <1>
    61 000001A1 536A025756E81BFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
    61 000001AA FF6683C410          <1>
    62                              <1> 
    63 000001AF 6A00E8DEFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    63 000001B8 C404                <1>
    64 000001BA 6A01E8ECFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    64 000001C3 C404                <1>
    65 000001C5 536A015756E8F7FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
    65 000001CE FF6683C410          <1>
    66                              <1> 
    67 000001D3 5F                  <1>   pop		edi
    68 000001D4 5E                  <1> 	pop		esi
    69 000001D5 5A                  <1> 	pop		edx
    70 000001D6 59                  <1> 	pop		ecx
    71 000001D7 5B                  <1> 	pop		ebx
    72 000001D8 58                  <1> 	pop		eax
    73                              <1> 
    74 000001D9 89EC                <1>   mov esp, ebp
    75 000001DB 5D                  <1>   pop ebp
    76                              <1> 
    77 000001DC C3                  <1>   ret
    29                                  
    30 000001DD 00<rep 1E23h>             times KERNEL_SIZE - ($ - $$) db 0
