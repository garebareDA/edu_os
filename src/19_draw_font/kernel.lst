     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1> endstruc
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[28000000]              mov [FONT_ADR], eax
    13                                  
    14 00000016 6A0D6A3FE856010000-       cdecl draw_font, 63, 13
    14 0000001F 6683C408           
    15                                  
    16 00000023 EBFE                      jmp $
    17                                  
    18 00000025 00<rep 3h>              ALIGN 4, db 0
    19 00000028 00000000                FONT_ADR: dd 0
    20                                  
    21                                  %include	"../modules/protect/vga.s"
    22                              <1> vga_set_read_plane:
    23 0000002C 55                  <1>   push ebp
    24 0000002D 89E5                <1>   mov ebp, esp
    25                              <1> 
    26 0000002F 50                  <1>   push eax
    27 00000030 52                  <1>   push edx
    28                              <1> 
    29 00000031 8A6508              <1>   mov ah, [ebp + 8]
    30 00000034 80E403              <1>   and ah, 0x03
    31 00000037 B004                <1>   mov al, 0x04
    32 00000039 66BACE03            <1>   mov dx, 0x03CE
    33 0000003D 66EF                <1>   out dx, ax
    34                              <1> 
    35 0000003F 5A                  <1>   pop edx
    36 00000040 58                  <1>   pop eax
    37                              <1> 
    38 00000041 89EC                <1>   mov esp, ebp
    39 00000043 5D                  <1>   pop ebp
    40                              <1> 
    41 00000044 C3                  <1>   ret
    42                              <1> 
    43                              <1> vga_set_write_plane:
    44 00000045 55                  <1>   push ebp
    45 00000046 89E5                <1>   mov ebp, esp
    46                              <1> 
    47 00000048 50                  <1>   push eax
    48 00000049 52                  <1>   push edx
    49                              <1> 
    50 0000004A 8A6508              <1>   mov ah, [ebp + 8]
    51 0000004D 80E40F              <1>   and ah, 0x0F
    52 00000050 B002                <1>   mov al, 0x02
    53 00000052 66BAC403            <1>   mov dx, 0x03C4
    54 00000056 66EF                <1>   out dx, ax
    55                              <1> 
    56 00000058 5A                  <1>   pop edx
    57 00000059 58                  <1>   pop eax
    58                              <1> 
    59 0000005A 89EC                <1>   mov esp, ebp
    60 0000005C 5D                  <1>   pop ebp
    61                              <1> 
    62 0000005D C3                  <1>   ret
    63                              <1> 
    64                              <1> vram_font_copy:
    65 0000005E 55                  <1>   push ebp
    66 0000005F 89E5                <1>   mov ebp, esp
    67                              <1> 
    68 00000061 50                  <1> 	push	eax
    69 00000062 53                  <1> 	push	ebx
    70 00000063 51                  <1> 	push	ecx
    71 00000064 52                  <1> 	push	edx
    72 00000065 56                  <1> 	push	esi
    73 00000066 57                  <1> 	push	edi
    74                              <1> 
    75 00000067 8B7508              <1>   mov esi, [ebp + 8]
    76 0000006A 8B7D0C              <1>   mov edi, [ebp + 12]
    77 0000006D 0FB74510            <1>   movzx eax, word [ebp + 16]
    78 00000071 0FB75D14            <1>   movzx ebx, word [ebp + 20]
    79                              <1> 
    80 00000075 84C7                <1>   test bh, al
    81 00000077 0F94C6              <1>   setz dh
    82 0000007A FECE                <1>   dec dh
    83                              <1> 
    84 0000007C 84C3                <1>   test bl, al
    85 0000007E 0F94C2              <1>   setz dl
    86 00000081 FECA                <1>   dec dl
    87                              <1> 
    88 00000083 FC                  <1>   cld
    89                              <1> 
    90 00000084 B910000000          <1>   mov ecx, 16
    91                              <1> 
    92                              <1> .10L:
    93 00000089 AC                  <1>   lodsb
    94 0000008A 88C4                <1>   mov ah, al
    95 0000008C F6D4                <1>   not ah
    96                              <1> 
    97 0000008E 20D0                <1>   and al, dl
    98 00000090 F7C310000000        <1>   test ebx, 0x0010
    99 00000096 7404                <1>   jz .11F
   100 00000098 2227                <1>   and ah, [edi]
   101 0000009A EB02                <1>   jmp .11E
   102                              <1> 
   103                              <1> .11F:
   104 0000009C 20F4                <1>   and ah, dh
   105                              <1> .11E:
   106 0000009E 08E0                <1>   or al, ah
   107 000000A0 8807                <1>   mov [edi], al
   108 000000A2 83C750              <1>   add edi, 80
   109 000000A5 E2E2                <1>   loop .10L
   110                              <1> .10E:
   111 000000A7 5F                  <1> 	pop		edi
   112 000000A8 5E                  <1> 	pop		esi
   113 000000A9 5A                  <1> 	pop		edx
   114 000000AA 59                  <1> 	pop		ecx
   115 000000AB 5B                  <1> 	pop		ebx
   116 000000AC 58                  <1> 	pop		eax
   117                              <1> 
   118 000000AD 89EC                <1>   mov esp, ebp
   119 000000AF 5D                  <1>   pop ebp
   120 000000B0 C3                  <1>   ret
    22                                  %include	"../modules/protect/draw_char.s"
    23                              <1> draw_char:
    24 000000B1 55                  <1>   push ebp
    25 000000B2 89E5                <1>   mov ebp, esp
    26                              <1> 
    27 000000B4 50                  <1>   push	eax
    28 000000B5 53                  <1> 	push	ebx
    29 000000B6 51                  <1> 	push	ecx
    30 000000B7 52                  <1> 	push	edx
    31 000000B8 56                  <1> 	push	esi
    32 000000B9 57                  <1> 	push	edi
    33                              <1> 
    34 000000BA 0FB67514            <1>   movzx esi, byte [ebp + 20]
    35 000000BE C1E604              <1>   shl esi, 4
    36 000000C1 0335[28000000]      <1>   add esi, [FONT_ADR]
    37                              <1> 
    38 000000C7 8B7D0C              <1>   mov edi, [ebp + 12]
    39 000000CA C1E708              <1>   shl edi, 8
    40 000000CD 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    41 000000D4 037D08              <1>   add edi, [ebp + 8]
    42                              <1> 
    43 000000D7 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    44                              <1> 
    45 000000DB 6A03E84AFFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    45 000000E4 C404                <1>
    46 000000E6 6A08E858FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    46 000000EF C404                <1>
    47 000000F1 536A085756E863FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    47 000000FA FF6683C410          <1>
    48                              <1> 
    49 000000FF 6A02E826FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    49 00000108 C404                <1>
    50 0000010A 6A04E834FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    50 00000113 C404                <1>
    51 00000115 536A045756E83FFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    51 0000011E FF6683C410          <1>
    52                              <1> 
    53 00000123 6A01E802FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    53 0000012C C404                <1>
    54 0000012E 6A02E810FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    54 00000137 C404                <1>
    55 00000139 536A025756E81BFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
    55 00000142 FF6683C410          <1>
    56                              <1> 
    57 00000147 6A00E8DEFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    57 00000150 C404                <1>
    58 00000152 6A01E8ECFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    58 0000015B C404                <1>
    59 0000015D 536A015756E8F7FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
    59 00000166 FF6683C410          <1>
    60                              <1> 
    61 0000016B 5F                  <1>   pop		edi
    62 0000016C 5E                  <1> 	pop		esi
    63 0000016D 5A                  <1> 	pop		edx
    64 0000016E 59                  <1> 	pop		ecx
    65 0000016F 5B                  <1> 	pop		ebx
    66 00000170 58                  <1> 	pop		eax
    67                              <1> 
    68 00000171 89EC                <1>   mov esp, ebp
    69 00000173 5D                  <1>   pop ebp
    70                              <1> 
    71 00000174 C3                  <1>   ret
    23                                  %include	"../modules/protect/draw_font.s"
    24                              <1> draw_font:
    25 00000175 55                  <1>   push ebp
    26 00000176 89E5                <1>   mov ebp, esp
    27                              <1> 
    28 00000178 50                  <1>   push eax
    29 00000179 53                  <1>   push ebx
    30 0000017A 51                  <1>   push ecx
    31 0000017B 52                  <1>   push edx
    32 0000017C 56                  <1>   push esi
    33 0000017D 57                  <1>   push edi
    34                              <1> 
    35 0000017E 8B7508              <1>   mov esi, [ebp + 8]
    36 00000181 8B7D0C              <1>   mov edi, [ebp + 12]
    37                              <1> 
    38 00000184 B900000000          <1>   mov ecx, 0
    39                              <1> .10L:
    40 00000189 81F900010000        <1>   cmp ecx, 256
    41 0000018F 731F                <1>   jae .10E
    42 00000191 89C8                <1>   mov eax, ecx
    43 00000193 83E00F              <1>   and eax, 0x0F
    44 00000196 01F0                <1>   add eax, esi
    45                              <1> 
    46 00000198 89CB                <1>   mov ebx, ecx
    47 0000019A C1EB04              <1>   shr ebx, 4
    48 0000019D 01FB                <1>   add ebx, edi
    49                              <1> 
    50 0000019F 516A075350E808FFFF- <1>   cdecl draw_char, eax, ebx, 0x07, ecx
    50 000001A8 FF6683C410          <1>
    51                              <1> 
    52 000001AD 41                  <1>   inc ecx
    53 000001AE EBD9                <1>   jmp .10L
    54                              <1> 
    55                              <1> .10E:
    56 000001B0 5F                  <1>   pop edi
    57 000001B1 5E                  <1>   pop esi
    58 000001B2 5A                  <1>   pop edx
    59 000001B3 59                  <1>   pop ecx
    60 000001B4 5B                  <1>   pop ebx
    61 000001B5 58                  <1>   pop eax
    62                              <1> 
    63 000001B6 89EC                <1>   mov esp, ebp
    64 000001B8 5D                  <1>   pop ebp
    65                              <1> 
    66 000001B9 C3                  <1>   ret
    24                                  
    25 000001BA 00<rep 1E46h>             times KERNEL_SIZE - ($ - $$) db 0
