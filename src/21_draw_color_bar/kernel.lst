     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1> endstruc
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[58000000]              mov [FONT_ADR], eax
    13                                  
    14 00000016 6A0D6A3FE886010000-       cdecl draw_font, 63, 13
    14 0000001F 6683C408           
    15 00000023 68[49000000]680F01-       cdecl draw_str, 25, 14, 0x010F, .s0
    15 0000002B 00006A0E6A19E8B401-
    15 00000034 00006683C410       
    16 0000003A 6A046A3FE8F0010000-       cdecl draw_color_bar, 63, 4
    16 00000043 6683C408           
    17                                  
    18 00000047 EBFE                      jmp $
    19                                  
    20 00000049 48656C6C6F2C206B65-     .s0 db "Hello, kernel", 0
    20 00000052 726E656C00         
    21                                  
    22 00000057 00                      ALIGN 4, db 0
    23 00000058 00000000                FONT_ADR: dd 0
    24                                  
    25                                  %include	"../modules/protect/vga.s"
    26                              <1> vga_set_read_plane:
    27 0000005C 55                  <1>   push ebp
    28 0000005D 89E5                <1>   mov ebp, esp
    29                              <1> 
    30 0000005F 50                  <1>   push eax
    31 00000060 52                  <1>   push edx
    32                              <1> 
    33 00000061 8A6508              <1>   mov ah, [ebp + 8]
    34 00000064 80E403              <1>   and ah, 0x03
    35 00000067 B004                <1>   mov al, 0x04
    36 00000069 66BACE03            <1>   mov dx, 0x03CE
    37 0000006D 66EF                <1>   out dx, ax
    38                              <1> 
    39 0000006F 5A                  <1>   pop edx
    40 00000070 58                  <1>   pop eax
    41                              <1> 
    42 00000071 89EC                <1>   mov esp, ebp
    43 00000073 5D                  <1>   pop ebp
    44                              <1> 
    45 00000074 C3                  <1>   ret
    46                              <1> 
    47                              <1> vga_set_write_plane:
    48 00000075 55                  <1>   push ebp
    49 00000076 89E5                <1>   mov ebp, esp
    50                              <1> 
    51 00000078 50                  <1>   push eax
    52 00000079 52                  <1>   push edx
    53                              <1> 
    54 0000007A 8A6508              <1>   mov ah, [ebp + 8]
    55 0000007D 80E40F              <1>   and ah, 0x0F
    56 00000080 B002                <1>   mov al, 0x02
    57 00000082 66BAC403            <1>   mov dx, 0x03C4
    58 00000086 66EF                <1>   out dx, ax
    59                              <1> 
    60 00000088 5A                  <1>   pop edx
    61 00000089 58                  <1>   pop eax
    62                              <1> 
    63 0000008A 89EC                <1>   mov esp, ebp
    64 0000008C 5D                  <1>   pop ebp
    65                              <1> 
    66 0000008D C3                  <1>   ret
    67                              <1> 
    68                              <1> vram_font_copy:
    69 0000008E 55                  <1>   push ebp
    70 0000008F 89E5                <1>   mov ebp, esp
    71                              <1> 
    72 00000091 50                  <1> 	push	eax
    73 00000092 53                  <1> 	push	ebx
    74 00000093 51                  <1> 	push	ecx
    75 00000094 52                  <1> 	push	edx
    76 00000095 56                  <1> 	push	esi
    77 00000096 57                  <1> 	push	edi
    78                              <1> 
    79 00000097 8B7508              <1>   mov esi, [ebp + 8]
    80 0000009A 8B7D0C              <1>   mov edi, [ebp + 12]
    81 0000009D 0FB74510            <1>   movzx eax, word [ebp + 16]
    82 000000A1 0FB75D14            <1>   movzx ebx, word [ebp + 20]
    83                              <1> 
    84 000000A5 84C7                <1>   test bh, al
    85 000000A7 0F94C6              <1>   setz dh
    86 000000AA FECE                <1>   dec dh
    87                              <1> 
    88 000000AC 84C3                <1>   test bl, al
    89 000000AE 0F94C2              <1>   setz dl
    90 000000B1 FECA                <1>   dec dl
    91                              <1> 
    92 000000B3 FC                  <1>   cld
    93                              <1> 
    94 000000B4 B910000000          <1>   mov ecx, 16
    95                              <1> 
    96                              <1> .10L:
    97 000000B9 AC                  <1>   lodsb
    98 000000BA 88C4                <1>   mov ah, al
    99 000000BC F6D4                <1>   not ah
   100                              <1> 
   101 000000BE 20D0                <1>   and al, dl
   102 000000C0 F7C310000000        <1>   test ebx, 0x0010
   103 000000C6 7404                <1>   jz .11F
   104 000000C8 2227                <1>   and ah, [edi]
   105 000000CA EB02                <1>   jmp .11E
   106                              <1> 
   107                              <1> .11F:
   108 000000CC 20F4                <1>   and ah, dh
   109                              <1> .11E:
   110 000000CE 08E0                <1>   or al, ah
   111 000000D0 8807                <1>   mov [edi], al
   112 000000D2 83C750              <1>   add edi, 80
   113 000000D5 E2E2                <1>   loop .10L
   114                              <1> .10E:
   115 000000D7 5F                  <1> 	pop		edi
   116 000000D8 5E                  <1> 	pop		esi
   117 000000D9 5A                  <1> 	pop		edx
   118 000000DA 59                  <1> 	pop		ecx
   119 000000DB 5B                  <1> 	pop		ebx
   120 000000DC 58                  <1> 	pop		eax
   121                              <1> 
   122 000000DD 89EC                <1>   mov esp, ebp
   123 000000DF 5D                  <1>   pop ebp
   124 000000E0 C3                  <1>   ret
    26                                  %include	"../modules/protect/draw_char.s"
    27                              <1> draw_char:
    28 000000E1 55                  <1>   push ebp
    29 000000E2 89E5                <1>   mov ebp, esp
    30                              <1> 
    31 000000E4 50                  <1>   push	eax
    32 000000E5 53                  <1> 	push	ebx
    33 000000E6 51                  <1> 	push	ecx
    34 000000E7 52                  <1> 	push	edx
    35 000000E8 56                  <1> 	push	esi
    36 000000E9 57                  <1> 	push	edi
    37                              <1> 
    38 000000EA 0FB67514            <1>   movzx esi, byte [ebp + 20]
    39 000000EE C1E604              <1>   shl esi, 4
    40 000000F1 0335[58000000]      <1>   add esi, [FONT_ADR]
    41                              <1> 
    42 000000F7 8B7D0C              <1>   mov edi, [ebp + 12]
    43 000000FA C1E708              <1>   shl edi, 8
    44 000000FD 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    45 00000104 037D08              <1>   add edi, [ebp + 8]
    46                              <1> 
    47 00000107 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    48                              <1> 
    49 0000010B 6A03E84AFFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    49 00000114 C404                <1>
    50 00000116 6A08E858FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    50 0000011F C404                <1>
    51 00000121 536A085756E863FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    51 0000012A FF6683C410          <1>
    52                              <1> 
    53 0000012F 6A02E826FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    53 00000138 C404                <1>
    54 0000013A 6A04E834FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    54 00000143 C404                <1>
    55 00000145 536A045756E83FFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    55 0000014E FF6683C410          <1>
    56                              <1> 
    57 00000153 6A01E802FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
    57 0000015C C404                <1>
    58 0000015E 6A02E810FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
    58 00000167 C404                <1>
    59 00000169 536A025756E81BFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
    59 00000172 FF6683C410          <1>
    60                              <1> 
    61 00000177 6A00E8DEFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
    61 00000180 C404                <1>
    62 00000182 6A01E8ECFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
    62 0000018B C404                <1>
    63 0000018D 536A015756E8F7FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
    63 00000196 FF6683C410          <1>
    64                              <1> 
    65 0000019B 5F                  <1>   pop		edi
    66 0000019C 5E                  <1> 	pop		esi
    67 0000019D 5A                  <1> 	pop		edx
    68 0000019E 59                  <1> 	pop		ecx
    69 0000019F 5B                  <1> 	pop		ebx
    70 000001A0 58                  <1> 	pop		eax
    71                              <1> 
    72 000001A1 89EC                <1>   mov esp, ebp
    73 000001A3 5D                  <1>   pop ebp
    74                              <1> 
    75 000001A4 C3                  <1>   ret
    27                                  %include	"../modules/protect/draw_font.s"
    28                              <1> draw_font:
    29 000001A5 55                  <1>   push ebp
    30 000001A6 89E5                <1>   mov ebp, esp
    31                              <1> 
    32 000001A8 50                  <1>   push eax
    33 000001A9 53                  <1>   push ebx
    34 000001AA 51                  <1>   push ecx
    35 000001AB 52                  <1>   push edx
    36 000001AC 56                  <1>   push esi
    37 000001AD 57                  <1>   push edi
    38                              <1> 
    39 000001AE 8B7508              <1>   mov esi, [ebp + 8]
    40 000001B1 8B7D0C              <1>   mov edi, [ebp + 12]
    41                              <1> 
    42 000001B4 B900000000          <1>   mov ecx, 0
    43                              <1> .10L:
    44 000001B9 81F900010000        <1>   cmp ecx, 256
    45 000001BF 731F                <1>   jae .10E
    46 000001C1 89C8                <1>   mov eax, ecx
    47 000001C3 83E00F              <1>   and eax, 0x0F
    48 000001C6 01F0                <1>   add eax, esi
    49                              <1> 
    50 000001C8 89CB                <1>   mov ebx, ecx
    51 000001CA C1EB04              <1>   shr ebx, 4
    52 000001CD 01FB                <1>   add ebx, edi
    53                              <1> 
    54 000001CF 516A075350E808FFFF- <1>   cdecl draw_char, eax, ebx, 0x07, ecx
    54 000001D8 FF6683C410          <1>
    55                              <1> 
    56 000001DD 41                  <1>   inc ecx
    57 000001DE EBD9                <1>   jmp .10L
    58                              <1> 
    59                              <1> .10E:
    60 000001E0 5F                  <1>   pop edi
    61 000001E1 5E                  <1>   pop esi
    62 000001E2 5A                  <1>   pop edx
    63 000001E3 59                  <1>   pop ecx
    64 000001E4 5B                  <1>   pop ebx
    65 000001E5 58                  <1>   pop eax
    66                              <1> 
    67 000001E6 89EC                <1>   mov esp, ebp
    68 000001E8 5D                  <1>   pop ebp
    69                              <1> 
    70 000001E9 C3                  <1>   ret
    28                                  %include  "../modules/protect/draw_str.s"
    29                              <1> draw_str:
    30 000001EA 55                  <1>   push ebp
    31 000001EB 89E5                <1>   mov ebp, esp
    32                              <1> 
    33 000001ED 50                  <1>   push eax
    34 000001EE 53                  <1>   push ebx
    35 000001EF 51                  <1>   push ecx
    36 000001F0 52                  <1>   push edx
    37 000001F1 56                  <1>   push esi
    38                              <1> 
    39 000001F2 8B4D08              <1>   mov ecx, [ebp + 8]
    40 000001F5 8B550C              <1>   mov edx, [ebp + 12]
    41 000001F8 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    42 000001FC 8B7514              <1>   mov esi, [ebp + 20]
    43                              <1> 
    44 000001FF FC                  <1>   cld
    45                              <1> 
    46                              <1> .10L:
    47 00000200 AC                  <1>   lodsb
    48 00000201 3C00                <1>   cmp al, 0
    49 00000203 7425                <1>   je .10E
    50 00000205 50535251E8D3FEFFFF- <1>   cdecl draw_char, ecx, edx, ebx, eax
    50 0000020E 6683C410            <1>
    51                              <1> 
    52 00000212 41                  <1>   inc ecx
    53 00000213 83F950              <1>   cmp ecx, 80
    54 00000216 7C10                <1>   jl .12E
    55 00000218 B900000000          <1>   mov ecx, 0
    56 0000021D 42                  <1>   inc edx
    57 0000021E 83FA1E              <1>   cmp edx, 30
    58 00000221 7C05                <1>   jl .12E
    59 00000223 BA00000000          <1>   mov edx, 0
    60                              <1> .12E:
    61 00000228 EBD6                <1>   jmp .10L
    62                              <1> .10E:
    63 0000022A 5E                  <1>   pop esi
    64 0000022B 5A                  <1>   pop edx
    65 0000022C 59                  <1>   pop ecx
    66 0000022D 5B                  <1>   pop ebx
    67 0000022E 58                  <1>   pop eax
    68                              <1> 
    69 0000022F 89EC                <1>   mov esp, ebp
    70 00000231 5D                  <1>   pop ebp
    71                              <1> 
    72 00000232 C3                  <1>   ret
    29                                  %include "../modules/protect/draw_color_bar.s"
    30                              <1> draw_color_bar:
    31 00000233 55                  <1>   push ebp
    32 00000234 89E5                <1>   mov ebp, esp
    33                              <1> 
    34 00000236 50                  <1>   push eax
    35 00000237 53                  <1>   push ebx
    36 00000238 51                  <1>   push ecx
    37 00000239 52                  <1>   push edx
    38 0000023A 56                  <1>   push esi
    39 0000023B 57                  <1>   push edi
    40                              <1> 
    41 0000023C 8B7508              <1>   mov esi, [ebp + 8]
    42 0000023F 8B7B0C              <1>   mov edi, [ebx + 12]
    43                              <1> 
    44 00000242 B900000000          <1>   mov ecx, 0
    45                              <1> 
    46                              <1> .10L:
    47 00000247 83F910              <1>   cmp ecx, 16
    48 0000024A 732E                <1>   jae .10E
    49                              <1> 
    50 0000024C 89C8                <1>   mov eax, ecx
    51 0000024E 83E001              <1>   and eax, 0x01
    52 00000251 C1E003              <1>   shl eax, 3
    53 00000254 01F0                <1>   add eax, esi
    54                              <1> 
    55 00000256 89CB                <1>   mov ebx, ecx
    56 00000258 D1EB                <1>   shr ebx, 1
    57 0000025A 01FB                <1>   add ebx, edi
    58                              <1> 
    59 0000025C 89CA                <1>   mov edx, ecx
    60 0000025E D1E2                <1>   shl edx, 1
    61 00000260 8B92[8D020000]      <1>   mov edx, [.t0 + edx]
    62                              <1> 
    63 00000266 68[84020000]525350- <1>   cdecl draw_str, eax, ebx, edx, .s0
    63 0000026E E877FFFFFF6683C410  <1>
    64                              <1> 
    65 00000277 41                  <1>   inc ecx
    66 00000278 EBCD                <1>   jmp .10L
    67                              <1> .10E:
    68 0000027A 5F                  <1>   pop edi
    69 0000027B 5E                  <1>   pop esi
    70 0000027C 5A                  <1>   pop edx
    71 0000027D 59                  <1>   pop ecx
    72 0000027E 5B                  <1>   pop ebx
    73 0000027F 58                  <1>   pop eax
    74                              <1> 
    75 00000280 89EC                <1>   mov esp, ebp
    76 00000282 5D                  <1>   pop ebp
    77                              <1> 
    78 00000283 C3                  <1>   ret
    79                              <1> 
    80 00000284 202020202020202000  <1> .s0:	db '        ', 0
    81                              <1> 
    82                              <1> .t0:
    83 0000028D 00000008            <1>   dw	0x0000, 0x0800
    84 00000291 00010009            <1> 	dw	0x0100, 0x0900
    85 00000295 0002000A            <1> 	dw	0x0200, 0x0A00
    86 00000299 0003000B            <1> 	dw	0x0300, 0x0B00
    87 0000029D 0004000C            <1> 	dw	0x0400, 0x0C00
    88 000002A1 0005000D            <1> 	dw	0x0500, 0x0D00
    89 000002A5 0006000E            <1> 	dw	0x0600, 0x0E00
    90 000002A9 0007000F            <1> 	dw	0x0700, 0x0F00
    30                                  
    31 000002AD 00<rep 1D53h>             times KERNEL_SIZE - ($ - $$) db 0
