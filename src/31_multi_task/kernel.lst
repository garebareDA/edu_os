     1                                  %include "../include/define.s"
     2                              <1> BOOT_LOAD equ 0x7C00
     3                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     4                              <1> 
     5                              <1> BOOT_SIZE equ (1024) * 8
     6                              <1> SECT_SIZE equ (512)
     7                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
     8                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     9                              <1> E820_RECORD_SIZE equ 20
    10                              <1> 
    11                              <1> KERNEL_LOAD equ 0x0010_1000
    12                              <1> KERNEL_SIZE equ (1024 * 8)
    13                              <1> 
    14                              <1> VECT_BASE equ 0x0010_0000
    15                              <1> 
    16                              <1> RING_ITEM_SIZE equ (1 << 4)
    17                              <1> RING_INDEX_MASK equ (RING_ITEM_SIZE - 1)
    18                              <1> 
    19                              <1> STACK_BASE equ 0x0010_3000
    20                              <1> STACK_SIZE equ 1024
    21                              <1> SP_TASK_0 equ STACK_BASE + (STACK_SIZE * 1)
    22                              <1> SP_TASK_1 equ STACK_BASE + (STACK_SIZE * 2)
     2                                  %include "../include/macro.s"
     3                              <1> %macro cdecl 1-*.nolist
     4                              <1>   %rep %0 - 1
     5                              <1>     push %{-1:-1}
     6                              <1>     %rotate -1
     7                              <1>   %endrep
     8                              <1>   %rotate -1
     9                              <1>     call %1
    10                              <1>   %if 1 < %0
    11                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>   %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 ????                <1>   .no resw 1
    17 00000002 ????                <1>   .cyln resw 1
    18 00000004 ????                <1>   .head resw 1
    19 00000006 ????                <1>   .sect resw 1
    20                              <1>   endstruc
    21                              <1> 
    22                              <1> %macro set_vect 1-*
    23                              <1>   push eax
    24                              <1>   push edi
    25                              <1> 
    26                              <1>   mov edi,VECT_BASE + (%1 * 8)
    27                              <1>   mov eax, %2
    28                              <1> 
    29                              <1>   mov [edi + 0], ax
    30                              <1>   shr eax, 16
    31                              <1>   mov [edi + 6], ax
    32                              <1> 
    33                              <1>   pop edi
    34                              <1>   pop eax
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro outp 2
    38                              <1>   mov al, %2
    39                              <1>   out %1, al
    40                              <1> %endmacro
    41                              <1> 
    42                              <1> struc ring_buff
    43 00000000 ????????            <1>   .rp resd 1
    44 00000004 ????????            <1>   .wp resd 1
    45 00000008 <res 40h>           <1>   .item resd RING_ITEM_SIZE
    46                              <1>   endstruc
    47                              <1> 
    48                              <1> %macro  set_desc 2-*
    49                              <1>   push eax
    50                              <1>   push edi
    51                              <1> 
    52                              <1>   mov edi, %1
    53                              <1>   mov eax, %2
    54                              <1> 
    55                              <1>   %if 3 == %0
    56                              <1>     mov [edi + 0], %3
    57                              <1>   %endif
    58                              <1> 
    59                              <1>   mov [edi + 2], ax
    60                              <1>   shr eax, 16
    61                              <1>   mov [edi + 4], al
    62                              <1>   mov [edi + 7], ah
    63                              <1> 
    64                              <1>   pop edi
    65                              <1>   pop eax
    66                              <1> %endmacro
     3                                  
     4                                    ORG KERNEL_LOAD
     5                                  [BITS 32]
     6                                  kernel:
     7 00000000 BE007E0000                mov esi, BOOT_LOAD + SECT_SIZE
     8 00000005 0FB706                    movzx eax, word  [esi + 0]
     9 00000008 0FB75E02                  movzx ebx, word [esi + 2]
    10 0000000C C1E004                    shl eax, 4
    11 0000000F 01D8                      add eax, ebx
    12 00000011 A3[98010000]              mov [FONT_ADR], eax
    13                                  
    14                                    set_desc GDT.tss_0, TSS_0
    49 00000016 50                  <1>  push eax
    50 00000017 57                  <1>  push edi
    51                              <1> 
    52 00000018 BF[D00B0000]        <1>  mov edi, %1
    53 0000001D B8[E00A0000]        <1>  mov eax, %2
    54                              <1> 
    55                              <1>  %if 3 == %0
    56                              <1>  mov [edi + 0], %3
    57                              <1>  %endif
    58                              <1> 
    59 00000022 66894702            <1>  mov [edi + 2], ax
    60 00000026 C1E810              <1>  shr eax, 16
    61 00000029 884704              <1>  mov [edi + 4], al
    62 0000002C 886707              <1>  mov [edi + 7], ah
    63                              <1> 
    64 0000002F 5F                  <1>  pop edi
    65 00000030 58                  <1>  pop eax
    15                                    set_desc GDT.tss_1, TSS_1
    49 00000031 50                  <1>  push eax
    50 00000032 57                  <1>  push edi
    51                              <1> 
    52 00000033 BF[D80B0000]        <1>  mov edi, %1
    53 00000038 B8[480B0000]        <1>  mov eax, %2
    54                              <1> 
    55                              <1>  %if 3 == %0
    56                              <1>  mov [edi + 0], %3
    57                              <1>  %endif
    58                              <1> 
    59 0000003D 66894702            <1>  mov [edi + 2], ax
    60 00000041 C1E810              <1>  shr eax, 16
    61 00000044 884704              <1>  mov [edi + 4], al
    62 00000047 886707              <1>  mov [edi + 7], ah
    63                              <1> 
    64 0000004A 5F                  <1>  pop edi
    65 0000004B 58                  <1>  pop eax
    16                                    set_desc GDT.ldt, LDT, word LDT_LIMIT
    49 0000004C 50                  <1>  push eax
    50 0000004D 57                  <1>  push edi
    51                              <1> 
    52 0000004E BF[C80B0000]        <1>  mov edi, %1
    53 00000053 B8[E60B0000]        <1>  mov eax, %2
    54                              <1> 
    55                              <1>  %if 3 == %0
    56 00000058 66C7072700          <1>  mov [edi + 0], %3
    57                              <1>  %endif
    58                              <1> 
    59 0000005D 66894702            <1>  mov [edi + 2], ax
    60 00000061 C1E810              <1>  shr eax, 16
    61 00000064 884704              <1>  mov [edi + 4], al
    62 00000067 886707              <1>  mov [edi + 7], ah
    63                              <1> 
    64 0000006A 5F                  <1>  pop edi
    65 0000006B 58                  <1>  pop eax
    17 0000006C 0F0115[E00B0000]          lgdt [GDTR]
    18 00000073 BC00341000                mov esp, SP_TASK_0
    19 00000078 66B82000                  mov ax, SS_TASK_0
    20 0000007C 0F00D8                    ltr ax
    21                                  
    22 0000007F E8E2060000                cdecl init_int
    23 00000084 E863080000                cdecl	init_pic
    24                                  
    25                                    set_vect 0x00, int_zero_div
    23 00000089 50                  <1>  push eax
    24 0000008A 57                  <1>  push edi
    25                              <1> 
    26 0000008B BF00001000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 00000090 B8[CE080000]        <1>  mov eax, %2
    28                              <1> 
    29 00000095 668907              <1>  mov [edi + 0], ax
    30 00000098 C1E810              <1>  shr eax, 16
    31 0000009B 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 0000009F 5F                  <1>  pop edi
    34 000000A0 58                  <1>  pop eax
    26                                    set_vect 0x20, int_timer
    23 000000A1 50                  <1>  push eax
    24 000000A2 57                  <1>  push edi
    25                              <1> 
    26 000000A3 BF00011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 000000A8 B8[740A0000]        <1>  mov eax, %2
    28                              <1> 
    29 000000AD 668907              <1>  mov [edi + 0], ax
    30 000000B0 C1E810              <1>  shr eax, 16
    31 000000B3 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 000000B7 5F                  <1>  pop edi
    34 000000B8 58                  <1>  pop eax
    27                                    set_vect 0x21, int_keyboard
    23 000000B9 50                  <1>  push eax
    24 000000BA 57                  <1>  push edi
    25                              <1> 
    26 000000BB BF08011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 000000C0 B8[070A0000]        <1>  mov eax, %2
    28                              <1> 
    29 000000C5 668907              <1>  mov [edi + 0], ax
    30 000000C8 C1E810              <1>  shr eax, 16
    31 000000CB 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 000000CF 5F                  <1>  pop edi
    34 000000D0 58                  <1>  pop eax
    28                                    set_vect 0x28, int_rtc
    23 000000D1 50                  <1>  push eax
    24 000000D2 57                  <1>  push edi
    25                              <1> 
    26 000000D3 BF40011000          <1>  mov edi,VECT_BASE + (%1 * 8)
    27 000000D8 B8[2A090000]        <1>  mov eax, %2
    28                              <1> 
    29 000000DD 668907              <1>  mov [edi + 0], ax
    30 000000E0 C1E810              <1>  shr eax, 16
    31 000000E3 66894706            <1>  mov [edi + 6], ax
    32                              <1> 
    33 000000E7 5F                  <1>  pop edi
    34 000000E8 58                  <1>  pop eax
    29                                  
    30 000000E9 6A10E8270800006683-       cdecl rtc_int_en, 0x10
    30 000000F2 C404               
    31 000000F4 E89F090000                cdecl	int_en_timer0
    32                                  
    33                                    outp 0x21, 0b1111_1000
    38 000000F9 B0F8                <1>  mov al, %2
    39 000000FB E621                <1>  out %1, al
    34                                    outp 0xA1, 0b1111_1110
    38 000000FD B0FE                <1>  mov al, %2
    39 000000FF E6A1                <1>  out %1, al
    35                                  
    36 00000101 FB                        sti
    37                                  
    38 00000102 6A0D6A3FE810020000-       cdecl draw_font, 63, 13
    38 0000010B 6683C408           
    39 0000010F 6A046A3FE891020000-       cdecl draw_color_bar, 63, 4
    39 00000118 6683C408           
    40                                  
    41 0000011C 68[83010000]680F01-       cdecl draw_str, 25, 14, 0x010F, .s0
    41 00000124 00006A0E6A19E83102-
    41 0000012D 00006683C410       
    42                                  
    43 00000133 9A000000002800            call	SS_TASK_1:0
    44                                  
    45                                  .10L:
    46 0000013A A1[9C010000]              mov eax, [RTC_TIME]
    47 0000013F 5068000700006A006A-       cdecl draw_time, 72, 0, 0x0700, eax
    47 00000148 48E87B0500006683C4-
    47 00000151 10                 
    48                                  
    49 00000152 E850090000                cdecl	draw_rotation_bar
    50                                  
    51 00000157 68[94010000]68-           cdecl ring_rd, _KEY_BUFF, .int_key
    51 0000015D [2C0A0000]E8ED0700-
    51 00000165 006683C408         
    52 0000016A 83F800                    cmp eax, 0
    53 0000016D 7412                      je .10E
    54                                  
    55 0000016F 68[2C0A0000]6A1D6A-       cdecl draw_key, 2, 29, _KEY_BUFF
    55 00000177 02E8370800006683C4-
    55 00000180 0C                 
    56                                  .10E:
    57 00000181 EBB7                      jmp .10L
    58                                  
    59 00000183 48656C6C6F2C206B65-     .s0 db "Hello, kernel", 0
    59 0000018C 726E656C00         
    60                                  
    61 00000191 00<rep 3h>              ALIGN 4, db 0
    62 00000194 00                      .int_key: db 0
    63                                  
    64 00000195 00<rep 3h>              ALIGN 4, db 0
    65 00000198 00000000                FONT_ADR: dd 0
    66 0000019C 00000000                RTC_TIME: dd 0
    67                                  
    68                                  %include	"../modules/protect/vga.s"
    69                              <1> vga_set_read_plane:
    70 000001A0 55                  <1>   push ebp
    71 000001A1 89E5                <1>   mov ebp, esp
    72                              <1> 
    73 000001A3 50                  <1>   push eax
    74 000001A4 52                  <1>   push edx
    75                              <1> 
    76 000001A5 8A6508              <1>   mov ah, [ebp + 8]
    77 000001A8 80E403              <1>   and ah, 0x03
    78 000001AB B004                <1>   mov al, 0x04
    79 000001AD 66BACE03            <1>   mov dx, 0x03CE
    80 000001B1 66EF                <1>   out dx, ax
    81                              <1> 
    82 000001B3 5A                  <1>   pop edx
    83 000001B4 58                  <1>   pop eax
    84                              <1> 
    85 000001B5 89EC                <1>   mov esp, ebp
    86 000001B7 5D                  <1>   pop ebp
    87                              <1> 
    88 000001B8 C3                  <1>   ret
    89                              <1> 
    90                              <1> vga_set_write_plane:
    91 000001B9 55                  <1>   push ebp
    92 000001BA 89E5                <1>   mov ebp, esp
    93                              <1> 
    94 000001BC 50                  <1>   push eax
    95 000001BD 52                  <1>   push edx
    96                              <1> 
    97 000001BE 8A6508              <1>   mov ah, [ebp + 8]
    98 000001C1 80E40F              <1>   and ah, 0x0F
    99 000001C4 B002                <1>   mov al, 0x02
   100 000001C6 66BAC403            <1>   mov dx, 0x03C4
   101 000001CA 66EF                <1>   out dx, ax
   102                              <1> 
   103 000001CC 5A                  <1>   pop edx
   104 000001CD 58                  <1>   pop eax
   105                              <1> 
   106 000001CE 89EC                <1>   mov esp, ebp
   107 000001D0 5D                  <1>   pop ebp
   108                              <1> 
   109 000001D1 C3                  <1>   ret
   110                              <1> 
   111                              <1> vram_font_copy:
   112 000001D2 55                  <1>   push ebp
   113 000001D3 89E5                <1>   mov ebp, esp
   114                              <1> 
   115 000001D5 50                  <1> 	push	eax
   116 000001D6 53                  <1> 	push	ebx
   117 000001D7 51                  <1> 	push	ecx
   118 000001D8 52                  <1> 	push	edx
   119 000001D9 56                  <1> 	push	esi
   120 000001DA 57                  <1> 	push	edi
   121                              <1> 
   122 000001DB 8B7508              <1>   mov esi, [ebp + 8]
   123 000001DE 8B7D0C              <1>   mov edi, [ebp + 12]
   124 000001E1 0FB74510            <1>   movzx eax, word [ebp + 16]
   125 000001E5 0FB75D14            <1>   movzx ebx, word [ebp + 20]
   126                              <1> 
   127 000001E9 84C7                <1>   test bh, al
   128 000001EB 0F94C6              <1>   setz dh
   129 000001EE FECE                <1>   dec dh
   130                              <1> 
   131 000001F0 84C3                <1>   test bl, al
   132 000001F2 0F94C2              <1>   setz dl
   133 000001F5 FECA                <1>   dec dl
   134                              <1> 
   135 000001F7 FC                  <1>   cld
   136                              <1> 
   137 000001F8 B910000000          <1>   mov ecx, 16
   138                              <1> 
   139                              <1> .10L:
   140 000001FD AC                  <1>   lodsb
   141 000001FE 88C4                <1>   mov ah, al
   142 00000200 F6D4                <1>   not ah
   143                              <1> 
   144 00000202 20D0                <1>   and al, dl
   145 00000204 F7C310000000        <1>   test ebx, 0x0010
   146 0000020A 7404                <1>   jz .11F
   147 0000020C 2227                <1>   and ah, [edi]
   148 0000020E EB02                <1>   jmp .11E
   149                              <1> 
   150                              <1> .11F:
   151 00000210 20F4                <1>   and ah, dh
   152                              <1> .11E:
   153 00000212 08E0                <1>   or al, ah
   154 00000214 8807                <1>   mov [edi], al
   155 00000216 83C750              <1>   add edi, 80
   156 00000219 E2E2                <1>   loop .10L
   157                              <1> .10E:
   158 0000021B 5F                  <1> 	pop		edi
   159 0000021C 5E                  <1> 	pop		esi
   160 0000021D 5A                  <1> 	pop		edx
   161 0000021E 59                  <1> 	pop		ecx
   162 0000021F 5B                  <1> 	pop		ebx
   163 00000220 58                  <1> 	pop		eax
   164                              <1> 
   165 00000221 89EC                <1>   mov esp, ebp
   166 00000223 5D                  <1>   pop ebp
   167 00000224 C3                  <1>   ret
   168                              <1> 
   169                              <1> vram_bit_copy:
   170 00000225 55                  <1>   push ebp
   171 00000226 89E5                <1>   mov ebp, esp
   172                              <1> 
   173 00000228 50                  <1> 	push	eax
   174 00000229 53                  <1> 	push	ebx
   175 0000022A 52                  <1> 	push	edx
   176 0000022B 56                  <1> 	push	esi
   177 0000022C 57                  <1> 	push	edi
   178                              <1> 
   179 0000022D 8B7D0C              <1>   mov edi, [ebp + 12]
   180 00000230 0FB64510            <1>   movzx eax, byte [ebp + 16]
   181 00000234 0FB65D14            <1>   movzx ebx, byte [ebp + 20]
   182 00000238 84C3                <1>   test bl, al
   183 0000023A 0F94C3              <1>   setz bl
   184 0000023D FECB                <1>   dec bl
   185                              <1> 
   186 0000023F 8A4508              <1>   mov al, [ebp + 8]
   187 00000242 88C4                <1>   mov ah, al
   188 00000244 F6D4                <1>   not ah
   189                              <1> 
   190 00000246 2227                <1>   and ah, [edi]
   191 00000248 20D8                <1>   and al, bl
   192 0000024A 08E0                <1>   or al, ah
   193 0000024C 8807                <1>   mov [edi], al
   194                              <1> 
   195 0000024E 5F                  <1>   pop edi
   196 0000024F 5E                  <1>   pop esi
   197 00000250 5A                  <1>   pop edx
   198 00000251 5B                  <1>   pop ebx
   199 00000252 58                  <1>   pop eax
   200                              <1> 
   201 00000253 89EC                <1>   mov esp, ebp
   202 00000255 5D                  <1>   pop ebp
   203 00000256 C3                  <1>   ret
    69                                  %include	"../modules/protect/draw_char.s"
    70                              <1> draw_char:
    71 00000257 55                  <1>   push ebp
    72 00000258 89E5                <1>   mov ebp, esp
    73                              <1> 
    74 0000025A 50                  <1>   push	eax
    75 0000025B 53                  <1> 	push	ebx
    76 0000025C 51                  <1> 	push	ecx
    77 0000025D 52                  <1> 	push	edx
    78 0000025E 56                  <1> 	push	esi
    79 0000025F 57                  <1> 	push	edi
    80                              <1> 
    81 00000260 0FB67514            <1>   movzx esi, byte [ebp + 20]
    82 00000264 C1E604              <1>   shl esi, 4
    83 00000267 0335[98010000]      <1>   add esi, [FONT_ADR]
    84                              <1> 
    85 0000026D 8B7D0C              <1>   mov edi, [ebp + 12]
    86 00000270 C1E708              <1>   shl edi, 8
    87 00000273 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA0000]
    88 0000027A 037D08              <1>   add edi, [ebp + 8]
    89                              <1> 
    90 0000027D 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    91                              <1> 
    92 00000281 6A03E818FFFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    92 0000028A C404                <1>
    93 0000028C 6A08E826FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    93 00000295 C404                <1>
    94 00000297 536A085756E831FFFF- <1>   cdecl vram_font_copy, esi, edi, 0x08, ebx
    94 000002A0 FF6683C410          <1>
    95                              <1> 
    96 000002A5 6A02E8F4FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
    96 000002AE C404                <1>
    97 000002B0 6A04E802FFFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
    97 000002B9 C404                <1>
    98 000002BB 536A045756E80DFFFF- <1>   cdecl vram_font_copy, esi, edi, 0x04, ebx
    98 000002C4 FF6683C410          <1>
    99                              <1> 
   100 000002C9 6A01E8D0FEFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
   100 000002D2 C404                <1>
   101 000002D4 6A02E8DEFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
   101 000002DD C404                <1>
   102 000002DF 536A025756E8E9FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x02, ebx
   102 000002E8 FF6683C410          <1>
   103                              <1> 
   104 000002ED 6A00E8ACFEFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
   104 000002F6 C404                <1>
   105 000002F8 6A01E8BAFEFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
   105 00000301 C404                <1>
   106 00000303 536A015756E8C5FEFF- <1>   cdecl vram_font_copy, esi, edi, 0x01, ebx
   106 0000030C FF6683C410          <1>
   107                              <1> 
   108 00000311 5F                  <1>   pop		edi
   109 00000312 5E                  <1> 	pop		esi
   110 00000313 5A                  <1> 	pop		edx
   111 00000314 59                  <1> 	pop		ecx
   112 00000315 5B                  <1> 	pop		ebx
   113 00000316 58                  <1> 	pop		eax
   114                              <1> 
   115 00000317 89EC                <1>   mov esp, ebp
   116 00000319 5D                  <1>   pop ebp
   117                              <1> 
   118 0000031A C3                  <1>   ret
    70                                  %include	"../modules/protect/draw_font.s"
    71                              <1> draw_font:
    72 0000031B 55                  <1>   push ebp
    73 0000031C 89E5                <1>   mov ebp, esp
    74                              <1> 
    75 0000031E 50                  <1>   push eax
    76 0000031F 53                  <1>   push ebx
    77 00000320 51                  <1>   push ecx
    78 00000321 52                  <1>   push edx
    79 00000322 56                  <1>   push esi
    80 00000323 57                  <1>   push edi
    81                              <1> 
    82 00000324 8B7508              <1>   mov esi, [ebp + 8]
    83 00000327 8B7D0C              <1>   mov edi, [ebp + 12]
    84                              <1> 
    85 0000032A B900000000          <1>   mov ecx, 0
    86                              <1> .10L:
    87 0000032F 81F900010000        <1>   cmp ecx, 256
    88 00000335 731F                <1>   jae .10E
    89 00000337 89C8                <1>   mov eax, ecx
    90 00000339 83E00F              <1>   and eax, 0x0F
    91 0000033C 01F0                <1>   add eax, esi
    92                              <1> 
    93 0000033E 89CB                <1>   mov ebx, ecx
    94 00000340 C1EB04              <1>   shr ebx, 4
    95 00000343 01FB                <1>   add ebx, edi
    96                              <1> 
    97 00000345 516A075350E808FFFF- <1>   cdecl draw_char, eax, ebx, 0x07, ecx
    97 0000034E FF6683C410          <1>
    98                              <1> 
    99 00000353 41                  <1>   inc ecx
   100 00000354 EBD9                <1>   jmp .10L
   101                              <1> 
   102                              <1> .10E:
   103 00000356 5F                  <1>   pop edi
   104 00000357 5E                  <1>   pop esi
   105 00000358 5A                  <1>   pop edx
   106 00000359 59                  <1>   pop ecx
   107 0000035A 5B                  <1>   pop ebx
   108 0000035B 58                  <1>   pop eax
   109                              <1> 
   110 0000035C 89EC                <1>   mov esp, ebp
   111 0000035E 5D                  <1>   pop ebp
   112                              <1> 
   113 0000035F C3                  <1>   ret
    71                                  %include  "../modules/protect/draw_str.s"
    72                              <1> draw_str:
    73 00000360 55                  <1>   push ebp
    74 00000361 89E5                <1>   mov ebp, esp
    75                              <1> 
    76 00000363 50                  <1>   push eax
    77 00000364 53                  <1>   push ebx
    78 00000365 51                  <1>   push ecx
    79 00000366 52                  <1>   push edx
    80 00000367 56                  <1>   push esi
    81                              <1> 
    82 00000368 8B4D08              <1>   mov ecx, [ebp + 8]
    83 0000036B 8B550C              <1>   mov edx, [ebp + 12]
    84 0000036E 0FB75D10            <1>   movzx ebx, word [ebp + 16]
    85 00000372 8B7514              <1>   mov esi, [ebp + 20]
    86                              <1> 
    87 00000375 FC                  <1>   cld
    88                              <1> 
    89                              <1> .10L:
    90 00000376 AC                  <1>   lodsb
    91 00000377 3C00                <1>   cmp al, 0
    92 00000379 7425                <1>   je .10E
    93 0000037B 50535251E8D3FEFFFF- <1>   cdecl draw_char, ecx, edx, ebx, eax
    93 00000384 6683C410            <1>
    94                              <1> 
    95 00000388 41                  <1>   inc ecx
    96 00000389 83F950              <1>   cmp ecx, 80
    97 0000038C 7C10                <1>   jl .12E
    98 0000038E B900000000          <1>   mov ecx, 0
    99 00000393 42                  <1>   inc edx
   100 00000394 83FA1E              <1>   cmp edx, 30
   101 00000397 7C05                <1>   jl .12E
   102 00000399 BA00000000          <1>   mov edx, 0
   103                              <1> .12E:
   104 0000039E EBD6                <1>   jmp .10L
   105                              <1> .10E:
   106 000003A0 5E                  <1>   pop esi
   107 000003A1 5A                  <1>   pop edx
   108 000003A2 59                  <1>   pop ecx
   109 000003A3 5B                  <1>   pop ebx
   110 000003A4 58                  <1>   pop eax
   111                              <1> 
   112 000003A5 89EC                <1>   mov esp, ebp
   113 000003A7 5D                  <1>   pop ebp
   114                              <1> 
   115 000003A8 C3                  <1>   ret
    72                                  %include "../modules/protect/draw_color_bar.s"
    73                              <1> draw_color_bar:
    74 000003A9 55                  <1>   push ebp
    75 000003AA 89E5                <1>   mov ebp, esp
    76                              <1> 
    77 000003AC 50                  <1>   push eax
    78 000003AD 53                  <1>   push ebx
    79 000003AE 51                  <1>   push ecx
    80 000003AF 52                  <1>   push edx
    81 000003B0 56                  <1>   push esi
    82 000003B1 57                  <1>   push edi
    83                              <1> 
    84 000003B2 8B7508              <1>   mov esi, [ebp + 8]
    85 000003B5 8B7B0C              <1>   mov edi, [ebx + 12]
    86                              <1> 
    87 000003B8 B900000000          <1>   mov ecx, 0
    88                              <1> 
    89                              <1> .10L:
    90 000003BD 83F910              <1>   cmp ecx, 16
    91 000003C0 732E                <1>   jae .10E
    92                              <1> 
    93 000003C2 89C8                <1>   mov eax, ecx
    94 000003C4 83E001              <1>   and eax, 0x01
    95 000003C7 C1E003              <1>   shl eax, 3
    96 000003CA 01F0                <1>   add eax, esi
    97                              <1> 
    98 000003CC 89CB                <1>   mov ebx, ecx
    99 000003CE D1EB                <1>   shr ebx, 1
   100 000003D0 01FB                <1>   add ebx, edi
   101                              <1> 
   102 000003D2 89CA                <1>   mov edx, ecx
   103 000003D4 D1E2                <1>   shl edx, 1
   104 000003D6 8B92[03040000]      <1>   mov edx, [.t0 + edx]
   105                              <1> 
   106 000003DC 68[FA030000]525350- <1>   cdecl draw_str, eax, ebx, edx, .s0
   106 000003E4 E877FFFFFF6683C410  <1>
   107                              <1> 
   108 000003ED 41                  <1>   inc ecx
   109 000003EE EBCD                <1>   jmp .10L
   110                              <1> .10E:
   111 000003F0 5F                  <1>   pop edi
   112 000003F1 5E                  <1>   pop esi
   113 000003F2 5A                  <1>   pop edx
   114 000003F3 59                  <1>   pop ecx
   115 000003F4 5B                  <1>   pop ebx
   116 000003F5 58                  <1>   pop eax
   117                              <1> 
   118 000003F6 89EC                <1>   mov esp, ebp
   119 000003F8 5D                  <1>   pop ebp
   120                              <1> 
   121 000003F9 C3                  <1>   ret
   122                              <1> 
   123 000003FA 202020202020202000  <1> .s0:	db '        ', 0
   124                              <1> 
   125                              <1> .t0:
   126 00000403 00000008            <1>   dw	0x0000, 0x0800
   127 00000407 00010009            <1> 	dw	0x0100, 0x0900
   128 0000040B 0002000A            <1> 	dw	0x0200, 0x0A00
   129 0000040F 0003000B            <1> 	dw	0x0300, 0x0B00
   130 00000413 0004000C            <1> 	dw	0x0400, 0x0C00
   131 00000417 0005000D            <1> 	dw	0x0500, 0x0D00
   132 0000041B 0006000E            <1> 	dw	0x0600, 0x0E00
   133 0000041F 0007000F            <1> 	dw	0x0700, 0x0F00
    73                                  %include  "../modules/protect/draw_pixel.s"
    74                              <1> draw_pixel:
    75 00000423 55                  <1>   push ebp
    76 00000424 89E5                <1>   mov ebp, esp
    77 00000426 50                  <1>   push eax
    78 00000427 53                  <1>   push ebx
    79 00000428 51                  <1>   push ecx
    80 00000429 57                  <1>   push edi
    81                              <1> 
    82 0000042A 8B7D0C              <1>   mov edi, [ebp + 12]
    83 0000042D C1E704              <1>   shl edi, 4
    84 00000430 8DBCBF00000A00      <1>   lea edi, [edi * 4 + edi + 0xA_0000]
    85 00000437 8B5D08              <1>   mov ebx, [ebp + 8]
    86 0000043A 89D9                <1>   mov ecx, ebx
    87 0000043C C1EB03              <1>   shr ebx, 3
    88 0000043F 01DF                <1>   add edi, ebx
    89                              <1> 
    90 00000441 83E107              <1>   and ecx, 0x07
    91 00000444 BB80000000          <1>   mov ebx, 0x80
    92 00000449 D3EB                <1>   shr ebx, cl
    93                              <1> 
    94 0000044B 8B4D10              <1>   mov ecx, [ebp + 16]
    95                              <1> 
    96 0000044E 6A03E84BFDFFFF6683- <1>   cdecl vga_set_read_plane, 0x03
    96 00000457 C404                <1>
    97 00000459 6A08E859FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x08
    97 00000462 C404                <1>
    98 00000464 516A085753E8B7FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    98 0000046D FF6683C410          <1>
    99                              <1> 
   100 00000472 6A02E827FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x02
   100 0000047B C404                <1>
   101 0000047D 6A04E835FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x04
   101 00000486 C404                <1>
   102 00000488 516A045753E893FDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x04, ecx
   102 00000491 FF6683C410          <1>
   103                              <1> 
   104 00000496 6A01E803FDFFFF6683- <1>   cdecl vga_set_read_plane, 0x01
   104 0000049F C404                <1>
   105 000004A1 6A02E811FDFFFF6683- <1>   cdecl vga_set_write_plane, 0x02
   105 000004AA C404                <1>
   106 000004AC 516A025753E86FFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x02, ecx
   106 000004B5 FF6683C410          <1>
   107                              <1> 
   108 000004BA 6A00E8DFFCFFFF6683- <1>   cdecl vga_set_read_plane, 0x00
   108 000004C3 C404                <1>
   109 000004C5 6A01E8EDFCFFFF6683- <1>   cdecl vga_set_write_plane, 0x01
   109 000004CE C404                <1>
   110 000004D0 516A015753E84BFDFF- <1>   cdecl vram_bit_copy, ebx, edi, 0x01, ecx
   110 000004D9 FF6683C410          <1>
   111                              <1> 
   112 000004DE 5F                  <1>   pop edi
   113 000004DF 59                  <1>   pop ecx
   114 000004E0 5B                  <1>   pop ebx
   115 000004E1 58                  <1>   pop eax
   116                              <1> 
   117 000004E2 89EC                <1>   mov esp, ebp
   118 000004E4 5D                  <1>   pop ebp
   119 000004E5 C3                  <1>   ret
    74                                  %include  "../modules/protect/draw_line.s"
    75                              <1> draw_line:
    76 000004E6 55                  <1>   push ebp
    77 000004E7 89E5                <1>   mov ebp, esp
    78                              <1> 
    79 000004E9 6A00                <1>   push dword 0
    80 000004EB 6A00                <1>   push dword 0
    81 000004ED 6A00                <1>   push dword 0
    82 000004EF 6A00                <1>   push dword 0
    83 000004F1 6A00                <1>   push dword 0
    84 000004F3 6A00                <1>   push dword 0
    85 000004F5 6A00                <1>   push dword 0
    86                              <1> 
    87 000004F7 50                  <1>   push eax
    88 000004F8 53                  <1>   push ebx
    89 000004F9 51                  <1>   push ecx
    90 000004FA 52                  <1>   push edx
    91 000004FB 56                  <1>   push esi
    92 000004FC 57                  <1>   push edi
    93                              <1> 
    94 000004FD 8B4508              <1>   mov eax, [ebp + 8]
    95 00000500 8B5D10              <1>   mov ebx, [ebp + 16]
    96 00000503 29C3                <1>   sub ebx, eax
    97 00000505 7D09                <1>   jge .10F
    98                              <1> 
    99 00000507 F7DB                <1>   neg ebx
   100 00000509 BEFFFFFFFF          <1>   mov esi, -1
   101 0000050E EB05                <1>   jmp .10E
   102                              <1> .10F:
   103 00000510 BE01000000          <1>   mov esi, 1
   104                              <1> .10E:
   105 00000515 8B4D0C              <1>   mov ecx, [ebp + 12]
   106 00000518 8B5514              <1>   mov edx, [ebp + 20]
   107 0000051B 29CA                <1>   sub edx, ecx
   108 0000051D 7D09                <1>   jge .20F
   109                              <1> 
   110 0000051F F7DA                <1>   neg edx
   111 00000521 BFFFFFFFFF          <1>   mov edi, -1
   112 00000526 EB05                <1>   jmp .20E
   113                              <1> .20F:
   114 00000528 BF01000000          <1>   mov edi, 1
   115                              <1> .20E:
   116 0000052D 8945F8              <1>   mov [ebp - 8], eax
   117 00000530 895DF4              <1>   mov [ebp - 12], ebx
   118 00000533 8975F0              <1>   mov [ebp - 16], esi
   119                              <1> 
   120 00000536 894DEC              <1>   mov [ebp - 20], ecx
   121 00000539 8955E8              <1>   mov [ebp - 24], edx
   122 0000053C 897DE4              <1>   mov [ebp - 28], edi
   123                              <1> 
   124 0000053F 39D3                <1>   cmp ebx, edx
   125 00000541 7F08                <1>   jg .22F
   126                              <1> 
   127 00000543 8D75EC              <1>   lea esi, [ebp - 20]
   128 00000546 8D7DF8              <1>   lea edi, [ebp - 8]
   129                              <1> 
   130 00000549 EB06                <1>   jmp .22E
   131                              <1> .22F:
   132 0000054B 8D75F8              <1>   lea esi, [ebp - 8]
   133 0000054E 8D7DEC              <1>   lea edi, [ebp - 20]
   134                              <1> .22E:
   135 00000551 8B4EFC              <1>   mov ecx, [esi - 4]
   136 00000554 83F900              <1>   cmp ecx, 0
   137 00000557 7505                <1>   jnz .30E
   138 00000559 B901000000          <1>   mov ecx, 1
   139                              <1> .30E:
   140                              <1> .50L:
   141 0000055E FF7518FF75ECFF75F8- <1>   cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   141 00000567 E8B7FEFFFF6683C40C  <1>
   142                              <1> 
   143 00000570 8B46F8              <1>   mov eax, [esi - 8]
   144 00000573 0106                <1>   add [esi - 0], eax
   145                              <1> 
   146 00000575 8B45FC              <1>   mov eax, [ebp - 4]
   147 00000578 0347FC              <1>   add eax, [edi - 4]
   148 0000057B 8B5EFC              <1>   mov ebx, [esi - 4]
   149                              <1> 
   150 0000057E 39D8                <1>   cmp eax, ebx
   151 00000580 7C07                <1>   jl .52E
   152 00000582 29D8                <1>   sub eax, ebx
   153                              <1> 
   154 00000584 8B5FF8              <1>   mov ebx, [edi - 8]
   155 00000587 011F                <1>   add [edi - 0], ebx
   156                              <1> 
   157                              <1> .52E:
   158 00000589 8945FC              <1>   mov [ebp - 4], eax
   159 0000058C E2D0                <1>   loop .50L
   160                              <1> 
   161                              <1> .50E:
   162 0000058E 5F                  <1>   pop edi
   163 0000058F 5E                  <1>   pop esi
   164 00000590 5A                  <1>   pop edx
   165 00000591 59                  <1>   pop ecx
   166 00000592 5B                  <1>   pop ebx
   167 00000593 58                  <1>   pop eax
   168                              <1> 
   169 00000594 89EC                <1>   mov esp, ebp
   170 00000596 5D                  <1>   pop ebp
   171 00000597 C3                  <1>   ret
    75                                  %include 	"../modules/protect/draw_rect.s"
    76                              <1> draw_rect:
    77 00000598 55                  <1>   push ebp
    78 00000599 89E5                <1>   mov ebp, esp
    79                              <1> 
    80 0000059B 50                  <1>   push eax
    81 0000059C 53                  <1>   push ebx
    82 0000059D 51                  <1>   push ecx
    83 0000059E 52                  <1>   push edx
    84 0000059F 56                  <1>   push esi
    85 000005A0 57                  <1>   push edi
    86                              <1> 
    87 000005A1 8B4508              <1>   mov eax, [ebp + 8]
    88 000005A4 8B5D0C              <1>   mov ebx, [ebp + 12]
    89 000005A7 8B4D10              <1>   mov ecx, [ebp + 16]
    90 000005AA 8B5514              <1>   mov edx, [ebp + 20]
    91 000005AD 8B7518              <1>   mov esi, [ebp + 24]
    92                              <1> 
    93 000005B0 39C8                <1>   cmp eax, ecx
    94 000005B2 7C01                <1>   jl .10E
    95 000005B4 91                  <1>   xchg eax, ecx
    96                              <1> 
    97                              <1> .10E:
    98 000005B5 39D3                <1>   cmp ebx, edx
    99 000005B7 7C02                <1>   jl .20E
   100 000005B9 87DA                <1>   xchg ebx, edx
   101                              <1> .20E:
   102 000005BB 5653515350E821FFFF- <1>   cdecl draw_line, eax, ebx, ecx, ebx, esi
   102 000005C4 FF6683C414          <1>
   103 000005C9 5652505350E813FFFF- <1>   cdecl draw_line, eax, ebx, eax, edx, esi
   103 000005D2 FF6683C414          <1>
   104                              <1> 
   105 000005D7 4A                  <1>   dec edx
   106 000005D8 5652515250E804FFFF- <1>   cdecl draw_line, eax, edx, ecx, edx, esi
   106 000005E1 FF6683C414          <1>
   107 000005E6 42                  <1>   inc edx
   108                              <1> 
   109 000005E7 49                  <1>   dec ecx
   110 000005E8 5652515351E8F4FEFF- <1>   cdecl draw_line, ecx, ebx, ecx, edx, esi
   110 000005F1 FF6683C414          <1>
   111                              <1> 
   112 000005F6 5F                  <1>   pop edi
   113 000005F7 5E                  <1>   pop esi
   114 000005F8 5A                  <1>   pop edx
   115 000005F9 59                  <1>   pop ecx
   116 000005FA 5B                  <1>   pop ebx
   117 000005FB 58                  <1>   pop eax
   118                              <1> 
   119 000005FC 89EC                <1>   mov esp, ebp
   120 000005FE 5D                  <1>   pop ebp
   121                              <1> 
   122 000005FF C3                  <1>   ret
    76                                  %include  "../modules/protect/itoa.s"
    77                              <1> itoa:
    78 00000600 55                  <1>   push ebp
    79 00000601 89E5                <1>   mov ebp, esp
    80                              <1> 
    81 00000603 50                  <1>   push eax
    82 00000604 53                  <1>   push ebx
    83 00000605 51                  <1>   push ecx
    84 00000606 52                  <1>   push edx
    85 00000607 56                  <1>   push esi
    86 00000608 57                  <1>   push edi
    87                              <1> 
    88 00000609 8B4508              <1>   mov eax, [ebp + 8]
    89 0000060C 8B750C              <1>   mov esi, [ebp + 12]
    90 0000060F 8B4D10              <1>   mov ecx, [ebp + 16]
    91                              <1> 
    92 00000612 89F7                <1>   mov edi, esi
    93 00000614 01CF                <1>   add edi, ecx
    94 00000616 4F                  <1>   dec edi
    95                              <1> 
    96 00000617 8B5D18              <1>   mov ebx, [ebp + 24]
    97                              <1> 
    98 0000061A 66F7C30100          <1>   test bx, 0b0001
    99                              <1> .10Q:
   100 0000061F 7408                <1>   je .10E
   101 00000621 83F800              <1>   cmp eax, 0
   102                              <1> .12Q:
   103 00000624 7D03                <1>   jge .12E
   104 00000626 83CB02              <1>   or ebx, 0b0010
   105                              <1> .12E:
   106                              <1> .10E:
   107 00000629 F7C302000000        <1>   test ebx, 0b0010
   108                              <1> .20Q:
   109 0000062F 7410                <1>   je .20E
   110 00000631 83F800              <1>   cmp eax, 0
   111                              <1> .22Q:
   112 00000634 7D07                <1>   jge .22F
   113 00000636 F7D8                <1>   neg eax
   114 00000638 C6062D              <1>   mov [esi], byte '-'
   115 0000063B EB03                <1>   jmp .22E
   116                              <1> .22F:
   117 0000063D C6062B              <1>   mov [esi], byte '+'
   118                              <1> .22E:
   119 00000640 49                  <1>   dec ecx
   120                              <1> .20E:
   121 00000641 8B5D14              <1>   mov ebx, [ebp + 20]
   122                              <1> .30L:
   123 00000644 BA00000000          <1>   mov edx, 0
   124 00000649 F7F3                <1>   div ebx
   125                              <1> 
   126 0000064B 89D6                <1>   mov esi, edx
   127 0000064D 8A96[78060000]      <1>   mov dl, byte [.ascii + esi]
   128 00000653 8817                <1>   mov [edi], dl
   129 00000655 4F                  <1>   dec edi
   130 00000656 83F800              <1>   cmp eax, 0
   131 00000659 E0E9                <1>   loopnz .30L
   132                              <1> .30E:
   133 0000065B 83F900              <1>   cmp ecx, 0
   134                              <1> .40Q:
   135 0000065E 740E                <1>   je .40E
   136 00000660 B020                <1>   mov al, ' '
   137 00000662 66837D1804          <1>   cmp [ebp + 24], word 0b0100
   138                              <1> .42Q:
   139 00000667 7502                <1>   jne .42E
   140 00000669 B030                <1>   mov al, '0'
   141                              <1> .42E:
   142 0000066B FD                  <1>   std
   143 0000066C F3AA                <1>   rep stosb
   144                              <1> .40E:
   145 0000066E 5F                  <1>   pop edi
   146 0000066F 5E                  <1>   pop esi
   147 00000670 5A                  <1>   pop edx
   148 00000671 59                  <1>   pop ecx
   149 00000672 5B                  <1>   pop ebx
   150 00000673 58                  <1>   pop eax
   151                              <1> 
   152 00000674 89EC                <1>   mov esp, ebp
   153 00000676 5D                  <1>   pop ebp
   154 00000677 C3                  <1>   ret
   155                              <1> 
   156 00000678 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"
   156 00000681 39414243444546      <1>
    77                                  %include "../modules/protect/rtc.s"
    78                              <1> rtc_get_time:
    79 00000688 55                  <1>   push ebp
    80 00000689 89E5                <1>   mov ebp, esp
    81                              <1> 
    82 0000068B 53                  <1>   push ebx
    83                              <1> 
    84 0000068C B00A                <1>   mov al, 0x0A
    85 0000068E E670                <1>   out 0x70, al
    86 00000690 E471                <1>   in al, 0x71
    87 00000692 A880                <1>   test al, 0x80
    88 00000694 7407                <1>   je .10F
    89 00000696 B801000000          <1>   mov eax, 1
    90 0000069B EB27                <1>   jmp .10E
    91                              <1> .10F:
    92 0000069D B004                <1>   mov al, 0x04
    93 0000069F E670                <1>   out 0x70, al
    94 000006A1 E471                <1>   in al, 0x71
    95                              <1> 
    96 000006A3 C1E008              <1>   shl eax, 8
    97                              <1> 
    98 000006A6 B002                <1>   mov al, 0x02
    99 000006A8 E670                <1>   out 0x70, al
   100 000006AA E471                <1>   in al, 0x71
   101                              <1> 
   102 000006AC C1E008              <1>   shl eax, 8
   103                              <1> 
   104 000006AF B000                <1>   mov al, 0x00
   105 000006B1 E670                <1>   out 0x70, al
   106 000006B3 E471                <1>   in al, 0x71
   107                              <1> 
   108 000006B5 25FFFFFF00          <1>   and eax, 0x00_FF_FF_FF
   109                              <1> 
   110 000006BA 8B5D08              <1>   mov ebx, [ebp + 8]
   111 000006BD 8903                <1>   mov [ebx], eax
   112 000006BF B808000000          <1>   mov eax, 8
   113                              <1> .10E:
   114 000006C4 5B                  <1>   pop ebx
   115                              <1> 
   116 000006C5 89EC                <1>   mov esp, ebp
   117 000006C7 5D                  <1>   pop ebp
   118                              <1> 
   119 000006C8 C3                  <1>   ret
    78                                  %include "../modules/protect/draw_time.s"
    79                              <1> draw_time:
    80 000006C9 55                  <1>   push ebp
    81 000006CA 89E5                <1>   mov ebp, esp
    82                              <1> 
    83 000006CC 50                  <1>   push eax
    84 000006CD 53                  <1>   push ebx
    85                              <1> 
    86 000006CE 8B4514              <1>   mov eax, [ebp + 20]
    87 000006D1 3B05[4E070000]      <1>   cmp eax, [.last]
    88 000006D7 7467                <1>   je .10E
    89 000006D9 A3[4E070000]        <1>   mov [.last], eax
    90                              <1> 
    91 000006DE BB00000000          <1>   mov ebx, 0
    92 000006E3 88C3                <1>   mov bl, al
    93 000006E5 6A046A106A0268-     <1>   cdecl itoa, ebx, .sec, 2, 16, 0b0100
    93 000006EC [5C070000]53E80AFF- <1>
    93 000006F4 FFFF6683C414        <1>
    94                              <1> 
    95 000006FA 88E3                <1>   mov bl, ah
    96 000006FC 6A046A106A0268-     <1>   cdecl itoa, ebx, .min, 2, 16, 0b0100
    96 00000703 [59070000]53E8F3FE- <1>
    96 0000070B FFFF6683C414        <1>
    97                              <1> 
    98 00000711 C1E810              <1>   shr eax, 16
    99 00000714 6A046A106A0268-     <1>   cdecl itoa, eax, .hour, 2, 16, 0b0100
    99 0000071B [56070000]50E8DBFE- <1>
    99 00000723 FFFF6683C414        <1>
   100                              <1> 
   101 00000729 68[56070000]FF7510- <1>   cdecl draw_str, dword[ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
   101 00000731 FF750CFF7508E824FC- <1>
   101 0000073A FFFF6683C410        <1>
   102                              <1> .10E:
   103 00000740 5B                  <1>   pop ebx
   104 00000741 58                  <1>   pop eax
   105                              <1> 
   106 00000742 89EC                <1>   mov esp, ebp
   107 00000744 5D                  <1>   pop ebp
   108                              <1> 
   109 00000745 C3                  <1>   ret
   110                              <1> 
   111                              <1> ALIGN 2, db 0
   112 00000746 0000000000000000    <1> .temp:	dq	0
   113 0000074E 0000000000000000    <1> .last:	dq	0
   114 00000756 5A5A3A              <1> .hour:	db	"ZZ:"
   115 00000759 5A5A3A              <1> .min:	db	"ZZ:"
   116 0000075C 5A5A00              <1> .sec:	db	"ZZ", 0
    79                                  %include  "../modules/protect/interrupt.s"
    80 0000075F 90                  <1> ALIGN 4
    81 00000760 FF07                <1> IDTR:	dw 		8 * 256 - 1
    82 00000762 00001000            <1> 		dd 		VECT_BASE
    83                              <1> 
    84                              <1> init_int:
    85 00000766 50                  <1> 	push	eax
    86 00000767 53                  <1> 	push	ebx
    87 00000768 51                  <1> 	push	ecx
    88 00000769 57                  <1> 	push	edi
    89                              <1> 
    90 0000076A 8D05[B0080000]      <1> 	lea		eax, [int_default]
    91 00000770 BB008E0800          <1> 	mov		ebx, 0x0008_8E00
    92 00000775 6693                <1> 	xchg	ax, bx
    93 00000777 B900010000          <1> 	mov		ecx, 256
    94 0000077C BF00001000          <1> 	mov		edi, VECT_BASE
    95                              <1> 
    96                              <1> .10L:
    97 00000781 891F                <1> 	mov		[edi + 0], ebx
    98 00000783 894704              <1> 	mov		[edi + 4], eax
    99 00000786 83C708              <1> 	add		edi, 8
   100 00000789 E2F6                <1> 	loop	.10L
   101 0000078B 0F011D[60070000]    <1> 	lidt	[IDTR]
   102                              <1> 
   103 00000792 5F                  <1> 	pop		edi
   104 00000793 59                  <1> 	pop		ecx
   105 00000794 5B                  <1> 	pop		ebx
   106 00000795 58                  <1> 	pop		eax
   107                              <1> 
   108 00000796 C3                  <1> 	ret
   109                              <1> 
   110                              <1> int_stop:
   111 00000797 FB                  <1> 	sti
   112                              <1> 
   113 00000798 50680F0600006A0F6A- <1> 	cdecl	draw_str, 25, 15, 0x060F, eax
   113 000007A1 19E8B9FBFFFF6683C4- <1>
   113 000007AA 10                  <1>
   114 000007AB 8B0424              <1> 	mov		eax, [esp + 0]
   115 000007AE 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p1, 8, 16, 0b0100
   115 000007B5 [73080000]50E841FE- <1>
   115 000007BD FFFF6683C414        <1>
   116 000007C3 8B442404            <1> 	mov		eax, [esp + 4]
   117 000007C7 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p2, 8, 16, 0b0100
   117 000007CE [84080000]50E828FE- <1>
   117 000007D6 FFFF6683C414        <1>
   118                              <1> 
   119 000007DC 8B442408            <1> 	mov		eax, [esp + 8]
   120 000007E0 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p3, 8, 16, 0b0100
   120 000007E7 [95080000]50E80FFE- <1>
   120 000007EF FFFF6683C414        <1>
   121                              <1> 
   122 000007F5 8B44240C            <1> 	mov		eax, [esp +12]
   123 000007F9 6A046A106A0868-     <1> 	cdecl	itoa, eax, .p4, 8, 16, 0b0100
   123 00000800 [A6080000]50E8F6FD- <1>
   123 00000808 FFFF6683C414        <1>
   124                              <1> 
   125 0000080E 68[6C080000]68040F- <1> 	cdecl	draw_str, 25, 16, 0x0F04, .s1
   125 00000816 00006A106A19E83FFB- <1>
   125 0000081F FFFF6683C410        <1>
   126 00000825 68[7D080000]68040F- <1> 	cdecl	draw_str, 25, 17, 0x0F04, .s2
   126 0000082D 00006A116A19E828FB- <1>
   126 00000836 FFFF6683C410        <1>
   127 0000083C 68[8E080000]68040F- <1> 	cdecl	draw_str, 25, 18, 0x0F04, .s3
   127 00000844 00006A126A19E811FB- <1>
   127 0000084D FFFF6683C410        <1>
   128 00000853 68[9F080000]68040F- <1> 	cdecl	draw_str, 25, 19, 0x0F04, .s4
   128 0000085B 00006A136A19E8FAFA- <1>
   128 00000864 FFFF6683C410        <1>
   129                              <1> 
   130 0000086A EBFE                <1> 	jmp		$
   131                              <1> 
   132 0000086C 4553502B20303A      <1> .s1		db	"ESP+ 0:"
   133 00000873 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
   133 0000087C 00                  <1>
   134 0000087D 2020202B20343A      <1> .s2		db	"   + 4:"
   135 00000884 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
   135 0000088D 00                  <1>
   136 0000088E 2020202B20383A      <1> .s3		db	"   + 8:"
   137 00000895 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
   137 0000089E 00                  <1>
   138 0000089F 2020202B31323A      <1> .s4		db	"   +12:"
   139 000008A6 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
   139 000008AF 00                  <1>
   140                              <1> 
   141                              <1> int_default:
   142 000008B0 9C                  <1> 	pushf
   143 000008B1 0E                  <1> 	push	cs
   144 000008B2 68[97070000]        <1> 	push	int_stop
   145                              <1> 
   146 000008B7 B8[BD080000]        <1> 	mov		eax, .s0
   147 000008BC CF                  <1> 	iret
   148                              <1> 
   149 000008BD 203C2020202053544F- <1> .s0		db	" <    STOP    > ", 0
   149 000008C6 50202020203E2000    <1>
   150                              <1> 
   151                              <1> int_zero_div:
   152 000008CE 9C                  <1> 	pushf
   153 000008CF 0E                  <1> 	push	cs
   154 000008D0 68[97070000]        <1> 	push	int_stop
   155                              <1> 
   156 000008D5 B8[DB080000]        <1> 	mov		eax, .s0
   157 000008DA CF                  <1> 	iret
   158                              <1> 
   159 000008DB 203C20205A45524F20- <1> .s0		db	" <  ZERO DIV  > ", 0
   159 000008E4 44495620203E2000    <1>
    80                                  %include  "../modules/protect/pic.s"
    81                              <1> init_pic:
    82 000008EC 50                  <1>   push eax
    83                              <1> 
    84                              <1>   outp 0x20, 0x11
    38 000008ED B011                <2>  mov al, %2
    39 000008EF E620                <2>  out %1, al
    85                              <1>   outp 0x21, 0x20
    38 000008F1 B020                <2>  mov al, %2
    39 000008F3 E621                <2>  out %1, al
    86                              <1>   outp 0x21, 0x04
    38 000008F5 B004                <2>  mov al, %2
    39 000008F7 E621                <2>  out %1, al
    87                              <1>   outp 0x21, 0x05
    38 000008F9 B005                <2>  mov al, %2
    39 000008FB E621                <2>  out %1, al
    88                              <1>   outp 0x21, 0xFF
    38 000008FD B0FF                <2>  mov al, %2
    39 000008FF E621                <2>  out %1, al
    89                              <1> 
    90                              <1>   outp 0xA0, 0x11
    38 00000901 B011                <2>  mov al, %2
    39 00000903 E6A0                <2>  out %1, al
    91                              <1>   outp 0xA1, 0x28
    38 00000905 B028                <2>  mov al, %2
    39 00000907 E6A1                <2>  out %1, al
    92                              <1>   outp 0xA1, 0x02
    38 00000909 B002                <2>  mov al, %2
    39 0000090B E6A1                <2>  out %1, al
    93                              <1>   outp 0xA1, 0x01
    38 0000090D B001                <2>  mov al, %2
    39 0000090F E6A1                <2>  out %1, al
    94                              <1>   outp 0xA1, 0xFF
    38 00000911 B0FF                <2>  mov al, %2
    39 00000913 E6A1                <2>  out %1, al
    95                              <1> 
    96 00000915 58                  <1>   pop eax
    97                              <1> 
    98 00000916 C3                  <1>   ret
    81                                  %include  "../modules/protect/int_rtc.s"
    82                              <1> rtc_int_en:
    83 00000917 55                  <1>   push ebp
    84 00000918 89E5                <1>   mov ebp, esp
    85                              <1> 
    86                              <1>   outp 0x70, 0x0B
    38 0000091A B00B                <2>  mov al, %2
    39 0000091C E670                <2>  out %1, al
    87 0000091E E471                <1>   in al, 0x71
    88 00000920 0A4508              <1>   or al, [ebp + 8]
    89 00000923 E671                <1>   out 0x71, al
    90                              <1> 
    91 00000925 58                  <1>   pop eax
    92 00000926 89EC                <1>   mov esp, ebp
    93 00000928 5D                  <1>   pop ebp
    94 00000929 C3                  <1>   ret
    95                              <1> 
    96                              <1> int_rtc:
    97 0000092A 60                  <1>   pusha
    98 0000092B 1E                  <1>   push ds
    99 0000092C 06                  <1>   push es
   100                              <1> 
   101 0000092D 66B81000            <1>   mov ax, 0x0010
   102 00000931 8ED8                <1>   mov ds, ax
   103 00000933 8EC0                <1>   mov es, ax
   104                              <1> 
   105 00000935 68[9C010000]E849FD- <1>   cdecl rtc_get_time, RTC_TIME
   105 0000093D FFFF6683C404        <1>
   106                              <1>   outp 0x70, 0x0C
    38 00000943 B00C                <2>  mov al, %2
    39 00000945 E670                <2>  out %1, al
   107 00000947 E471                <1>   in al, 0x71
   108                              <1> 
   109 00000949 B020                <1>   mov al, 0x20
   110 0000094B E6A0                <1>   out 0xA0, al
   111 0000094D E620                <1>   out 0x20, al
   112                              <1> 
   113 0000094F 07                  <1>   pop es
   114 00000950 1F                  <1>   pop ds
   115 00000951 61                  <1>   popa
   116 00000952 CF                  <1>   iret
   117                              <1> 
    82                                  %include  "../modules/protect/ring_buff.s"
    83                              <1> ring_rd:
    84 00000953 55                  <1>   push ebp
    85 00000954 89E5                <1>   mov ebp, esp
    86                              <1> 
    87 00000956 53                  <1>   push ebx
    88 00000957 56                  <1>   push esi
    89 00000958 57                  <1>   push edi
    90                              <1> 
    91 00000959 8B7508              <1>   mov esi, [ebp + 8]
    92 0000095C 8B7D0C              <1> 	mov edi, [ebp +12]
    93                              <1> 
    94 0000095F B800000000          <1>   mov eax, 0
    95 00000964 8B1E                <1>   mov ebx, [esi + ring_buff.rp]
    96 00000966 3B5E04              <1>   cmp ebx, [esi + ring_buff.wp]
    97 00000969 7411                <1>   je .10E
    98                              <1> 
    99 0000096B 8A441E08            <1>   mov al, [esi + ring_buff.item + ebx]
   100                              <1> 
   101 0000096F 8807                <1>   mov [edi], al
   102                              <1> 
   103 00000971 43                  <1>   inc ebx
   104 00000972 83E30F              <1>   and ebx, RING_INDEX_MASK
   105 00000975 891E                <1>   mov [esi + ring_buff.rp], ebx
   106 00000977 B801000000          <1>   mov eax, 1
   107                              <1> .10E:
   108 0000097C 5F                  <1>   pop edi
   109 0000097D 5E                  <1>   pop esi
   110 0000097E 5B                  <1>   pop ebx
   111                              <1> 
   112 0000097F 89EC                <1>   mov esp, ebp
   113 00000981 5D                  <1>   pop ebp
   114                              <1> 
   115 00000982 C3                  <1>   ret
   116                              <1> 
   117                              <1> ring_wr:
   118 00000983 55                  <1>   push ebp
   119 00000984 89E5                <1>   mov ebp, esp
   120                              <1> 
   121 00000986 53                  <1>   push ebx
   122 00000987 51                  <1>   push ecx
   123 00000988 56                  <1>   push esi
   124                              <1> 
   125 00000989 8B7508              <1>   mov esi, [ebp + 8]
   126                              <1> 
   127 0000098C B800000000          <1>   mov eax, 0
   128 00000991 8B5E04              <1>   mov ebx, [esi + ring_buff.wp]
   129 00000994 89D9                <1>   mov ecx, ebx
   130 00000996 41                  <1>   inc ecx
   131 00000997 83E10F              <1>   and ecx, RING_INDEX_MASK
   132                              <1> 
   133 0000099A 3B0E                <1>   cmp ecx, [esi + ring_buff.rp]
   134 0000099C 740F                <1>   je .10E
   135                              <1> 
   136 0000099E 8A450C              <1>   mov		al, [ebp +12]
   137                              <1> 
   138 000009A1 88441E08            <1>   mov [esi + ring_buff.item + ebx], al
   139 000009A5 894E04              <1>   mov [esi + ring_buff.wp], ecx
   140                              <1> 
   141 000009A8 B801000000          <1>   mov		eax, 1
   142                              <1> .10E:
   143 000009AD 5E                  <1>   pop esi
   144 000009AE 59                  <1>   pop ecx
   145 000009AF 5B                  <1>   pop ebx
   146                              <1> 
   147 000009B0 89EC                <1>   mov esp, ebp
   148 000009B2 5D                  <1>   pop ebp
   149 000009B3 C3                  <1>   ret
   150                              <1> 
   151                              <1> draw_key:
   152 000009B4 55                  <1>   push ebp
   153 000009B5 89E5                <1>   mov ebp, esp
   154                              <1> 
   155 000009B7 60                  <1>   pusha
   156                              <1> 
   157 000009B8 8B5508              <1>   mov edx, [ebp + 8]
   158 000009BB 8B7D0C              <1>   mov edi, [ebp + 12]
   159 000009BE 8B7510              <1>   mov esi, [ebp + 16]
   160                              <1> 
   161 000009C1 8B1E                <1>   mov ebx, [esi + ring_buff.rp]
   162 000009C3 8D7608              <1>   lea esi, [esi + ring_buff.item]
   163 000009C6 B910000000          <1>   mov ecx, RING_ITEM_SIZE
   164                              <1> 
   165                              <1> .10L:
   166 000009CB 4B                  <1>   dec ebx
   167 000009CC 83E30F              <1>   and ebx, RING_INDEX_MASK
   168 000009CF 8A041E              <1>   mov al, [esi + ebx]
   169                              <1> 
   170 000009D2 6A046A106A0268-     <1>   cdecl itoa, eax, .tmp, 2, 16, 0b0100
   170 000009D9 [030A0000]50E81DFC- <1>
   170 000009E1 FFFF6683C414        <1>
   171 000009E7 68[030A0000]6A0257- <1>   cdecl draw_str, edx, edi, 0x02, .tmp
   171 000009EF 52E86BF9FFFF6683C4- <1>
   171 000009F8 10                  <1>
   172                              <1> 
   173 000009F9 83C203              <1>   add edx, 3
   174                              <1> 
   175 000009FC E2CD                <1>   loop .10L
   176                              <1> .10E:
   177 000009FE 61                  <1>   popa
   178 000009FF 89EC                <1>   mov esp, ebp
   179 00000A01 5D                  <1>   pop ebp
   180                              <1> 
   181 00000A02 C3                  <1>   ret
   182 00000A03 2D2D2000            <1> .tmp db "-- ", 0
    83                                  %include "../modules/protect/int_keyboard.s"
    84                              <1> int_keyboard:
    85 00000A07 60                  <1>   pusha
    86 00000A08 1E                  <1>   push ds
    87 00000A09 06                  <1>   push es
    88                              <1> 
    89 00000A0A 66B81000            <1>   mov ax, 0x0010
    90 00000A0E 8ED8                <1>   mov ds, ax
    91 00000A10 8EC0                <1>   mov es, ax
    92                              <1> 
    93 00000A12 E460                <1>   in al, 0x60
    94                              <1> 
    95 00000A14 5068[2C0A0000]E864- <1>   cdecl ring_wr, _KEY_BUFF, eax
    95 00000A1C FFFFFF6683C408      <1>
    96                              <1>   outp 0x20, 0x20
    38 00000A23 B020                <2>  mov al, %2
    39 00000A25 E620                <2>  out %1, al
    97                              <1> 
    98 00000A27 07                  <1>   pop es
    99 00000A28 1F                  <1>   pop ds
   100 00000A29 61                  <1>   popa
   101 00000A2A CF                  <1>   iret
   102                              <1> 
   103 00000A2B 00                  <1> ALIGN 4, db 0
   104 00000A2C 00<rep 48h>         <1> _KEY_BUFF: times ring_buff_size db 0
    84                                  %include "modules/int_timer.s"
    85                              <1> int_timer:
    86 00000A74 60                  <1>   pushad
    87 00000A75 1E                  <1>   push ds
    88 00000A76 06                  <1>   push es
    89                              <1> 
    90 00000A77 66B81000            <1>   mov ax, 0x0010
    91 00000A7B 8ED8                <1>   mov ds, ax
    92 00000A7D 8EC0                <1>   mov es, ax
    93                              <1> 
    94 00000A7F FF05[900A0000]      <1>   inc dword [TIMER_COUNT]
    95                              <1>   outp 0x20, 0x20
    38 00000A85 B020                <2>  mov al, %2
    39 00000A87 E620                <2>  out %1, al
    96                              <1> 
    97 00000A89 07                  <1>   pop es
    98 00000A8A 1F                  <1>   pop ds
    99 00000A8B 61                  <1>   popad
   100                              <1> 
   101 00000A8C CF                  <1>   iret
   102                              <1> 
   103 00000A8D 00<rep 3h>          <1> ALIGN 4, db 0
   104 00000A90 0000000000000000    <1> TIMER_COUNT: dq 0
    85                                  %include "../modules/protect/timer.s"
    86                              <1> int_en_timer0:
    87 00000A98 50                  <1>   push eax
    88                              <1> 
    89                              <1>   outp 0x43, 0b_00_11_010_0
    38 00000A99 B034                <2>  mov al, %2
    39 00000A9B E643                <2>  out %1, al
    90                              <1>   outp 0x40, 0x9C
    38 00000A9D B09C                <2>  mov al, %2
    39 00000A9F E640                <2>  out %1, al
    91                              <1>   outp 0x40, 0x2E
    38 00000AA1 B02E                <2>  mov al, %2
    39 00000AA3 E640                <2>  out %1, al
    92                              <1> 
    93 00000AA5 58                  <1>   pop eax
    94                              <1> 
    95 00000AA6 C3                  <1>   ret
    86                                  %include "../modules/protect/draw_rotation_bar.s"
    87                              <1> draw_rotation_bar:
    88 00000AA7 50                  <1>   push eax
    89                              <1> 
    90 00000AA8 A1[900A0000]        <1>   mov eax, [TIMER_COUNT]
    91 00000AAD C1E804              <1>   shr eax, 4
    92 00000AB0 3B05[D80A0000]      <1>   cmp eax, [.index]
    93 00000AB6 741E                <1>   je .10E
    94                              <1> 
    95                              <1> 
    96 00000AB8 A3[D80A0000]        <1>   mov [.index], eax
    97 00000ABD 83E003              <1>   and eax, 0x03
    98                              <1> 
    99 00000AC0 8A80[DC0A0000]      <1>   mov al, [.table + eax]
   100 00000AC6 506A0F6A1D6A00E885- <1>   cdecl draw_char, 0, 29, 0x000F, eax
   100 00000ACF F7FFFF6683C410      <1>
   101                              <1> .10E:
   102 00000AD6 58                  <1>   pop eax
   103 00000AD7 C3                  <1>   ret
   104                              <1> 
   105                              <1> ALIGN 4, db 0
   106 00000AD8 00000000            <1> .index:		dd 0								; �O��l
   107 00000ADC 7C2F2D5C            <1> .table:		db	"|/-\"
    87                                  
    88                                  %include	"descriptor.s"
    89                              <1> ;************************************************************************
    90                              <1> ;	TSS
    91                              <1> ;************************************************************************
    92                              <1> TSS_0:
    93 00000AE0 00000000            <1> .link:			dd	0							;   0:�O�̃^�X�N�ւ̃����N
    94 00000AE4 00321000            <1> .esp0:			dd	SP_TASK_0 - 512				;*  4:ESP0
    95 00000AE8 10000000            <1> .ss0:			dd	DS_KERNEL					;*  8:
    96 00000AEC 00000000            <1> .esp1:			dd	0							;* 12:ESP1
    97 00000AF0 00000000            <1> .ss1:			dd	0							;* 16:
    98 00000AF4 00000000            <1> .esp2:			dd	0							;* 20:ESP2
    99 00000AF8 00000000            <1> .ss2:			dd	0							;* 24:
   100 00000AFC 00000000            <1> .cr3:			dd	0							;  28:CR3(PDBR)
   101 00000B00 00000000            <1> .eip:			dd	0							;  32:EIP
   102 00000B04 00000000            <1> .eflags:		dd	0							;  36:EFLAGS
   103 00000B08 00000000            <1> .eax:			dd	0							;  40:EAX
   104 00000B0C 00000000            <1> .ecx:			dd	0							;  44:ECX
   105 00000B10 00000000            <1> .edx:			dd	0							;  48:EDX
   106 00000B14 00000000            <1> .ebx:			dd	0							;  52:EBX
   107 00000B18 00000000            <1> .esp:			dd	0							;  56:ESP
   108 00000B1C 00000000            <1> .ebp:			dd	0							;  60:EBP
   109 00000B20 00000000            <1> .esi:			dd	0							;  64:ESI
   110 00000B24 00000000            <1> .edi:			dd	0							;  68:EDI
   111 00000B28 00000000            <1> .es:			dd	0							;  72:ES
   112 00000B2C 00000000            <1> .cs:			dd	0							;  76:CS
   113 00000B30 00000000            <1> .ss:			dd	0							;  80:SS
   114 00000B34 00000000            <1> .ds:			dd	0							;  84:DS
   115 00000B38 00000000            <1> .fs:			dd	0							;  88:FS
   116 00000B3C 00000000            <1> .gs:			dd	0							;  92:GS
   117 00000B40 00000000            <1> .ldt:			dd	0							;* 96:LDT�Z�O�����g�Z���N�^
   118 00000B44 00000000            <1> .io:			dd	0							; 100:I/O�}�b�v�x�[�X�A�h���X
   119                              <1> 
   120                              <1> TSS_1:
   121 00000B48 00000000            <1> .link:			dd	0							;   0:�O�̃^�X�N�ւ̃����N
   122 00000B4C 00361000            <1> .esp0:			dd	SP_TASK_1 - 512				;*  4:ESP0
   123 00000B50 10000000            <1> .ss0:			dd	DS_KERNEL					;*  8:
   124 00000B54 00000000            <1> .esp1:			dd	0							;* 12:ESP1
   125 00000B58 00000000            <1> .ss1:			dd	0							;* 16:
   126 00000B5C 00000000            <1> .esp2:			dd	0							;* 20:ESP2
   127 00000B60 00000000            <1> .ss2:			dd	0							;* 24:
   128 00000B64 00000000            <1> .cr3:			dd	0							;  28:CR3(PDBR)
   129 00000B68 [0E0C0000]          <1> .eip:			dd	task_1						;  32:EIP
   130 00000B6C 02020000            <1> .eflags:		dd	0x0202						;  36:EFLAGS
   131 00000B70 00000000            <1> .eax:			dd	0							;  40:EAX
   132 00000B74 00000000            <1> .ecx:			dd	0							;  44:ECX
   133 00000B78 00000000            <1> .edx:			dd	0							;  48:EDX
   134 00000B7C 00000000            <1> .ebx:			dd	0							;  52:EBX
   135 00000B80 00381000            <1> .esp:			dd	SP_TASK_1					;  56:ESP
   136 00000B84 00000000            <1> .ebp:			dd	0							;  60:EBP
   137 00000B88 00000000            <1> .esi:			dd	0							;  64:ESI
   138 00000B8C 00000000            <1> .edi:			dd	0							;  68:EDI
   139 00000B90 24000000            <1> .es:			dd	DS_TASK_1					;  72:ES
   140 00000B94 1C000000            <1> .cs:			dd	CS_TASK_1					;  76:CS
   141 00000B98 24000000            <1> .ss:			dd	DS_TASK_1					;  80:SS
   142 00000B9C 24000000            <1> .ds:			dd	DS_TASK_1					;  84:DS
   143 00000BA0 24000000            <1> .fs:			dd	DS_TASK_1					;  88:FS
   144 00000BA4 24000000            <1> .gs:			dd	DS_TASK_1					;  92:GS
   145 00000BA8 18000000            <1> .ldt:			dd	SS_LDT						;* 96:LDT�Z�O�����g�Z���N�^
   146 00000BAC 00000000            <1> .io:			dd	0							; 100:I/O�}�b�v�x�[�X�A�h���X
   147                              <1> 
   148                              <1> 
   149                              <1> ;************************************************************************
   150                              <1> ;	�O���[�o���f�B�X�N���v�^�e�[�u��
   151                              <1> ;************************************************************************
   152 00000BB0 0000000000000000    <1> GDT:			dq	0x0000000000000000			; NULL
   153 00000BB8 FFFF0000009ACF00    <1> .cs_kernel:		dq	0x00CF9A000000FFFF			; CODE 4G
   154 00000BC0 FFFF00000092CF00    <1> .ds_kernel:		dq	0x00CF92000000FFFF			; DATA 4G
   155 00000BC8 0000000000820000    <1> .ldt			dq	0x0000820000000000			; LDT�f�B�X�N���v�^
   156 00000BD0 6700000000890000    <1> .tss_0:			dq	0x0000890000000067			; TSS�f�B�X�N���v�^
   157 00000BD8 6700000000890000    <1> .tss_1:			dq	0x0000890000000067			; TSS�f�B�X�N���v�^
   158                              <1> .end:
   159                              <1> 
   160                              <1> CS_KERNEL		equ	.cs_kernel	- GDT
   161                              <1> DS_KERNEL		equ	.ds_kernel	- GDT
   162                              <1> SS_LDT			equ	.ldt		- GDT
   163                              <1> SS_TASK_0		equ	.tss_0		- GDT
   164                              <1> SS_TASK_1		equ	.tss_1		- GDT
   165                              <1> 
   166 00000BE0 2F00                <1> GDTR:	dw 		GDT.end - GDT - 1
   167 00000BE2 [B00B0000]          <1> 		dd 		GDT
   168                              <1> 
   169                              <1> 
   170                              <1> ;************************************************************************
   171                              <1> ;	���[�J���f�B�X�N���v�^�e�[�u��
   172                              <1> ;************************************************************************
   173 00000BE6 0000000000000000    <1> LDT:			dq	0x0000000000000000			; NULL
   174 00000BEE FFFF0000009ACF00    <1> .cs_task_0:		dq	0x00CF9A000000FFFF			; CODE 4G
   175 00000BF6 FFFF00000092CF00    <1> .ds_task_0:		dq	0x00CF92000000FFFF			; DATA 4G
   176 00000BFE FFFF0000009ACF00    <1> .cs_task_1:		dq	0x00CF9A000000FFFF			; CODE 4G
   177 00000C06 FFFF00000092CF00    <1> .ds_task_1:		dq	0x00CF92000000FFFF			; DATA 4G
   178                              <1> .end:
   179                              <1> 
   180                              <1> CS_TASK_0		equ	(.cs_task_0 - LDT) | 4		; �^�X�N0�pCS�Z���N�^
   181                              <1> DS_TASK_0		equ	(.ds_task_0 - LDT) | 4		; �^�X�N0�pDS�Z���N�^
   182                              <1> CS_TASK_1		equ	(.cs_task_1 - LDT) | 4		; �^�X�N1�pCS�Z���N�^
   183                              <1> DS_TASK_1		equ	(.ds_task_1 - LDT) | 4		; �^�X�N1�pDS�Z���N�^
   184                              <1> 
   185                              <1> LDT_LIMIT		equ	.end		- LDT - 1
    89                                  %include	"tasks/task_1.s"
    90                              <1> task_1:
    91 00000C0E 68[230C0000]6A076A- <1>   cdecl draw_str, 63, 0, 0x07, .s0
    91 00000C16 006A3FE842F7FFFF66- <1>
    91 00000C1F 83C410              <1>
    92 00000C22 CF                  <1>   iret
    93                              <1> 
    94 00000C23 5441534B2D3100      <1> .s0 db "TASK-1", 0
    90                                  
    91 00000C2A 00<rep 13D6h>             times KERNEL_SIZE - ($ - $$) db 0x00
